    Checking flex-error v0.4.1 (/home/zgrannan/flex-error/flex-error)
    Checking ibc v0.6.1 (/home/zgrannan/ibc-rs/modules)
warning: unused import: `TryInto`
 --> modules/src/application/ics20_fungible_token_transfer/msgs/transfer.rs:5:29
  |
5 | use std::convert::{TryFrom, TryInto};
  |                             ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `crate::ics04_channel::handler::send_packet::send_packet`
 --> modules/src/application/ics20_fungible_token_transfer/relay_application_logic/send_transfer.rs:8:5
  |
8 | use crate::ics04_channel::handler::send_packet::send_packet;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::packet::Packet`
 --> modules/src/application/ics20_fungible_token_transfer/relay_application_logic/send_transfer.rs:9:5
  |
9 | use crate::ics04_channel::packet::Packet;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> modules/src/events.rs:5:20
  |
5 | use serde_derive::{Deserialize, Serialize};
  |                    ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `serde::Serialize`
 --> modules/src/proofs.rs:1:5
  |
1 | use serde::Serialize;
  |     ^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> modules/src/signer.rs:5:13
  |
5 | use serde::{Deserialize, Serialize};
  |             ^^^^^^^^^^^  ^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> modules/src/timestamp.rs:12:20
   |
12 | use serde_derive::{Deserialize, Serialize};
   |                    ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `serde::Serialize`
 --> modules/src/ics02_client/client_consensus.rs:8:5
  |
8 | use serde::Serialize;
  |     ^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics23_commitment::commitment::CommitmentRoot`
  --> modules/src/ics02_client/client_consensus.rs:19:5
   |
19 | use crate::ics23_commitment::commitment::CommitmentRoot;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `TryInto`
 --> modules/src/ics02_client/client_state.rs:2:29
  |
2 | use std::convert::{TryFrom, TryInto};
  |                             ^^^^^^^

warning: unused import: `crate::ics24_host::error::ValidationError`
  --> modules/src/ics02_client/client_state.rs:17:5
   |
17 | use crate::ics24_host::error::ValidationError;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> modules/src/ics02_client/client_type.rs:5:20
  |
5 | use serde_derive::{Deserialize, Serialize};
  |                    ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `prost::Message`
 --> modules/src/ics02_client/events.rs:6:5
  |
6 | use prost::Message;
  |     ^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> modules/src/ics02_client/events.rs:7:20
  |
7 | use serde_derive::{Deserialize, Serialize};
  |                    ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `subtle_encoding::hex`
 --> modules/src/ics02_client/events.rs:8:5
  |
8 | use subtle_encoding::hex;
  |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tendermint_proto::Protobuf`
 --> modules/src/ics02_client/events.rs:9:5
  |
9 | use tendermint_proto::Protobuf;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::events::IbcEvent`
 --> modules/src/ics02_client/handler/create_client.rs:6:5
  |
6 | use crate::events::IbcEvent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HandlerOutput`
 --> modules/src/ics02_client/handler/create_client.rs:7:22
  |
7 | use crate::handler::{HandlerOutput, HandlerResult};
  |                      ^^^^^^^^^^^^^

warning: unused import: `crate::ics02_client::events::Attributes`
  --> modules/src/ics02_client/handler/create_client.rs:13:5
   |
13 | use crate::ics02_client::events::Attributes;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::events::IbcEvent`
 --> modules/src/ics02_client/handler/update_client.rs:5:5
  |
5 | use crate::events::IbcEvent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HandlerOutput`
 --> modules/src/ics02_client/handler/update_client.rs:6:22
  |
6 | use crate::handler::{HandlerOutput, HandlerResult};
  |                      ^^^^^^^^^^^^^

warning: unused imports: `AnyClient`, `ClientDef`
 --> modules/src/ics02_client/handler/update_client.rs:8:39
  |
8 | use crate::ics02_client::client_def::{AnyClient, ClientDef};
  |                                       ^^^^^^^^^  ^^^^^^^^^

warning: unused import: `crate::ics02_client::events::Attributes`
  --> modules/src/ics02_client/handler/update_client.rs:12:5
   |
12 | use crate::ics02_client::events::Attributes;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::events::IbcEvent`
 --> modules/src/ics02_client/handler/upgrade_client.rs:5:5
  |
5 | use crate::events::IbcEvent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HandlerOutput`
 --> modules/src/ics02_client/handler/upgrade_client.rs:6:22
  |
6 | use crate::handler::{HandlerOutput, HandlerResult};
  |                      ^^^^^^^^^^^^^

warning: unused imports: `AnyClient`, `ClientDef`
 --> modules/src/ics02_client/handler/upgrade_client.rs:8:39
  |
8 | use crate::ics02_client::client_def::{AnyClient, ClientDef};
  |                                       ^^^^^^^^^  ^^^^^^^^^

warning: unused import: `ClientState`
 --> modules/src/ics02_client/handler/upgrade_client.rs:9:57
  |
9 | use crate::ics02_client::client_state::{AnyClientState, ClientState};
  |                                                         ^^^^^^^^^^^

warning: unused import: `crate::ics02_client::events::Attributes`
  --> modules/src/ics02_client/handler/upgrade_client.rs:12:5
   |
12 | use crate::ics02_client::events::Attributes;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
  --> modules/src/ics02_client/header.rs:11:20
   |
11 | use serde_derive::{Deserialize, Serialize};
   |                    ^^^^^^^^^^^  ^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> modules/src/ics02_client/height.rs:9:20
  |
9 | use serde_derive::{Deserialize, Serialize};
  |                    ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `std::str::FromStr`
 --> modules/src/ics03_connection/connection.rs:2:5
  |
2 | use std::str::FromStr;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `ConnectionIdState`
  --> modules/src/ics03_connection/context.rs:12:40
   |
12 | use crate::ics03_connection::handler::{ConnectionIdState, ConnectionResult};
   |                                        ^^^^^^^^^^^^^^^^^

warning: unused imports: `extract_attribute`, `maybe_extract_attribute`
 --> modules/src/ics03_connection/events.rs:2:21
  |
2 | use crate::events::{extract_attribute, maybe_extract_attribute, Error, IbcEvent, RawObject};
  |                     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> modules/src/ics03_connection/events.rs:7:20
  |
7 | use serde_derive::{Deserialize, Serialize};
  |                    ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `crate::events::IbcEvent`
 --> modules/src/ics03_connection/handler/conn_open_try.rs:5:5
  |
5 | use crate::events::IbcEvent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HandlerOutput`
 --> modules/src/ics03_connection/handler/conn_open_try.rs:6:22
  |
6 | use crate::handler::{HandlerOutput, HandlerResult};
  |                      ^^^^^^^^^^^^^

warning: unused imports: `ConnectionEnd`, `Counterparty`, `State`
 --> modules/src/ics03_connection/handler/conn_open_try.rs:7:43
  |
7 | use crate::ics03_connection::connection::{ConnectionEnd, Counterparty, State};
  |                                           ^^^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^

warning: unused import: `crate::ics03_connection::events::Attributes`
  --> modules/src/ics03_connection/handler/conn_open_try.rs:10:5
   |
10 | use crate::ics03_connection::events::Attributes;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `check_client_consensus_height`, `verify_proofs`
  --> modules/src/ics03_connection/handler/conn_open_try.rs:11:48
   |
11 | use crate::ics03_connection::handler::verify::{check_client_consensus_height, verify_proofs};
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^

warning: unused import: `ConnectionIdState`
  --> modules/src/ics03_connection/handler/conn_open_try.rs:12:40
   |
12 | use crate::ics03_connection::handler::{ConnectionIdState, ConnectionResult};
   |                                        ^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics24_host::identifier::ConnectionId`
  --> modules/src/ics03_connection/handler/conn_open_try.rs:14:5
   |
14 | use crate::ics24_host::identifier::ConnectionId;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics02_client::client_consensus::ConsensusState`
 --> modules/src/ics03_connection/handler/verify.rs:5:5
  |
5 | use crate::ics02_client::client_consensus::ConsensusState;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ClientState`
 --> modules/src/ics03_connection/handler/verify.rs:6:57
  |
6 | use crate::ics02_client::client_state::{AnyClientState, ClientState};
  |                                                         ^^^^^^^^^^^

warning: unused imports: `client_def::AnyClient`, `client_def::ClientDef`
 --> modules/src/ics03_connection/handler/verify.rs:7:27
  |
7 | use crate::ics02_client::{client_def::AnyClient, client_def::ClientDef};
  |                           ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `TryInto`, `str::FromStr`
 --> modules/src/ics03_connection/msgs/conn_open_try.rs:2:24
  |
2 |     convert::{TryFrom, TryInto},
  |                        ^^^^^^^
3 |     str::FromStr,
  |     ^^^^^^^^^^^^

warning: unused import: `crate::ics23_commitment::commitment::CommitmentProofBytes`
  --> modules/src/ics03_connection/msgs/conn_open_try.rs:17:5
   |
17 | use crate::ics23_commitment::commitment::CommitmentProofBytes;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ConsensusProof`
  --> modules/src/ics03_connection/msgs/conn_open_try.rs:19:21
   |
19 | use crate::proofs::{ConsensusProof, Proofs};
   |                     ^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> modules/src/ics03_connection/version.rs:5:13
  |
5 | use serde::{Deserialize, Serialize};
  |             ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `ChannelIdState`
  --> modules/src/ics04_channel/context.rs:12:37
   |
12 | use crate::ics04_channel::handler::{ChannelIdState, ChannelResult};
   |                                     ^^^^^^^^^^^^^^

warning: unused import: `maybe_extract_attribute`
 --> modules/src/ics04_channel/events.rs:4:40
  |
4 | use crate::events::{extract_attribute, maybe_extract_attribute, Error, IbcEvent, RawObject};
  |                                        ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> modules/src/ics04_channel/events.rs:8:20
  |
8 | use serde_derive::{Deserialize, Serialize};
  |                    ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `crate::events::IbcEvent`
 --> modules/src/ics04_channel/handler/acknowledgement.rs:1:5
  |
1 | use crate::events::IbcEvent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HandlerOutput`
 --> modules/src/ics04_channel/handler/acknowledgement.rs:2:22
  |
2 | use crate::handler::{HandlerOutput, HandlerResult};
  |                      ^^^^^^^^^^^^^

warning: unused import: `crate::ics02_client::height::Height`
 --> modules/src/ics04_channel/handler/acknowledgement.rs:5:5
  |
5 | use crate::ics02_client::height::Height;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics03_connection::connection::State as ConnectionState`
 --> modules/src/ics04_channel/handler/acknowledgement.rs:6:5
  |
6 | use crate::ics03_connection::connection::State as ConnectionState;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::channel::State`
 --> modules/src/ics04_channel/handler/acknowledgement.rs:7:5
  |
7 | use crate::ics04_channel::channel::State;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Counterparty`, `Order`
 --> modules/src/ics04_channel/handler/acknowledgement.rs:8:37
  |
8 | use crate::ics04_channel::channel::{Counterparty, Order};
  |                                     ^^^^^^^^^^^^  ^^^^^

warning: unused import: `crate::ics04_channel::events::AcknowledgePacket`
 --> modules/src/ics04_channel/handler/acknowledgement.rs:9:5
  |
9 | use crate::ics04_channel::events::AcknowledgePacket;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::handler::verify::verify_packet_acknowledgement_proofs`
  --> modules/src/ics04_channel/handler/acknowledgement.rs:10:5
   |
10 | use crate::ics04_channel::handler::verify::verify_packet_acknowledgement_proofs;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::events::IbcEvent`
 --> modules/src/ics04_channel/handler/chan_close_confirm.rs:2:5
  |
2 | use crate::events::IbcEvent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HandlerOutput`
 --> modules/src/ics04_channel/handler/chan_close_confirm.rs:5:22
  |
5 | use crate::handler::{HandlerOutput, HandlerResult};
  |                      ^^^^^^^^^^^^^

warning: unused import: `crate::ics03_connection::connection::State as ConnectionState`
 --> modules/src/ics04_channel/handler/chan_close_confirm.rs:6:5
  |
6 | use crate::ics03_connection::connection::State as ConnectionState;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ChannelEnd`, `Counterparty`, `State`
 --> modules/src/ics04_channel/handler/chan_close_confirm.rs:7:37
  |
7 | use crate::ics04_channel::channel::{ChannelEnd, Counterparty, State};
  |                                     ^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^

warning: unused import: `crate::ics04_channel::events::Attributes`
  --> modules/src/ics04_channel/handler/chan_close_confirm.rs:10:5
   |
10 | use crate::ics04_channel::events::Attributes;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::handler::verify::verify_channel_proofs`
  --> modules/src/ics04_channel/handler/chan_close_confirm.rs:11:5
   |
11 | use crate::ics04_channel::handler::verify::verify_channel_proofs;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ChannelIdState`
  --> modules/src/ics04_channel/handler/chan_close_confirm.rs:12:37
   |
12 | use crate::ics04_channel::handler::{ChannelIdState, ChannelResult};
   |                                     ^^^^^^^^^^^^^^

warning: unused import: `crate::events::IbcEvent`
 --> modules/src/ics04_channel/handler/chan_close_init.rs:2:5
  |
2 | use crate::events::IbcEvent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HandlerOutput`
 --> modules/src/ics04_channel/handler/chan_close_init.rs:5:22
  |
5 | use crate::handler::{HandlerOutput, HandlerResult};
  |                      ^^^^^^^^^^^^^

warning: unused import: `crate::ics03_connection::connection::State as ConnectionState`
 --> modules/src/ics04_channel/handler/chan_close_init.rs:6:5
  |
6 | use crate::ics03_connection::connection::State as ConnectionState;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::channel::State`
 --> modules/src/ics04_channel/handler/chan_close_init.rs:7:5
  |
7 | use crate::ics04_channel::channel::State;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::events::Attributes`
  --> modules/src/ics04_channel/handler/chan_close_init.rs:10:5
   |
10 | use crate::ics04_channel::events::Attributes;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ChannelIdState`
  --> modules/src/ics04_channel/handler/chan_close_init.rs:11:37
   |
11 | use crate::ics04_channel::handler::{ChannelIdState, ChannelResult};
   |                                     ^^^^^^^^^^^^^^

warning: unused import: `crate::events::IbcEvent`
 --> modules/src/ics04_channel/handler/chan_open_ack.rs:2:5
  |
2 | use crate::events::IbcEvent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HandlerOutput`
 --> modules/src/ics04_channel/handler/chan_open_ack.rs:5:22
  |
5 | use crate::handler::{HandlerOutput, HandlerResult};
  |                      ^^^^^^^^^^^^^

warning: unused import: `crate::ics03_connection::connection::State as ConnectionState`
 --> modules/src/ics04_channel/handler/chan_open_ack.rs:6:5
  |
6 | use crate::ics03_connection::connection::State as ConnectionState;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ChannelEnd`, `Counterparty`, `State`
 --> modules/src/ics04_channel/handler/chan_open_ack.rs:7:37
  |
7 | use crate::ics04_channel::channel::{ChannelEnd, Counterparty, State};
  |                                     ^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^

warning: unused import: `crate::ics04_channel::events::Attributes`
  --> modules/src/ics04_channel/handler/chan_open_ack.rs:10:5
   |
10 | use crate::ics04_channel::events::Attributes;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::handler::verify::verify_channel_proofs`
  --> modules/src/ics04_channel/handler/chan_open_ack.rs:11:5
   |
11 | use crate::ics04_channel::handler::verify::verify_channel_proofs;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ChannelIdState`
  --> modules/src/ics04_channel/handler/chan_open_ack.rs:12:37
   |
12 | use crate::ics04_channel::handler::{ChannelIdState, ChannelResult};
   |                                     ^^^^^^^^^^^^^^

warning: unused import: `crate::events::IbcEvent`
 --> modules/src/ics04_channel/handler/chan_open_confirm.rs:2:5
  |
2 | use crate::events::IbcEvent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HandlerOutput`
 --> modules/src/ics04_channel/handler/chan_open_confirm.rs:5:22
  |
5 | use crate::handler::{HandlerOutput, HandlerResult};
  |                      ^^^^^^^^^^^^^

warning: unused import: `crate::ics03_connection::connection::State as ConnectionState`
 --> modules/src/ics04_channel/handler/chan_open_confirm.rs:6:5
  |
6 | use crate::ics03_connection::connection::State as ConnectionState;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ChannelEnd`, `Counterparty`, `State`
 --> modules/src/ics04_channel/handler/chan_open_confirm.rs:7:37
  |
7 | use crate::ics04_channel::channel::{ChannelEnd, Counterparty, State};
  |                                     ^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^

warning: unused import: `crate::ics04_channel::events::Attributes`
  --> modules/src/ics04_channel/handler/chan_open_confirm.rs:10:5
   |
10 | use crate::ics04_channel::events::Attributes;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::handler::verify::verify_channel_proofs`
  --> modules/src/ics04_channel/handler/chan_open_confirm.rs:11:5
   |
11 | use crate::ics04_channel::handler::verify::verify_channel_proofs;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ChannelIdState`
  --> modules/src/ics04_channel/handler/chan_open_confirm.rs:12:37
   |
12 | use crate::ics04_channel::handler::{ChannelIdState, ChannelResult};
   |                                     ^^^^^^^^^^^^^^

warning: unused import: `crate::events::IbcEvent`
 --> modules/src/ics04_channel/handler/chan_open_init.rs:5:5
  |
5 | use crate::events::IbcEvent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HandlerOutput`
 --> modules/src/ics04_channel/handler/chan_open_init.rs:6:22
  |
6 | use crate::handler::{HandlerOutput, HandlerResult};
  |                      ^^^^^^^^^^^^^

warning: unused imports: `ChannelEnd`, `State`
 --> modules/src/ics04_channel/handler/chan_open_init.rs:7:37
  |
7 | use crate::ics04_channel::channel::{ChannelEnd, State};
  |                                     ^^^^^^^^^^  ^^^^^

warning: unused import: `crate::ics04_channel::events::Attributes`
  --> modules/src/ics04_channel/handler/chan_open_init.rs:10:5
   |
10 | use crate::ics04_channel::events::Attributes;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ChannelIdState`
  --> modules/src/ics04_channel/handler/chan_open_init.rs:11:37
   |
11 | use crate::ics04_channel::handler::{ChannelIdState, ChannelResult};
   |                                     ^^^^^^^^^^^^^^

warning: unused import: `crate::ics24_host::identifier::ChannelId`
  --> modules/src/ics04_channel/handler/chan_open_init.rs:13:5
   |
13 | use crate::ics24_host::identifier::ChannelId;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::events::IbcEvent`
 --> modules/src/ics04_channel/handler/chan_open_try.rs:5:5
  |
5 | use crate::events::IbcEvent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HandlerOutput`
 --> modules/src/ics04_channel/handler/chan_open_try.rs:6:22
  |
6 | use crate::handler::{HandlerOutput, HandlerResult};
  |                      ^^^^^^^^^^^^^

warning: unused import: `crate::ics03_connection::connection::State as ConnectionState`
 --> modules/src/ics04_channel/handler/chan_open_try.rs:7:5
  |
7 | use crate::ics03_connection::connection::State as ConnectionState;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ChannelEnd`, `Counterparty`, `State`
 --> modules/src/ics04_channel/handler/chan_open_try.rs:8:37
  |
8 | use crate::ics04_channel::channel::{ChannelEnd, Counterparty, State};
  |                                     ^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^

warning: unused import: `crate::ics04_channel::events::Attributes`
  --> modules/src/ics04_channel/handler/chan_open_try.rs:11:5
   |
11 | use crate::ics04_channel::events::Attributes;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::handler::verify::verify_channel_proofs`
  --> modules/src/ics04_channel/handler/chan_open_try.rs:12:5
   |
12 | use crate::ics04_channel::handler::verify::verify_channel_proofs;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ChannelIdState`
  --> modules/src/ics04_channel/handler/chan_open_try.rs:13:37
   |
13 | use crate::ics04_channel::handler::{ChannelIdState, ChannelResult};
   |                                     ^^^^^^^^^^^^^^

warning: unused import: `crate::ics24_host::identifier::ChannelId`
  --> modules/src/ics04_channel/handler/chan_open_try.rs:15:5
   |
15 | use crate::ics24_host::identifier::ChannelId;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::events::IbcEvent`
 --> modules/src/ics04_channel/handler/recv_packet.rs:1:5
  |
1 | use crate::events::IbcEvent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HandlerOutput`
 --> modules/src/ics04_channel/handler/recv_packet.rs:2:22
  |
2 | use crate::handler::{HandlerOutput, HandlerResult};
  |                      ^^^^^^^^^^^^^

warning: unused import: `crate::ics02_client::height::Height`
 --> modules/src/ics04_channel/handler/recv_packet.rs:5:5
  |
5 | use crate::ics02_client::height::Height;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics03_connection::connection::State as ConnectionState`
 --> modules/src/ics04_channel/handler/recv_packet.rs:6:5
  |
6 | use crate::ics03_connection::connection::State as ConnectionState;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Counterparty`, `Order`, `State`
 --> modules/src/ics04_channel/handler/recv_packet.rs:7:37
  |
7 | use crate::ics04_channel::channel::{Counterparty, Order, State};
  |                                     ^^^^^^^^^^^^  ^^^^^  ^^^^^

warning: unused import: `crate::ics04_channel::events::ReceivePacket`
  --> modules/src/ics04_channel/handler/recv_packet.rs:10:5
   |
10 | use crate::ics04_channel::events::ReceivePacket;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::handler::verify::verify_packet_recv_proofs`
  --> modules/src/ics04_channel/handler/recv_packet.rs:11:5
   |
11 | use crate::ics04_channel::handler::verify::verify_packet_recv_proofs;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::timestamp::Expiry`
  --> modules/src/ics04_channel/handler/recv_packet.rs:15:5
   |
15 | use crate::timestamp::Expiry;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::events::IbcEvent`
 --> modules/src/ics04_channel/handler/send_packet.rs:1:5
  |
1 | use crate::events::IbcEvent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HandlerOutput`
 --> modules/src/ics04_channel/handler/send_packet.rs:2:22
  |
2 | use crate::handler::{HandlerOutput, HandlerResult};
  |                      ^^^^^^^^^^^^^

warning: unused import: `crate::ics02_client::client_state::ClientState`
 --> modules/src/ics04_channel/handler/send_packet.rs:5:5
  |
5 | use crate::ics02_client::client_state::ClientState;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::channel::Counterparty`
 --> modules/src/ics04_channel/handler/send_packet.rs:6:5
  |
6 | use crate::ics04_channel::channel::Counterparty;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::channel::State`
 --> modules/src/ics04_channel/handler/send_packet.rs:7:5
  |
7 | use crate::ics04_channel::channel::State;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::events::SendPacket`
 --> modules/src/ics04_channel/handler/send_packet.rs:8:5
  |
8 | use crate::ics04_channel::events::SendPacket;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Expiry`
  --> modules/src/ics04_channel/handler/send_packet.rs:12:24
   |
12 | use crate::timestamp::{Expiry, Timestamp};
   |                        ^^^^^^

warning: unused import: `crate::events::IbcEvent`
 --> modules/src/ics04_channel/handler/timeout.rs:1:5
  |
1 | use crate::events::IbcEvent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HandlerOutput`
 --> modules/src/ics04_channel/handler/timeout.rs:2:22
  |
2 | use crate::handler::{HandlerOutput, HandlerResult};
  |                      ^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::channel::State`
 --> modules/src/ics04_channel/handler/timeout.rs:5:5
  |
5 | use crate::ics04_channel::channel::State;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Counterparty`, `Order`
 --> modules/src/ics04_channel/handler/timeout.rs:6:49
  |
6 | use crate::ics04_channel::channel::{ChannelEnd, Counterparty, Order};
  |                                                 ^^^^^^^^^^^^  ^^^^^

warning: unused import: `crate::ics04_channel::events::TimeoutPacket`
 --> modules/src/ics04_channel/handler/timeout.rs:7:5
  |
7 | use crate::ics04_channel::events::TimeoutPacket;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `verify_next_sequence_recv`, `verify_packet_receipt_absence`
 --> modules/src/ics04_channel/handler/timeout.rs:9:5
  |
9 |     verify_next_sequence_recv, verify_packet_receipt_absence,
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::timestamp::Expiry`
  --> modules/src/ics04_channel/handler/timeout.rs:15:5
   |
15 | use crate::timestamp::Expiry;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::events::IbcEvent`
 --> modules/src/ics04_channel/handler/timeout_on_close.rs:1:5
  |
1 | use crate::events::IbcEvent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HandlerOutput`
 --> modules/src/ics04_channel/handler/timeout_on_close.rs:2:22
  |
2 | use crate::handler::{HandlerOutput, HandlerResult};
  |                      ^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::channel::State`
 --> modules/src/ics04_channel/handler/timeout_on_close.rs:5:5
  |
5 | use crate::ics04_channel::channel::State;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ChannelEnd`, `Counterparty`, `Order`
 --> modules/src/ics04_channel/handler/timeout_on_close.rs:6:37
  |
6 | use crate::ics04_channel::channel::{ChannelEnd, Counterparty, Order};
  |                                     ^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^

warning: unused import: `crate::ics04_channel::events::TimeoutOnClosePacket`
 --> modules/src/ics04_channel/handler/timeout_on_close.rs:7:5
  |
7 | use crate::ics04_channel::events::TimeoutOnClosePacket;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::handler::verify::verify_channel_proofs`
 --> modules/src/ics04_channel/handler/timeout_on_close.rs:8:5
  |
8 | use crate::ics04_channel::handler::verify::verify_channel_proofs;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `verify_next_sequence_recv`, `verify_packet_receipt_absence`
  --> modules/src/ics04_channel/handler/timeout_on_close.rs:10:5
   |
10 |     verify_next_sequence_recv, verify_packet_receipt_absence,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `handler::timeout::TimeoutPacketResult`
  --> modules/src/ics04_channel/handler/timeout_on_close.rs:15:43
   |
15 |     context::ChannelReader, error::Error, handler::timeout::TimeoutPacketResult,
   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics02_client::client_state::ClientState`
 --> modules/src/ics04_channel/handler/verify.rs:1:5
  |
1 | use crate::ics02_client::client_state::ClientState;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `client_def::AnyClient`, `client_def::ClientDef`
 --> modules/src/ics04_channel/handler/verify.rs:2:27
  |
2 | use crate::ics02_client::{client_def::AnyClient, client_def::ClientDef};
  |                           ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::channel::State`
 --> modules/src/ics04_channel/handler/write_acknowledgement.rs:1:5
  |
1 | use crate::ics04_channel::channel::State;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::ics04_channel::events::WriteAcknowledgement`
 --> modules/src/ics04_channel/handler/write_acknowledgement.rs:2:5
  |
2 | use crate::ics04_channel::events::WriteAcknowledgement;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `HandlerOutput`, `events::IbcEvent`
  --> modules/src/ics04_channel/handler/write_acknowledgement.rs:9:5
   |
9  |     events::IbcEvent,
   |     ^^^^^^^^^^^^^^^^
10 |     handler::{HandlerOutput, HandlerResult},
   |               ^^^^^^^^^^^^^

warning: unused import: `validate_version`
 --> modules/src/ics04_channel/msgs/chan_open_try.rs:1:37
  |
1 | use crate::ics04_channel::channel::{validate_version, ChannelEnd};
  |                                     ^^^^^^^^^^^^^^^^

warning: unused import: `TryInto`
  --> modules/src/ics04_channel/msgs/chan_open_try.rs:14:29
   |
14 | use std::convert::{TryFrom, TryInto};
   |                             ^^^^^^^

warning: unused import: `std::str::FromStr`
  --> modules/src/ics04_channel/msgs/chan_open_try.rs:15:5
   |
15 | use std::str::FromStr;
   |     ^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> modules/src/ics04_channel/packet.rs:6:20
  |
6 | use serde_derive::{Deserialize, Serialize};
  |                    ^^^^^^^^^^^  ^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> modules/src/ics07_tendermint/client_state.rs:7:13
  |
7 | use serde::{Deserialize, Serialize};
  |             ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `serde::Serialize`
 --> modules/src/ics07_tendermint/consensus_state.rs:9:5
  |
9 | use serde::Serialize;
  |     ^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> modules/src/ics07_tendermint/header.rs:7:20
  |
7 | use serde_derive::{Deserialize, Serialize};
  |                    ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `Header`
 --> modules/src/ics18_relayer/utils.rs:1:46
  |
1 | use crate::ics02_client::header::{AnyHeader, Header};
  |                                              ^^^^^^

warning: unused import: `crate::ics02_client::msgs::update_client::MsgUpdateAnyClient`
 --> modules/src/ics18_relayer/utils.rs:2:5
  |
2 | use crate::ics02_client::msgs::update_client::MsgUpdateAnyClient;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Deserialize`
 --> modules/src/ics23_commitment/commitment.rs:5:13
  |
5 | use serde::{Deserialize, Serialize};
  |             ^^^^^^^^^^^

warning: unused import: `super::validate::*`
  --> modules/src/ics24_host/identifier.rs:11:5
   |
11 | use super::validate::*;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> modules/src/mock/client_state.rs:8:13
  |
8 | use serde::{Deserialize, Serialize};
  |             ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `std::cmp::min`
 --> modules/src/mock/context.rs:5:5
  |
5 | use std::cmp::min;
  |     ^^^^^^^^^^^^^

warning: unused imports: `Deserialize`, `Serialize`
 --> modules/src/mock/header.rs:3:20
  |
3 | use serde_derive::{Deserialize, Serialize};
  |                    ^^^^^^^^^^^  ^^^^^^^^^

warning: unused variable: `e`
  --> modules/src/application/ics20_fungible_token_transfer/error.rs:12:15
   |
12 |             | e | { format_args!("unrecognized ICS-20 transfer message type URL {0}", e.url) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `url`
  --> modules/src/application/ics20_fungible_token_transfer/error.rs:11:15
   |
11 |             { url: String }
   |               ^^^ help: if this is intentional, prefix it with an underscore: `_url`

warning: unused variable: `e`
  --> modules/src/application/ics20_fungible_token_transfer/error.rs:20:15
   |
20 |             | e | { format_args!("sending sequence number not found for port {0} and channel {1}", e.port_id, e.channel_id) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `port_id`
  --> modules/src/application/ics20_fungible_token_transfer/error.rs:19:15
   |
19 |             { port_id: PortId, channel_id: ChannelId }
   |               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_port_id`

warning: unused variable: `channel_id`
  --> modules/src/application/ics20_fungible_token_transfer/error.rs:19:32
   |
19 |             { port_id: PortId, channel_id: ChannelId }
   |                                ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `e`
  --> modules/src/application/ics20_fungible_token_transfer/error.rs:24:15
   |
24 |             | e | { format_args!("sending sequence number not found for port {0} and channel {1}", e.port_id, e.channel_id) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `port_id`
  --> modules/src/application/ics20_fungible_token_transfer/error.rs:23:15
   |
23 |             { port_id: PortId, channel_id: ChannelId }
   |               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_port_id`

warning: unused variable: `channel_id`
  --> modules/src/application/ics20_fungible_token_transfer/error.rs:23:32
   |
23 |             { port_id: PortId, channel_id: ChannelId }
   |                                ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `e`
  --> modules/src/application/ics20_fungible_token_transfer/error.rs:28:15
   |
28 | ...   | e | { format_args!("destination channel not found in the counterparty of port_id {0} and channel_id {1} ", e.port_id, e.channel_i...
   |         ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `port_id`
  --> modules/src/application/ics20_fungible_token_transfer/error.rs:27:15
   |
27 |             { port_id: PortId, channel_id: ChannelId }
   |               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_port_id`

warning: unused variable: `channel_id`
  --> modules/src/application/ics20_fungible_token_transfer/error.rs:27:32
   |
27 |             { port_id: PortId, channel_id: ChannelId }
   |                                ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `context`
  --> modules/src/application/ics20_fungible_token_transfer/error.rs:31:15
   |
31 |             { context: String }
   |               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
  --> modules/src/application/ics20_fungible_token_transfer/error.rs:36:15
   |
36 |             { context: String }
   |               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
  --> modules/src/application/ics20_fungible_token_transfer/error.rs:41:15
   |
41 |             { context: String }
   |               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `timestamp`
  --> modules/src/application/ics20_fungible_token_transfer/error.rs:45:15
   |
45 |             { timestamp: u64 }
   |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_timestamp`

warning: unused variable: `raw_msg`
  --> modules/src/application/ics20_fungible_token_transfer/msgs/transfer.rs:64:17
   |
64 |     fn try_from(raw_msg: RawMsgTransfer) -> Result<Self, Self::Error> {
   |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_raw_msg`

warning: unused variable: `ctx`
  --> modules/src/application/ics20_fungible_token_transfer/relay_application_logic/send_transfer.rs:14:5
   |
14 |     ctx: &Ctx,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/application/ics20_fungible_token_transfer/relay_application_logic/send_transfer.rs:15:5
   |
15 |     msg: MsgTransfer,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `height`
   --> modules/src/events.rs:183:31
    |
183 | pub fn from_tx_response_event(height: Height, event: &tendermint::abci::Event) -> Option<IbcEvent> {
    |                               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_height`

warning: unused variable: `event`
   --> modules/src/events.rs:183:47
    |
183 | pub fn from_tx_response_event(height: Height, event: &tendermint::abci::Event) -> Option<IbcEvent> {
    |                                               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `object`
   --> modules/src/events.rs:328:26
    |
328 | pub fn extract_attribute(object: &RawObject, key: &str) -> Result<String, Error> {
    |                          ^^^^^^ help: if this is intentional, prefix it with an underscore: `_object`

warning: unused variable: `key`
   --> modules/src/events.rs:328:46
    |
328 | pub fn extract_attribute(object: &RawObject, key: &str) -> Result<String, Error> {
    |                                              ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `object`
   --> modules/src/events.rs:340:32
    |
340 | pub fn maybe_extract_attribute(object: &RawObject, key: &str) -> Option<String> {
    |                                ^^^^^^ help: if this is intentional, prefix it with an underscore: `_object`

warning: unused variable: `key`
   --> modules/src/events.rs:340:52
    |
340 | pub fn maybe_extract_attribute(object: &RawObject, key: &str) -> Option<String> {
    |                                                    ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `e`
  --> modules/src/events.rs:47:15
   |
47 |             | e | { format_args!("missing event key {}", e.key) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `key`
  --> modules/src/events.rs:46:15
   |
46 |             { key: String }
   |               ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `e`
  --> modules/src/events.rs:62:15
   |
62 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `event`
  --> modules/src/events.rs:61:15
   |
61 |             { event: String }
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `f`
   --> modules/src/events.rs:128:19
    |
128 |     fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {
    |                   ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: unused variable: `f`
   --> modules/src/events.rs:147:19
    |
147 |     fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {
    |                   ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: unused variable: `log`
  --> modules/src/handler.rs:50:34
   |
50 |     pub fn with_log<U>(mut self, log: U) -> Self {
   |                                  ^^^ help: if this is intentional, prefix it with an underscore: `_log`

warning: unused variable: `log`
  --> modules/src/handler.rs:55:30
   |
55 |     pub fn log<U>(&mut self, log: U) {
   |                              ^^^ help: if this is intentional, prefix it with an underscore: `_log`

warning: unused variable: `s`
  --> modules/src/signer.rs:14:16
   |
14 |     pub fn new(s: impl ToString) -> Self {
   |                ^ help: if this is intentional, prefix it with an underscore: `_s`

warning: unused variable: `f`
  --> modules/src/signer.rs:26:19
   |
26 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
   |                   ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: unused variable: `value`
   --> modules/src/ics02_client/client_state.rs:138:13
    |
138 |     fn from(value: AnyClientState) -> Self {
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_value`

warning: unused variable: `raw`
   --> modules/src/ics02_client/client_state.rs:215:17
    |
215 |     fn try_from(raw: IdentifiedClientState) -> Result<Self, Self::Error> {
    |                 ^^^ help: if this is intentional, prefix it with an underscore: `_raw`

warning: unused variable: `other`
  --> modules/src/ics02_client/client_type.rs:20:18
   |
20 |     fn eq(&self, other: &Self) -> bool {
   |                  ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `f`
  --> modules/src/ics02_client/client_type.rs:53:19
   |
53 |     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
   |                   ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: unused variable: `e`
  --> modules/src/ics02_client/error.rs:18:15
   |
18 |             | e | { format_args!("unknown client type: {0}", e.client_type) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_type`
  --> modules/src/ics02_client/error.rs:17:15
   |
17 |             { client_type: String }
   |               ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_type`

warning: unused variable: `e`
  --> modules/src/ics02_client/error.rs:23:15
   |
23 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_type`
  --> modules/src/ics02_client/error.rs:21:15
   |
21 |             { client_type: ClientType, counter: u64 }
   |               ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_type`

warning: unused variable: `counter`
  --> modules/src/ics02_client/error.rs:21:40
   |
21 |             { client_type: ClientType, counter: u64 }
   |                                        ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_counter`

warning: unused variable: `e`
  --> modules/src/ics02_client/error.rs:30:15
   |
30 |             | e | { format_args!("client already exists: {0}", e.client_id) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
  --> modules/src/ics02_client/error.rs:29:15
   |
29 |             { client_id: ClientId }
   |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `e`
  --> modules/src/ics02_client/error.rs:34:15
   |
34 |             | e | { format_args!("client not found: {0}", e.client_id) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
  --> modules/src/ics02_client/error.rs:33:15
   |
33 |             { client_id: ClientId }
   |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `e`
  --> modules/src/ics02_client/error.rs:38:15
   |
38 |             | e | { format_args!("client is frozen: {0}", e.client_id) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
  --> modules/src/ics02_client/error.rs:37:15
   |
37 |             { client_id: ClientId }
   |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `e`
  --> modules/src/ics02_client/error.rs:42:15
   |
42 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
  --> modules/src/ics02_client/error.rs:41:15
   |
41 |             { client_id: ClientId, height: Height }
   |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `height`
  --> modules/src/ics02_client/error.rs:41:36
   |
41 |             { client_id: ClientId, height: Height }
   |                                    ^^^^^^ help: if this is intentional, prefix it with an underscore: `_height`

warning: unused variable: `e`
  --> modules/src/ics02_client/error.rs:52:15
   |
52 |             | e | { format_args!("header verification failed with reason: {}", e.reason) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `reason`
  --> modules/src/ics02_client/error.rs:51:15
   |
51 |             { reason: String }
   |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
  --> modules/src/ics02_client/error.rs:56:15
   |
56 |             | e | { format_args!("unknown client state type: {0}", e.client_state_type) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_state_type`
  --> modules/src/ics02_client/error.rs:55:15
   |
55 |             { client_state_type: String }
   |               ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_state_type`

warning: unused variable: `source`
  --> modules/src/ics02_client/error.rs:62:15
   |
62 |             { source: crate::ics23_commitment::merkle::EmptyPrefixError }
   |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_source`

warning: unused variable: `e`
  --> modules/src/ics02_client/error.rs:67:15
   |
67 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `consensus_state_type`
  --> modules/src/ics02_client/error.rs:66:15
   |
66 |             { consensus_state_type: String }
   |               ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_consensus_state_type`

warning: unused variable: `e`
  --> modules/src/ics02_client/error.rs:77:15
   |
77 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `header_type`
  --> modules/src/ics02_client/error.rs:76:15
   |
76 |             { header_type: String }
   |               ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_header_type`

warning: unused variable: `e`
  --> modules/src/ics02_client/error.rs:84:15
   |
84 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `misbehavior_type`
  --> modules/src/ics02_client/error.rs:83:15
   |
83 |             { misbehavior_type: String }
   |               ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_misbehavior_type`

warning: unused variable: `e`
  --> modules/src/ics02_client/error.rs:92:15
   |
92 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
  --> modules/src/ics02_client/error.rs:90:15
   |
90 |             { client_id: String }
   |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `e`
   --> modules/src/ics02_client/error.rs:168:15
    |
168 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_type`
   --> modules/src/ics02_client/error.rs:167:15
    |
167 |             { client_type: ClientType }
    |               ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_type`

warning: unused variable: `e`
   --> modules/src/ics02_client/error.rs:178:15
    |
178 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `state_type`
   --> modules/src/ics02_client/error.rs:175:17
    |
175 |                 state_type: ClientType,
    |                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_state_type`

warning: unused variable: `consensus_type`
   --> modules/src/ics02_client/error.rs:176:17
    |
176 |                 consensus_type: ClientType,
    |                 ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_consensus_type`

warning: unused variable: `e`
   --> modules/src/ics02_client/error.rs:188:15
    |
188 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `header_height`
   --> modules/src/ics02_client/error.rs:185:17
    |
185 |                 header_height: Height,
    |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_header_height`

warning: unused variable: `latest_height`
   --> modules/src/ics02_client/error.rs:186:17
    |
186 |                 latest_height: Height
    |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_latest_height`

warning: unused variable: `e`
   --> modules/src/ics02_client/error.rs:198:15
    |
198 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `upgraded_height`
   --> modules/src/ics02_client/error.rs:195:17
    |
195 |                 upgraded_height: Height,
    |                 ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_upgraded_height`

warning: unused variable: `client_height`
   --> modules/src/ics02_client/error.rs:196:17
    |
196 |                 client_height: Height,
    |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_height`

warning: unused variable: `event`
  --> modules/src/ics02_client/events.rs:36:20
   |
36 | pub fn try_from_tx(event: &tendermint::abci::Event) -> Option<IbcEvent> {
   |                    ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `event`
  --> modules/src/ics02_client/events.rs:56:31
   |
56 | fn extract_attributes_from_tx(event: &tendermint::abci::Event) -> Attributes {
   |                               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `event`
  --> modules/src/ics02_client/events.rs:75:31
   |
75 | pub fn extract_header_from_tx(event: &tendermint::abci::Event) -> Option<AnyHeader> {
   |                               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `f`
   --> modules/src/ics02_client/events.rs:145:19
    |
145 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                   ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: unused variable: `f`
   --> modules/src/ics02_client/events.rs:210:19
    |
210 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                   ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: unused variable: `obj`
   --> modules/src/ics02_client/events.rs:258:17
    |
258 |     fn try_from(obj: RawObject) -> Result<Self, Self::Error> {
    |                 ^^^ help: if this is intentional, prefix it with an underscore: `_obj`

warning: unused variable: `f`
   --> modules/src/ics02_client/events.rs:294:19
    |
294 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                   ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: unused variable: `ctx`
  --> modules/src/ics02_client/handler.rs:24:22
   |
24 | pub fn dispatch<Ctx>(ctx: &Ctx, msg: ClientMsg) -> Result<HandlerOutput<ClientResult>, Error>
   |                      ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics02_client/handler.rs:24:33
   |
24 | pub fn dispatch<Ctx>(ctx: &Ctx, msg: ClientMsg) -> Result<HandlerOutput<ClientResult>, Error>
   |                                 ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics02_client/handler/create_client.rs:30:5
   |
30 |     ctx: &dyn ClientReader,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics02_client/handler/create_client.rs:31:5
   |
31 |     msg: MsgCreateAnyClient,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics02_client/handler/update_client.rs:28:5
   |
28 |     ctx: &dyn ClientReader,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics02_client/handler/update_client.rs:29:5
   |
29 |     msg: MsgUpdateAnyClient,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics02_client/handler/upgrade_client.rs:28:5
   |
28 |     ctx: &dyn ClientReader,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics02_client/handler/upgrade_client.rs:29:5
   |
29 |     msg: MsgUpgradeAnyClient,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `f`
   --> modules/src/ics02_client/height.rs:141:19
    |
141 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                   ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: unused variable: `e`
   --> modules/src/ics02_client/height.rs:151:15
    |
151 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `height`
   --> modules/src/ics02_client/height.rs:149:15
    |
149 |             { height: String }
    |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_height`

warning: unused variable: `value`
   --> modules/src/ics02_client/height.rs:162:17
    |
162 |     fn try_from(value: &str) -> Result<Self, Self::Error> {
    |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_value`

warning: unused variable: `value`
   --> modules/src/ics03_connection/connection.rs:275:17
    |
275 |     fn try_from(value: RawCounterparty) -> Result<Self, Self::Error> {
    |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_value`

warning: unused variable: `value`
   --> modules/src/ics03_connection/connection.rs:295:13
    |
295 |     fn from(value: Counterparty) -> Self {
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_value`

warning: unused variable: `result`
  --> modules/src/ics03_connection/context.rs:71:43
   |
71 |     fn store_connection_result(&mut self, result: ConnectionResult) -> Result<(), Error> {
   |                                           ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`

warning: unused variable: `e`
  --> modules/src/ics03_connection/error.rs:18:15
   |
18 |             | e | { format_args!("connection state is unknown: {}", e.state) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `state`
  --> modules/src/ics03_connection/error.rs:17:15
   |
17 |             { state: i32 }
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `e`
  --> modules/src/ics03_connection/error.rs:22:15
   |
22 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `connection_id`
  --> modules/src/ics03_connection/error.rs:21:15
   |
21 |             { connection_id: ConnectionId }
   |               ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_id`

warning: unused variable: `e`
  --> modules/src/ics03_connection/error.rs:29:15
   |
29 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `connection_id`
  --> modules/src/ics03_connection/error.rs:28:15
   |
28 |             { connection_id: ConnectionId }
   |               ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_id`

warning: unused variable: `e`
  --> modules/src/ics03_connection/error.rs:36:15
   |
36 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `connection_id`
  --> modules/src/ics03_connection/error.rs:35:15
   |
35 |             { connection_id: ConnectionId }
   |               ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_id`

warning: unused variable: `e`
  --> modules/src/ics03_connection/error.rs:46:15
   |
46 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `target_height`
  --> modules/src/ics03_connection/error.rs:43:17
   |
43 |                 target_height: Height,
   |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_target_height`

warning: unused variable: `currrent_height`
  --> modules/src/ics03_connection/error.rs:44:17
   |
44 |                 currrent_height: Height
   |                 ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_currrent_height`

warning: unused variable: `e`
  --> modules/src/ics03_connection/error.rs:56:15
   |
56 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `target_height`
  --> modules/src/ics03_connection/error.rs:53:17
   |
53 |                 target_height: Height,
   |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_target_height`

warning: unused variable: `oldest_height`
  --> modules/src/ics03_connection/error.rs:54:17
   |
54 |                 oldest_height: Height
   |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_oldest_height`

warning: unused variable: `e`
  --> modules/src/ics03_connection/error.rs:99:15
   |
99 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `connection_id`
  --> modules/src/ics03_connection/error.rs:98:15
   |
98 |             { connection_id: ConnectionId }
   |               ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_id`

warning: unused variable: `e`
   --> modules/src/ics03_connection/error.rs:112:15
    |
112 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `connection_id`
   --> modules/src/ics03_connection/error.rs:109:17
    |
109 |                 connection_id: ConnectionId,
    |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_id`

warning: unused variable: `counterparty_connection_id`
   --> modules/src/ics03_connection/error.rs:110:17
    |
110 |                 counterparty_connection_id: ConnectionId,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_counterparty_connection_id`

warning: unused variable: `e`
   --> modules/src/ics03_connection/error.rs:126:15
    |
126 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
   --> modules/src/ics03_connection/error.rs:125:15
    |
125 |             { client_id: ClientId }
    |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `e`
   --> modules/src/ics03_connection/error.rs:136:15
    |
136 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
   --> modules/src/ics03_connection/error.rs:135:15
    |
135 |             { client_id: ClientId }
    |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `e`
   --> modules/src/ics03_connection/error.rs:149:15
    |
149 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `height`
   --> modules/src/ics03_connection/error.rs:146:17
    |
146 |                 height: Height,
    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_height`

warning: unused variable: `client_id`
   --> modules/src/ics03_connection/error.rs:147:17
    |
147 |                 client_id: ClientId,
    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `e`
   --> modules/src/ics03_connection/error.rs:156:15
    |
156 |             | e | { format_args!("the local consensus state could not be retrieved for height {}", e.height) },
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `height`
   --> modules/src/ics03_connection/error.rs:155:15
    |
155 |             { height: Height }
    |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_height`

warning: unused variable: `e`
   --> modules/src/ics03_connection/error.rs:161:15
    |
161 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `height`
   --> modules/src/ics03_connection/error.rs:159:15
    |
159 |             { height: Height }
    |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_height`

warning: unused variable: `e`
   --> modules/src/ics03_connection/error.rs:172:15
    |
172 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
   --> modules/src/ics03_connection/error.rs:169:17
    |
169 |                 client_id: ClientId,
    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `object`
  --> modules/src/ics03_connection/events.rs:95:23
   |
95 | fn extract_attributes(object: &RawObject, namespace: &str) -> Result<Attributes, Error> {
   |                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_object`

warning: unused variable: `namespace`
  --> modules/src/ics03_connection/events.rs:95:43
   |
95 | fn extract_attributes(object: &RawObject, namespace: &str) -> Result<Attributes, Error> {
   |                                           ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_namespace`

warning: unused variable: `ctx`
  --> modules/src/ics03_connection/handler.rs:48:5
   |
48 |     ctx: &Ctx,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics03_connection/handler.rs:49:5
   |
49 |     msg: ConnectionMsg,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics03_connection/handler/conn_open_try.rs:18:5
   |
18 |     ctx: &dyn ConnectionReader,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics03_connection/handler/conn_open_try.rs:19:5
   |
19 |     msg: MsgConnectionOpenTry,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics03_connection/handler/verify.rs:63:5
   |
63 |     ctx: &dyn ConnectionReader,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `connection_end`
  --> modules/src/ics03_connection/handler/verify.rs:64:5
   |
64 |     connection_end: &ConnectionEnd,
   |     ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_end`

warning: unused variable: `expected_conn`
  --> modules/src/ics03_connection/handler/verify.rs:65:5
   |
65 |     expected_conn: &ConnectionEnd,
   |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_expected_conn`

warning: unused variable: `proof_height`
  --> modules/src/ics03_connection/handler/verify.rs:66:5
   |
66 |     proof_height: Height,
   |     ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_proof_height`

warning: unused variable: `proof`
  --> modules/src/ics03_connection/handler/verify.rs:67:5
   |
67 |     proof: &CommitmentProofBytes,
   |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_proof`

warning: unused variable: `ctx`
   --> modules/src/ics03_connection/handler/verify.rs:116:5
    |
116 |     ctx: &dyn ConnectionReader,
    |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `connection_end`
   --> modules/src/ics03_connection/handler/verify.rs:117:5
    |
117 |     connection_end: &ConnectionEnd,
    |     ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_end`

warning: unused variable: `expected_client_state`
   --> modules/src/ics03_connection/handler/verify.rs:118:5
    |
118 |     expected_client_state: AnyClientState,
    |     ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_expected_client_state`

warning: unused variable: `proof_height`
   --> modules/src/ics03_connection/handler/verify.rs:119:5
    |
119 |     proof_height: Height,
    |     ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_proof_height`

warning: unused variable: `proof`
   --> modules/src/ics03_connection/handler/verify.rs:120:5
    |
120 |     proof: &CommitmentProofBytes,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_proof`

warning: unused variable: `ctx`
   --> modules/src/ics03_connection/handler/verify.rs:156:5
    |
156 |     ctx: &dyn ConnectionReader,
    |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `connection_end`
   --> modules/src/ics03_connection/handler/verify.rs:157:5
    |
157 |     connection_end: &ConnectionEnd,
    |     ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_end`

warning: unused variable: `proof_height`
   --> modules/src/ics03_connection/handler/verify.rs:158:5
    |
158 |     proof_height: Height,
    |     ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_proof_height`

warning: unused variable: `proof`
   --> modules/src/ics03_connection/handler/verify.rs:159:5
    |
159 |     proof: &ConsensusProof,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_proof`

warning: unused variable: `ics_msg`
   --> modules/src/ics03_connection/msgs/conn_open_ack.rs:133:13
    |
133 |     fn from(ics_msg: MsgConnectionOpenAck) -> Self {
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_ics_msg`

warning: unused variable: `msg`
   --> modules/src/ics03_connection/msgs/conn_open_try.rs:101:17
    |
101 |     fn try_from(msg: RawMsgConnectionOpenTry) -> Result<Self, Self::Error> {
    |                 ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ics_msg`
   --> modules/src/ics03_connection/msgs/conn_open_try.rs:164:13
    |
164 |     fn from(ics_msg: MsgConnectionOpenTry) -> Self {
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_ics_msg`

warning: unused variable: `value`
  --> modules/src/ics04_channel/channel.rs:64:13
   |
64 |     fn from(value: IdentifiedChannelEnd) -> Self {
   |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_value`

warning: unused variable: `value`
   --> modules/src/ics04_channel/channel.rs:111:17
    |
111 |     fn try_from(value: RawChannel) -> Result<Self, Self::Error> {
    |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_value`

warning: unused variable: `value`
   --> modules/src/ics04_channel/channel.rs:148:13
    |
148 |     fn from(value: ChannelEnd) -> Self {
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_value`

warning: unused variable: `value`
   --> modules/src/ics04_channel/channel.rs:304:17
    |
304 |     fn try_from(value: RawCounterparty) -> Result<Self, Self::Error> {
    |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_value`

warning: unused variable: `value`
   --> modules/src/ics04_channel/channel.rs:319:13
    |
319 |     fn from(value: Counterparty) -> Self {
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_value`

warning: unused variable: `result`
  --> modules/src/ics04_channel/context.rs:74:40
   |
74 |     fn store_channel_result(&mut self, result: ChannelResult) -> Result<(), Error> {
   |                                        ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`

warning: unused variable: `e`
  --> modules/src/ics04_channel/error.rs:18:15
   |
18 |             | e | { format_args!("channel state unknown: {}", e.state) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `state`
  --> modules/src/ics04_channel/error.rs:17:15
   |
17 |             { state: i32 }
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `e`
  --> modules/src/ics04_channel/error.rs:26:15
   |
26 |             | e | { format_args!("channel order type unknown: {}", e.type_id) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `type_id`
  --> modules/src/ics04_channel/error.rs:25:15
   |
25 |             { type_id: String }
   |               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_type_id`

warning: unused variable: `e`
  --> modules/src/ics04_channel/error.rs:30:15
   |
30 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `expected`
  --> modules/src/ics04_channel/error.rs:29:15
   |
29 |             { expected: usize, actual: usize }
   |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_expected`

warning: unused variable: `actual`
  --> modules/src/ics04_channel/error.rs:29:32
   |
29 |             { expected: usize, actual: usize }
   |                                ^^^^^^ help: if this is intentional, prefix it with an underscore: `_actual`

warning: unused variable: `e`
  --> modules/src/ics04_channel/error.rs:38:15
   |
38 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `port_id`
  --> modules/src/ics04_channel/error.rs:37:15
   |
37 |             { port_id: PortId, channel_id: ChannelId }
   |               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_port_id`

warning: unused variable: `channel_id`
  --> modules/src/ics04_channel/error.rs:37:32
   |
37 |             { port_id: PortId, channel_id: ChannelId }
   |                                ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `e`
  --> modules/src/ics04_channel/error.rs:84:15
   |
84 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `sequence`
  --> modules/src/ics04_channel/error.rs:83:15
   |
83 |             { sequence: Sequence }
   |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_sequence`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:101:15
    |
101 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `connection_id`
   --> modules/src/ics04_channel/error.rs:100:15
    |
100 |             { connection_id: ConnectionId }
    |               ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_id`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:109:15
    |
109 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `port_id`
   --> modules/src/ics04_channel/error.rs:108:15
    |
108 |             { port_id: PortId }
    |               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_port_id`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:126:15
    |
126 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `port_id`
   --> modules/src/ics04_channel/error.rs:125:15
    |
125 |             { port_id: PortId, channel_id: ChannelId }
    |               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_port_id`

warning: unused variable: `channel_id`
   --> modules/src/ics04_channel/error.rs:125:32
    |
125 |             { port_id: PortId, channel_id: ChannelId }
    |                                ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:134:15
    |
134 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
   --> modules/src/ics04_channel/error.rs:133:15
    |
133 |             { channel_id: ChannelId }
    |               ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:142:15
    |
142 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `connection_id`
   --> modules/src/ics04_channel/error.rs:141:15
    |
141 |             { connection_id: ConnectionId }
    |               ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_id`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:150:15
    |
150 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `connection_id`
   --> modules/src/ics04_channel/error.rs:149:15
    |
149 |             { connection_id: ConnectionId }
    |               ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_id`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:159:15
    |
159 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `sequence`
   --> modules/src/ics04_channel/error.rs:157:15
    |
157 |             { sequence: Sequence }
    |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_sequence`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:176:15
    |
176 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `sequence`
   --> modules/src/ics04_channel/error.rs:175:15
    |
175 |             { sequence: Sequence }
    |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_sequence`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:184:15
    |
184 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
   --> modules/src/ics04_channel/error.rs:183:15
    |
183 |             { client_id: ClientId }
    |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:196:15
    |
196 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `value`
   --> modules/src/ics04_channel/error.rs:194:15
    |
194 |             { value: String }
    |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_value`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:207:15
    |
207 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `given_sequence`
   --> modules/src/ics04_channel/error.rs:204:17
    |
204 |                 given_sequence: Sequence,
    |                 ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_given_sequence`

warning: unused variable: `next_sequence`
   --> modules/src/ics04_channel/error.rs:205:17
    |
205 |                 next_sequence: Sequence
    |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_next_sequence`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:218:15
    |
218 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_height`
   --> modules/src/ics04_channel/error.rs:215:17
    |
215 |                 chain_height: Height,
    |                 ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_height`

warning: unused variable: `timeout_height`
   --> modules/src/ics04_channel/error.rs:216:17
    |
216 |                 timeout_height: Height
    |                 ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_timeout_height`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:229:15
    |
229 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `timeout_height`
   --> modules/src/ics04_channel/error.rs:226:17
    |
226 |                 timeout_height: Height,
    |                 ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_timeout_height`

warning: unused variable: `chain_height`
   --> modules/src/ics04_channel/error.rs:227:17
    |
227 |                 chain_height: Height,
    |                 ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_height`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:240:15
    |
240 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `timeout_timestamp`
   --> modules/src/ics04_channel/error.rs:237:17
    |
237 |                 timeout_timestamp: Timestamp,
    |                 ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_timeout_timestamp`

warning: unused variable: `chain_timestamp`
   --> modules/src/ics04_channel/error.rs:238:17
    |
238 |                 chain_timestamp: Timestamp,
    |                 ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_timestamp`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:258:15
    |
258 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
   --> modules/src/ics04_channel/error.rs:257:15
    |
257 |             { client_id: ClientId }
    |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:265:15
    |
265 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
   --> modules/src/ics04_channel/error.rs:264:15
    |
264 |             { client_id: ClientId, height: Height }
    |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `height`
   --> modules/src/ics04_channel/error.rs:264:36
    |
264 |             { client_id: ClientId, height: Height }
    |                                    ^^^^^^ help: if this is intentional, prefix it with an underscore: `_height`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:280:15
    |
280 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
   --> modules/src/ics04_channel/error.rs:279:15
    |
279 |             { channel_id: ChannelId, state: State }
    |               ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `state`
   --> modules/src/ics04_channel/error.rs:279:38
    |
279 |             { channel_id: ChannelId, state: State }
    |                                      ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:288:15
    |
288 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
   --> modules/src/ics04_channel/error.rs:287:15
    |
287 |             { channel_id: ChannelId }
    |               ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:299:15
    |
299 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `sequence`
   --> modules/src/ics04_channel/error.rs:298:15
    |
298 |             { sequence: Sequence }
    |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_sequence`

warning: unused variable: `e`
   --> modules/src/ics04_channel/error.rs:307:15
    |
307 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `sequence`
   --> modules/src/ics04_channel/error.rs:306:15
    |
306 |             { sequence: Sequence }
    |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_sequence`

warning: unused variable: `object`
   --> modules/src/ics04_channel/events.rs:169:23
    |
169 | fn extract_attributes(object: &RawObject, namespace: &str) -> Result<Attributes, Error> {
    |                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_object`

warning: unused variable: `namespace`
   --> modules/src/ics04_channel/events.rs:169:43
    |
169 | fn extract_attributes(object: &RawObject, namespace: &str) -> Result<Attributes, Error> {
    |                                           ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_namespace`

warning: unused variable: `f`
   --> modules/src/ics04_channel/events.rs:442:19
    |
442 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                   ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: unused variable: `ctx`
  --> modules/src/ics04_channel/handler.rs:53:5
   |
53 |     ctx: &Ctx,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics04_channel/handler.rs:54:5
   |
54 |     msg: ChannelMsg,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics04_channel/handler.rs:71:29
   |
71 | pub fn packet_dispatch<Ctx>(ctx: &Ctx, msg: PacketMsg) -> Result<HandlerOutput<PacketResult>, Error>
   |                             ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics04_channel/handler.rs:71:40
   |
71 | pub fn packet_dispatch<Ctx>(ctx: &Ctx, msg: PacketMsg) -> Result<HandlerOutput<PacketResult>, Error>
   |                                        ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics04_channel/handler/acknowledgement.rs:26:5
   |
26 |     ctx: &dyn ChannelReader,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics04_channel/handler/acknowledgement.rs:27:5
   |
27 |     msg: MsgAcknowledgement,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics04_channel/handler/chan_close_confirm.rs:17:5
   |
17 |     ctx: &dyn ChannelReader,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics04_channel/handler/chan_close_confirm.rs:18:5
   |
18 |     msg: MsgChannelCloseConfirm,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics04_channel/handler/chan_close_init.rs:16:5
   |
16 |     ctx: &dyn ChannelReader,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics04_channel/handler/chan_close_init.rs:17:5
   |
17 |     msg: MsgChannelCloseInit,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics04_channel/handler/chan_open_ack.rs:17:5
   |
17 |     ctx: &dyn ChannelReader,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics04_channel/handler/chan_open_ack.rs:18:5
   |
18 |     msg: MsgChannelOpenAck,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics04_channel/handler/chan_open_confirm.rs:17:5
   |
17 |     ctx: &dyn ChannelReader,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics04_channel/handler/chan_open_confirm.rs:18:5
   |
18 |     msg: MsgChannelOpenConfirm,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics04_channel/handler/chan_open_init.rs:17:5
   |
17 |     ctx: &dyn ChannelReader,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics04_channel/handler/chan_open_init.rs:18:5
   |
18 |     msg: MsgChannelOpenInit,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics04_channel/handler/chan_open_try.rs:19:5
   |
19 |     ctx: &dyn ChannelReader,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics04_channel/handler/chan_open_try.rs:20:5
   |
20 |     msg: MsgChannelOpenTry,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics04_channel/handler/recv_packet.rs:27:16
   |
27 | pub fn process(ctx: &dyn ChannelReader, msg: MsgRecvPacket) -> HandlerResult<PacketResult, Error> {
   |                ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics04_channel/handler/recv_packet.rs:27:41
   |
27 | pub fn process(ctx: &dyn ChannelReader, msg: MsgRecvPacket) -> HandlerResult<PacketResult, Error> {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics04_channel/handler/send_packet.rs:27:20
   |
27 | pub fn send_packet(ctx: &dyn ChannelReader, packet: Packet) -> HandlerResult<PacketResult, Error> {
   |                    ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `packet`
  --> modules/src/ics04_channel/handler/send_packet.rs:27:45
   |
27 | pub fn send_packet(ctx: &dyn ChannelReader, packet: Packet) -> HandlerResult<PacketResult, Error> {
   |                                             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_packet`

warning: unused variable: `ctx`
  --> modules/src/ics04_channel/handler/timeout.rs:26:16
   |
26 | pub fn process(ctx: &dyn ChannelReader, msg: MsgTimeout) -> HandlerResult<PacketResult, Error> {
   |                ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics04_channel/handler/timeout.rs:26:41
   |
26 | pub fn process(ctx: &dyn ChannelReader, msg: MsgTimeout) -> HandlerResult<PacketResult, Error> {
   |                                         ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics04_channel/handler/timeout_on_close.rs:20:5
   |
20 |     ctx: &dyn ChannelReader,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `msg`
  --> modules/src/ics04_channel/handler/timeout_on_close.rs:21:5
   |
21 |     msg: MsgTimeoutOnClose,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_msg`

warning: unused variable: `ctx`
  --> modules/src/ics04_channel/handler/verify.rs:16:5
   |
16 |     ctx: &dyn ChannelReader,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `channel_end`
  --> modules/src/ics04_channel/handler/verify.rs:17:5
   |
17 |     channel_end: &ChannelEnd,
   |     ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_end`

warning: unused variable: `connection_end`
  --> modules/src/ics04_channel/handler/verify.rs:18:5
   |
18 |     connection_end: &ConnectionEnd,
   |     ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_end`

warning: unused variable: `expected_chan`
  --> modules/src/ics04_channel/handler/verify.rs:19:5
   |
19 |     expected_chan: &ChannelEnd,
   |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_expected_chan`

warning: unused variable: `proofs`
  --> modules/src/ics04_channel/handler/verify.rs:20:5
   |
20 |     proofs: &Proofs,
   |     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_proofs`

warning: unused variable: `ctx`
  --> modules/src/ics04_channel/handler/verify.rs:64:5
   |
64 |     ctx: &dyn ChannelReader,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `packet`
  --> modules/src/ics04_channel/handler/verify.rs:65:5
   |
65 |     packet: &Packet,
   |     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_packet`

warning: unused variable: `client_id`
  --> modules/src/ics04_channel/handler/verify.rs:66:5
   |
66 |     client_id: ClientId,
   |     ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `proofs`
  --> modules/src/ics04_channel/handler/verify.rs:67:5
   |
67 |     proofs: &Proofs,
   |     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_proofs`

warning: unused variable: `ctx`
   --> modules/src/ics04_channel/handler/verify.rs:115:5
    |
115 |     ctx: &dyn ChannelReader,
    |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `packet`
   --> modules/src/ics04_channel/handler/verify.rs:116:5
    |
116 |     packet: &Packet,
    |     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_packet`

warning: unused variable: `acknowledgement`
   --> modules/src/ics04_channel/handler/verify.rs:117:5
    |
117 |     acknowledgement: Vec<u8>,
    |     ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_acknowledgement`

warning: unused variable: `client_id`
   --> modules/src/ics04_channel/handler/verify.rs:118:5
    |
118 |     client_id: ClientId,
    |     ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `proofs`
   --> modules/src/ics04_channel/handler/verify.rs:119:5
    |
119 |     proofs: &Proofs,
    |     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_proofs`

warning: unused variable: `ctx`
   --> modules/src/ics04_channel/handler/verify.rs:151:5
    |
151 |     ctx: &dyn ChannelReader,
    |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `client_id`
   --> modules/src/ics04_channel/handler/verify.rs:152:5
    |
152 |     client_id: ClientId,
    |     ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `packet`
   --> modules/src/ics04_channel/handler/verify.rs:153:5
    |
153 |     packet: Packet,
    |     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_packet`

warning: unused variable: `seq`
   --> modules/src/ics04_channel/handler/verify.rs:154:5
    |
154 |     seq: Sequence,
    |     ^^^ help: if this is intentional, prefix it with an underscore: `_seq`

warning: unused variable: `proofs`
   --> modules/src/ics04_channel/handler/verify.rs:155:5
    |
155 |     proofs: &Proofs,
    |     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_proofs`

warning: unused variable: `ctx`
   --> modules/src/ics04_channel/handler/verify.rs:185:5
    |
185 |     ctx: &dyn ChannelReader,
    |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `client_id`
   --> modules/src/ics04_channel/handler/verify.rs:186:5
    |
186 |     client_id: ClientId,
    |     ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `packet`
   --> modules/src/ics04_channel/handler/verify.rs:187:5
    |
187 |     packet: Packet,
    |     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_packet`

warning: unused variable: `proofs`
   --> modules/src/ics04_channel/handler/verify.rs:188:5
    |
188 |     proofs: &Proofs,
    |     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_proofs`

warning: unused variable: `ctx`
  --> modules/src/ics04_channel/handler/write_acknowledgement.rs:23:5
   |
23 |     ctx: &dyn ChannelReader,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ctx`

warning: unused variable: `packet`
  --> modules/src/ics04_channel/handler/write_acknowledgement.rs:24:5
   |
24 |     packet: Packet,
   |     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_packet`

warning: unused variable: `ack`
  --> modules/src/ics04_channel/handler/write_acknowledgement.rs:25:5
   |
25 |     ack: Vec<u8>,
   |     ^^^ help: if this is intentional, prefix it with an underscore: `_ack`

warning: unused variable: `raw_msg`
  --> modules/src/ics04_channel/msgs/chan_open_try.rs:94:17
   |
94 |     fn try_from(raw_msg: RawMsgChannelOpenTry) -> Result<Self, Self::Error> {
   |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_raw_msg`

warning: unused variable: `domain_msg`
   --> modules/src/ics04_channel/msgs/chan_open_try.rs:134:13
    |
134 |     fn from(domain_msg: MsgChannelOpenTry) -> Self {
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_domain_msg`

warning: unused variable: `domain_msg`
   --> modules/src/ics04_channel/msgs/acknowledgement.rs:100:13
    |
100 |     fn from(domain_msg: MsgAcknowledgement) -> Self {
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_domain_msg`

warning: unused variable: `domain_msg`
  --> modules/src/ics04_channel/msgs/recv_packet.rs:84:13
   |
84 |     fn from(domain_msg: MsgRecvPacket) -> Self {
   |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_domain_msg`

warning: unused variable: `domain_msg`
  --> modules/src/ics04_channel/msgs/timeout.rs:94:13
   |
94 |     fn from(domain_msg: MsgTimeout) -> Self {
   |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_domain_msg`

warning: unused variable: `domain_msg`
  --> modules/src/ics04_channel/msgs/timeout_on_close.rs:93:13
   |
93 |     fn from(domain_msg: MsgTimeoutOnClose) -> Self {
   |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_domain_msg`

warning: unused variable: `s`
  --> modules/src/ics04_channel/packet.rs:80:17
   |
80 |     fn from_str(s: &str) -> Result<Self, Self::Err> {
   |                 ^ help: if this is intentional, prefix it with an underscore: `_s`

warning: unused variable: `f`
   --> modules/src/ics04_channel/packet.rs:139:19
    |
139 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                   ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: unused variable: `f`
   --> modules/src/ics04_channel/packet.rs:152:19
    |
152 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                   ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: unused variable: `reason`
 --> modules/src/ics07_tendermint/error.rs:9:15
  |
9 |             { reason: String }
  |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `reason`
  --> modules/src/ics07_tendermint/error.rs:13:15
   |
13 |             { reason: String }
   |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `reason`
  --> modules/src/ics07_tendermint/error.rs:20:15
   |
20 |             { reason: String }
   |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
  --> modules/src/ics07_tendermint/error.rs:26:15
   |
26 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `reason`
  --> modules/src/ics07_tendermint/error.rs:25:15
   |
25 |             { reason: String }
   |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `reason`
  --> modules/src/ics07_tendermint/error.rs:35:15
   |
35 |             { reason: String }
   |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `reason`
  --> modules/src/ics07_tendermint/error.rs:39:15
   |
39 |             { reason: String }
   |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
  --> modules/src/ics07_tendermint/error.rs:82:15
   |
82 |             | e | { format_args!("invalid chain identifier: raw value {0}", e.raw_value) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `raw_value`
  --> modules/src/ics07_tendermint/error.rs:80:15
   |
80 |             { raw_value: String }
   |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_raw_value`

warning: unused variable: `reason`
  --> modules/src/ics07_tendermint/error.rs:88:15
   |
88 |             { reason: String }
   |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `reason`
  --> modules/src/ics07_tendermint/error.rs:96:15
   |
96 |             { reason: String }
   |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `f`
  --> modules/src/ics07_tendermint/misbehaviour.rs:69:19
   |
69 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
   |                   ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: unused variable: `e`
  --> modules/src/ics18_relayer/error.rs:12:15
   |
12 |             | e | { format_args!("client state on destination chain not found, (client id: {0})", e.client_id) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
  --> modules/src/ics18_relayer/error.rs:11:15
   |
11 |             { client_id: ClientId }
   |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `e`
  --> modules/src/ics18_relayer/error.rs:20:15
   |
20 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
  --> modules/src/ics18_relayer/error.rs:16:17
   |
16 |                 client_id: ClientId,
   |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `source_height`
  --> modules/src/ics18_relayer/error.rs:17:17
   |
17 |                 source_height: Height,
   |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_source_height`

warning: unused variable: `destination_height`
  --> modules/src/ics18_relayer/error.rs:18:17
   |
18 |                 destination_height: Height,
   |                 ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_destination_height`

warning: unused variable: `e`
  --> modules/src/ics18_relayer/error.rs:31:15
   |
31 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
  --> modules/src/ics18_relayer/error.rs:27:17
   |
27 |                 client_id: ClientId,
   |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `source_height`
  --> modules/src/ics18_relayer/error.rs:28:17
   |
28 |                 source_height: Height,
   |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_source_height`

warning: unused variable: `destination_height`
  --> modules/src/ics18_relayer/error.rs:29:17
   |
29 |                 destination_height: Height,
   |                 ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_destination_height`

warning: unused variable: `dest`
  --> modules/src/ics18_relayer/utils.rs:14:5
   |
14 |     dest: &Ctx,
   |     ^^^^ help: if this is intentional, prefix it with an underscore: `_dest`

warning: unused variable: `client_id`
  --> modules/src/ics18_relayer/utils.rs:15:5
   |
15 |     client_id: &ClientId,
   |     ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `src_header`
  --> modules/src/ics18_relayer/utils.rs:16:5
   |
16 |     src_header: AnyHeader,
   |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_src_header`

warning: unused variable: `domain_specs`
  --> modules/src/ics23_commitment/specs.rs:36:13
   |
36 |     fn from(domain_specs: ProofSpecs) -> Self {
   |             ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_domain_specs`

warning: unused variable: `e`
 --> modules/src/ics24_host/error.rs:9:15
  |
9 |             | e | { format_args!("identifier {0} cannot contain separator '/'", e.id) },
  |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `id`
 --> modules/src/ics24_host/error.rs:8:15
  |
8 |             { id : String }
  |               ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `e`
  --> modules/src/ics24_host/error.rs:18:15
   |
18 | ...   | e | { format_args!("identifier {0} has invalid length {1} must be between {2}-{3} characters", e.id, e.length, e.min, e.max) },
   |         ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `id`
  --> modules/src/ics24_host/error.rs:13:17
   |
13 |                 id: String,
   |                 ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `length`
  --> modules/src/ics24_host/error.rs:14:17
   |
14 |                 length: usize,
   |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_length`

warning: unused variable: `min`
  --> modules/src/ics24_host/error.rs:15:17
   |
15 |                 min: usize,
   |                 ^^^ help: if this is intentional, prefix it with an underscore: `_min`

warning: unused variable: `max`
  --> modules/src/ics24_host/error.rs:16:17
   |
16 |                 max: usize,
   |                 ^^^ help: if this is intentional, prefix it with an underscore: `_max`

warning: unused variable: `e`
  --> modules/src/ics24_host/error.rs:22:15
   |
22 | ...   | e | { format_args!("identifier {0} must only contain alphanumeric characters or `.`, `_`, `+`, `-`, `#`, - `[`, `]`, `<`, `>`", e...
   |         ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `id`
  --> modules/src/ics24_host/error.rs:21:15
   |
21 |             { id: String }
   |               ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `e`
  --> modules/src/ics24_host/error.rs:29:15
   |
29 |             | e | { format_args!("chain identifiers are expected to be in epoch format {0}", e.id) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `id`
  --> modules/src/ics24_host/error.rs:28:15
   |
28 |             { id: String }
   |               ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `serializer`
  --> modules/src/ics24_host/identifier.rs:31:28
   |
31 |     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>
   |                            ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serializer`

warning: unused variable: `deserializer`
  --> modules/src/ics24_host/identifier.rs:41:23
   |
41 |     fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>
   |                       ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_deserializer`

warning: unused variable: `other`
  --> modules/src/ics24_host/identifier.rs:59:18
   |
59 |     fn eq(&self, other: &ChainId) -> bool {
   |                  ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `other`
  --> modules/src/ics24_host/identifier.rs:74:27
   |
74 |     fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {
   |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `other`
  --> modules/src/ics24_host/identifier.rs:82:19
   |
82 |     fn cmp(&self, other: &Self) -> std::cmp::Ordering {
   |                   ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `other`
   --> modules/src/ics24_host/identifier.rs:216:19
    |
216 |     fn cmp(&self, other: &Self) -> std::cmp::Ordering {
    |                   ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `other`
   --> modules/src/ics24_host/identifier.rs:224:27
    |
224 |     fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {
    |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `s`
   --> modules/src/ics24_host/identifier.rs:295:17
    |
295 |     fn from_str(s: &str) -> Result<Self, Self::Err> {
    |                 ^ help: if this is intentional, prefix it with an underscore: `_s`

warning: unused variable: `other`
   --> modules/src/ics24_host/identifier.rs:339:27
    |
339 |     fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {
    |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `s`
   --> modules/src/ics24_host/identifier.rs:392:17
    |
392 |     fn from_str(s: &str) -> Result<Self, Self::Err> {
    |                 ^ help: if this is intentional, prefix it with an underscore: `_s`

warning: unused variable: `other`
   --> modules/src/ics24_host/identifier.rs:425:19
    |
425 |     fn cmp(&self, other: &Self) -> std::cmp::Ordering {
    |                   ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `other`
   --> modules/src/ics24_host/identifier.rs:437:19
    |
437 |     fn cmp(&self, other: &Self) -> std::cmp::Ordering {
    |                   ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `serializer`
   --> modules/src/ics24_host/identifier.rs:445:28
    |
445 |     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>
    |                            ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serializer`

warning: unused variable: `other`
   --> modules/src/ics24_host/identifier.rs:455:27
    |
455 |     fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {
    |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `deserializer`
   --> modules/src/ics24_host/identifier.rs:465:23
    |
465 |     fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>
    |                       ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_deserializer`

warning: unused variable: `s`
   --> modules/src/ics24_host/identifier.rs:506:17
    |
506 |     fn from_str(s: &str) -> Result<Self, Self::Err> {
    |                 ^ help: if this is intentional, prefix it with an underscore: `_s`

warning: unused variable: `serializer`
   --> modules/src/ics24_host/identifier.rs:525:28
    |
525 |     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>
    |                            ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serializer`

warning: unused variable: `deserializer`
   --> modules/src/ics24_host/identifier.rs:536:23
    |
536 |     fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>
    |                       ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_deserializer`

warning: unused variable: `other`
   --> modules/src/ics24_host/identifier.rs:554:19
    |
554 |     fn cmp(&self, other: &Self) -> std::cmp::Ordering {
    |                   ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `other`
   --> modules/src/ics24_host/identifier.rs:562:27
    |
562 |     fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {
    |                           ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `s`
   --> modules/src/ics24_host/identifier.rs:616:17
    |
616 |     fn from_str(s: &str) -> Result<Self, Self::Err> {
    |                 ^ help: if this is intentional, prefix it with an underscore: `_s`

warning: unused variable: `f`
  --> modules/src/ics24_host/path.rs:85:19
   |
85 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result {
   |                   ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: unused variable: `e`
  --> modules/src/ics26_routing/error.rs:29:15
   |
29 |             | e | { format_args!("unknown type URL {0}", e.url) },
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `url`
  --> modules/src/ics26_routing/error.rs:28:15
   |
28 |             { url: String }
   |               ^^^ help: if this is intentional, prefix it with an underscore: `_url`

warning: unused variable: `host_id`
   --> modules/src/mock/context.rs:142:9
    |
142 |         host_id: ChainId,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_host_id`

warning: unused variable: `host_type`
   --> modules/src/mock/context.rs:143:9
    |
143 |         host_type: HostType,
    |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_host_type`

warning: unused variable: `max_history_size`
   --> modules/src/mock/context.rs:144:9
    |
144 |         max_history_size: usize,
    |         ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_max_history_size`

warning: unused variable: `latest_height`
   --> modules/src/mock/context.rs:145:9
    |
145 |         latest_height: Height,
    |         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_latest_height`

warning: unused variable: `client_id`
   --> modules/src/mock/context.rs:454:36
    |
454 |     pub fn consensus_states(&self, client_id: &ClientId) -> Vec<AnyConsensusStateWithHeight> { unimplemented!() }
    |                                    ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: variable does not need to be mutable
  --> modules/src/handler.rs:50:24
   |
50 |     pub fn with_log<U>(mut self, log: U) -> Self {
   |                        ----^^^^
   |                        |
   |                        help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> modules/src/handler.rs:50:24
   |
50 |     pub fn with_log<U>(mut self, log: U) -> Self {
   |                        ----^^^^
   |                        |
   |                        help: remove this `mut`

warning: associated function is never used: `timestamp_nanos`
  --> modules/src/timestamp.rs:42:10
   |
42 |   pub fn timestamp_nanos(&self) -> i64;
   |          ^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: associated function is never used: `is_some`
  --> modules/src/timestamp.rs:51:12
   |
51 |     pub fn is_some(&self) -> bool;
   |            ^^^^^^^

warning: associated function is never used: `unwrap`
  --> modules/src/timestamp.rs:55:12
   |
55 |     pub fn unwrap(self) -> T;
   |            ^^^^^^

warning: constant is never used: `CREATE_EVENT_TYPE`
  --> modules/src/ics02_client/events.rs:18:1
   |
18 | const CREATE_EVENT_TYPE: &str = "create_client";
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `UPDATE_EVENT_TYPE`
  --> modules/src/ics02_client/events.rs:19:1
   |
19 | const UPDATE_EVENT_TYPE: &str = "update_client";
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `MISBEHAVIOUR_EVENT_TYPE`
  --> modules/src/ics02_client/events.rs:20:1
   |
20 | const MISBEHAVIOUR_EVENT_TYPE: &str = "client_misbehaviour";
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `UPGRADE_EVENT_TYPE`
  --> modules/src/ics02_client/events.rs:21:1
   |
21 | const UPGRADE_EVENT_TYPE: &str = "upgrade_client";
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `CLIENT_ID_ATTRIBUTE_KEY`
  --> modules/src/ics02_client/events.rs:24:1
   |
24 | const CLIENT_ID_ATTRIBUTE_KEY: &str = "client_id";
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `CLIENT_TYPE_ATTRIBUTE_KEY`
  --> modules/src/ics02_client/events.rs:27:1
   |
27 | const CLIENT_TYPE_ATTRIBUTE_KEY: &str = "client_type";
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `CONSENSUS_HEIGHT_ATTRIBUTE_KEY`
  --> modules/src/ics02_client/events.rs:30:1
   |
30 | const CONSENSUS_HEIGHT_ATTRIBUTE_KEY: &str = "consensus_height";
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `HEADER`
  --> modules/src/ics02_client/events.rs:33:1
   |
33 | const HEADER: &str = "header";
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `extract_attributes_from_tx`
  --> modules/src/ics02_client/events.rs:56:4
   |
56 | fn extract_attributes_from_tx(event: &tendermint::abci::Event) -> Attributes {
   |    ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `is_ok`
  --> modules/src/ics03_connection/events.rs:44:12
   |
44 |     pub fn is_ok(&self) -> bool {
   |            ^^^^^

warning: associated function is never used: `unwrap`
  --> modules/src/ics03_connection/events.rs:51:12
   |
51 |     pub fn unwrap(self) -> T {
   |            ^^^^^^

warning: function is never used: `process`
  --> modules/src/ics03_connection/handler/conn_open_ack.rs:13:15
   |
13 | pub(crate) fn process(
   |               ^^^^^^^

warning: function is never used: `process`
  --> modules/src/ics03_connection/handler/conn_open_confirm.rs:13:15
   |
13 | pub(crate) fn process(
   |               ^^^^^^^

warning: function is never used: `process`
  --> modules/src/ics03_connection/handler/conn_open_init.rs:13:15
   |
13 | pub(crate) fn process(
   |               ^^^^^^^

warning: function is never used: `process`
  --> modules/src/ics03_connection/handler/conn_open_try.rs:17:15
   |
17 | pub(crate) fn process(
   |               ^^^^^^^

warning: function is never used: `process`
  --> modules/src/ics04_channel/handler/chan_close_confirm.rs:16:15
   |
16 | pub(crate) fn process(
   |               ^^^^^^^

warning: function is never used: `process`
  --> modules/src/ics04_channel/handler/chan_close_init.rs:15:15
   |
15 | pub(crate) fn process(
   |               ^^^^^^^

warning: function is never used: `process`
  --> modules/src/ics04_channel/handler/chan_open_ack.rs:16:15
   |
16 | pub(crate) fn process(
   |               ^^^^^^^

warning: function is never used: `process`
  --> modules/src/ics04_channel/handler/chan_open_confirm.rs:16:15
   |
16 | pub(crate) fn process(
   |               ^^^^^^^

warning: function is never used: `process`
  --> modules/src/ics04_channel/handler/chan_open_init.rs:16:15
   |
16 | pub(crate) fn process(
   |               ^^^^^^^

warning: function is never used: `process`
  --> modules/src/ics04_channel/handler/chan_open_try.rs:18:15
   |
18 | pub(crate) fn process(
   |               ^^^^^^^

warning: field is never read: `specs`
  --> modules/src/ics23_commitment/specs.rs:15:5
   |
15 |     specs: Vec<ProofSpec>,
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `UPGRADED_IBC_STATE`
  --> modules/src/ics24_host/path.rs:21:1
   |
21 | const UPGRADED_IBC_STATE: &str = "upgradedIBCState";
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `UPGRADED_CLIENT_STATE`
  --> modules/src/ics24_host/path.rs:23:1
   |
23 | const UPGRADED_CLIENT_STATE: &str = "upgradedClient";
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `UPGRADED_CLIENT_CONSENSUS_STATE`
  --> modules/src/ics24_host/path.rs:25:1
   |
25 | const UPGRADED_CLIENT_CONSENSUS_STATE: &str = "upgradedConsState";
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `ser_hex_upper`
 --> modules/src/serializers.rs:7:8
  |
7 | pub fn ser_hex_upper<S, T>(data: T, serializer: S) -> Result<S::Ok, S::Error>
  |        ^^^^^^^^^^^^^

warning: unused return value of `std::option::Option::<T>::is_some` that must be used
  --> modules/src/timestamp.rs:49:5
   |
49 | /     #[pure]
50 | |     #[ensures(matches!(*self, Some(_)) == result)]
51 | |     pub fn is_some(&self) -> bool;
   | |__________________________________^
   |
   = note: `#[warn(unused_must_use)]` on by default
   = note: if you intended to assert that this has a value, consider `.unwrap()` instead

warning: unused return value of `std::result::Result::<T, E>::is_ok` that must be used
  --> modules/src/ics03_connection/events.rs:43:5
   |
43 | /     #[pure]
44 | |     pub fn is_ok(&self) -> bool {
45 | |         match self {
46 | |             Ok(_) => true,
47 | |             Err(_) => false
48 | |         }
49 | |     }
   | |_____^
   |
   = note: if you intended to assert that this is ok, consider `.unwrap()` instead

warning: [Prusti: unsupported feature] unsupported constant value: Value(Slice { data: Allocation { bytes: [], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [], len: Size { raw: 0 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 0 })
  --> modules/src/ics02_client/client_consensus.rs:96:13
   |
96 |             "" => Err(Error::empty_consensus_state_response()),
   |             ^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#33r, [&str; 2], Not)
   --> modules/src/ics02_client/events.rs:158:55
    |
158 |         client_id: extract_attribute(object, &format!("{}.client_id", namespace))?
    |                                                       ^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant value: Value(Slice { data: Allocation { bytes: [47, 105, 98, 99, 46, 108, 105, 103, 104, 116, 99, 108, 105, 101, 110, 116, 115, 46, 116, 101, 110, 100, 101, 114, 109, 105, 110, 116, 46, 118, 49, 46, 72, 101, 97, 100, 101, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [274877906943], len: Size { raw: 38 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 38 })
  --> modules/src/ics02_client/header.rs:74:13
   |
74 |             TENDERMINT_HEADER_TYPE_URL => {
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> modules/src/ics02_client/height.rs:132:32
    |
132 |             .field("revision", &self.revision_number)
    |                                ^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#12r, [&str; 2], Not)
   --> modules/src/ics02_client/height.rs:177:17
    |
177 |         format!("{}-{}", height.revision_number, height.revision_number)
    |                 ^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant value: Value(Slice { data: Allocation { bytes: [47, 105, 98, 99, 46, 108, 105, 103, 104, 116, 99, 108, 105, 101, 110, 116, 115, 46, 116, 101, 110, 100, 101, 114, 109, 105, 110, 116, 46, 118, 49, 46, 77, 105, 115, 98, 101, 104, 97, 118, 105, 111, 117, 114], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [17592186044415], len: Size { raw: 44 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 44 })
  --> modules/src/ics02_client/misbehaviour.rs:77:13
   |
77 |             TENDERMINT_MISBEHAVIOR_TYPE_URL => Ok(AnyMisbehaviour::Tendermint(
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#24r, [&str; 1], Not)
   --> modules/src/ics02_client/misbehaviour.rs:117:54
    |
117 |             AnyMisbehaviour::Mock(mock) => write!(f, "{:?}", mock),
    |                                                      ^^^^^^

warning: [Prusti: unsupported feature] unsupported constant value: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:319 ~ ibc[9b7e]::timestamp::ZERO_DURATION), const_param_did: None }, substs: [], promoted: None })
   --> modules/src/ics03_connection/connection.rs:102:9
    |
102 | /         Self {
103 | |             state: State::Uninitialized,
104 | |             client_id: Default::default(),
105 | |             counterparty: Default::default(),
106 | |             versions: vec![],
107 | |             delay_period: ZERO_DURATION,
108 | |         }
    | |_________^

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
   --> modules/src/ics03_connection/connection.rs:194:25
    |
194 |         self.versions = vec![new_version];
    |                         ^^^^^^^^^^^^^^^^^
    |
    = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#8r, ics03_connection::connection::State, Not)
   --> modules/src/ics03_connection/connection.rs:208:28
    |
208 |         self.state_matches(&State::Open)
    |                            ^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#8r, ics03_connection::connection::State, Not)
   --> modules/src/ics03_connection/connection.rs:212:28
    |
212 |         self.state_matches(&State::Uninitialized)
    |                            ^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics24_host::identifier::ConnectionId>
   --> modules/src/ics03_connection/connection.rs:327:5
    |
327 | /     pub fn connection_id(&self) -> Option<&ConnectionId> {
328 | |         self.connection_id.as_ref()
329 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#7r, ics03_connection::connection::State, Not)
   --> modules/src/ics03_connection/connection.rs:380:17
    |
380 |         self == State::Open
    |                 ^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported cast from type 'ics03_connection::connection::State' to type 'u32'
   --> modules/src/ics03_connection/connection.rs:393:9
    |
393 |         self as u32 <= other as u32
    |         ^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant value: Value(Slice { data: Allocation { bytes: [99, 111, 110, 110, 101, 99, 116, 105, 111, 110, 95, 111, 112, 101, 110, 95, 105, 110, 105, 116], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1048575], len: Size { raw: 20 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 20 })
  --> modules/src/ics03_connection/events.rs:24:9
   |
24 |         INIT_EVENT_TYPE => Some(IbcEvent::OpenInitConnection(OpenInit::from(
   |         ^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] iterators are not fully supported yet
  --> modules/src/ics03_connection/events.rs:62:16
   |
62 |     for tag in &event.attributes {
   |                ^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
  --> modules/src/ics03_connection/handler/conn_open_ack.rs:20:35
   |
20 |     check_client_consensus_height(ctx, msg.consensus_height())?;
   |                                   ^^^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
  --> modules/src/ics03_connection/handler/conn_open_confirm.rs:51:19
   |
51 |     verify_proofs(ctx, None, &new_conn_end, &expected_conn, msg.proofs())?;
   |                   ^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#28r, [&str; 1], Not)
  --> modules/src/ics03_connection/handler/conn_open_init.rs:37:9
   |
37 |         "success: generated new connection identifier: {}",
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
  --> modules/src/ics03_connection/handler/verify.rs:48:13
   |
48 |             ctx,
   |             ^^^

warning: [Prusti: unsupported feature] higher-ranked lifetimes and types are not supported
   --> modules/src/ics03_connection/msgs/conn_open_ack.rs:99:28
    |
99  |           let client_proof = Some(msg.proof_client)
    |  ____________________________^
100 | |             .filter(|x| !x.is_empty())
    | |______________________________________^

warning: [Prusti: unsupported feature] iterators are not fully supported yet
  --> modules/src/ics03_connection/version.rs:39:24
   |
39 |         for feature in value.features.iter() {
   |                        ^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
  --> modules/src/ics03_connection/version.rs:64:23
   |
64 |             features: vec!["ORDER_ORDERED".to_string(), "ORDER_UNORDERED".to_string()],
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
  --> modules/src/ics03_connection/version.rs:71:5
   |
71 |     vec![Version::default()]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] iterators are not fully supported yet
  --> modules/src/ics03_connection/version.rs:80:14
   |
80 |     for s in supported_versions.iter() {
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#8r, ics04_channel::channel::State, Not)
   --> modules/src/ics04_channel/channel.rs:196:28
    |
196 |         self.state_matches(&State::Open)
    |                            ^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#17r, &str, Not)
   --> modules/src/ics04_channel/channel.rs:228:37
    |
228 |         if self.version().trim() == "" {
    |                                     ^^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics24_host::identifier::ChannelId>
   --> modules/src/ics04_channel/channel.rs:288:5
    |
288 | /     pub fn channel_id(&self) -> Option<&ChannelId> {
289 | |         self.channel_id.as_ref()
290 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#15r, [&str; 1], Not)
   --> modules/src/ics04_channel/channel.rs:346:19
    |
346 |         write!(f, "{}", self.as_str())
    |                   ^^^^

warning: [Prusti: unsupported feature] unsupported constant value: Value(Slice { data: Allocation { bytes: [117, 110, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [8191], len: Size { raw: 13 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 13 })
   --> modules/src/ics04_channel/channel.rs:376:13
    |
376 |             "uninitialized" => Ok(Self::None),
    |             ^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#7r, ics04_channel::channel::State, Not)
   --> modules/src/ics04_channel/channel.rs:429:17
    |
429 |         self == State::Open
    |                 ^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported cast from type 'ics04_channel::channel::State' to type 'u32'
   --> modules/src/ics04_channel/channel.rs:442:9
    |
442 |         self as u32 <= other as u32
    |         ^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#15r, [&str; 1], Not)
   --> modules/src/ics04_channel/channel.rs:449:19
    |
449 |         write!(f, "{}", self.as_string())
    |                   ^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#10r, &str, Not)
   --> modules/src/ics04_channel/error.rs:321:21
    |
321 |         e.add_trace(&"Handshake proof verification fails at ChannelOpenConfirm")
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant value: Value(Slice { data: Allocation { bytes: [99, 104, 97, 110, 110, 101, 108, 95, 111, 112, 101, 110, 95, 105, 110, 105, 116], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [131071], len: Size { raw: 17 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 17 })
  --> modules/src/ics04_channel/events.rs:46:9
   |
46 |         OPEN_INIT_EVENT_TYPE => Some(IbcEvent::OpenInitChannel(OpenInit::from(
   |         ^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] iterators are not fully supported yet
   --> modules/src/ics04_channel/events.rs:108:16
    |
108 |     for tag in &event.attributes {
    |                ^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] iterators are not fully supported yet
   --> modules/src/ics04_channel/events.rs:133:16
    |
133 |     for tag in &event.attributes {
    |                ^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics24_host::identifier::ChannelId>
   --> modules/src/ics04_channel/events.rs:203:5
    |
203 | /     pub fn channel_id(&self) -> Option<&ChannelId> {
204 | |         self.channel_id.as_ref()
205 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics24_host::identifier::ChannelId>
   --> modules/src/ics04_channel/events.rs:228:5
    |
228 | /     pub fn channel_id(&self) -> Option<&ChannelId> {
229 | |         self.0.channel_id.as_ref()
230 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics24_host::identifier::ChannelId>
   --> modules/src/ics04_channel/events.rs:268:5
    |
268 | /     pub fn channel_id(&self) -> Option<&ChannelId> {
269 | |         self.0.channel_id.as_ref()
270 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics24_host::identifier::ChannelId>
   --> modules/src/ics04_channel/events.rs:308:5
    |
308 | /     pub fn channel_id(&self) -> Option<&ChannelId> {
309 | |         self.0.channel_id.as_ref()
310 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics24_host::identifier::ChannelId>
   --> modules/src/ics04_channel/events.rs:321:5
    |
321 | /     pub fn counterparty_channel_id(&self) -> Option<&ChannelId> {
322 | |         self.0.counterparty_channel_id.as_ref()
323 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics24_host::identifier::ChannelId>
   --> modules/src/ics04_channel/events.rs:352:5
    |
352 | /     pub fn channel_id(&self) -> Option<&ChannelId> {
353 | |         self.0.channel_id.as_ref()
354 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics24_host::identifier::ChannelId>
   --> modules/src/ics04_channel/events.rs:396:5
    |
396 | /     pub fn channel_id(&self) -> &ChannelId {
397 | |         // FIXME(romac): Rework encoding of IbcEvents which use `Attributes`
398 | |         self.0
399 | |             .channel_id
400 | |             .as_ref()
401 | |             .expect("CloseInit should always have a channel_id")
402 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics24_host::identifier::ChannelId>
   --> modules/src/ics04_channel/events.rs:408:5
    |
408 | /     pub fn counterparty_channel_id(&self) -> Option<&ChannelId> {
409 | |         self.0.counterparty_channel_id.as_ref()
410 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics24_host::identifier::ChannelId>
   --> modules/src/ics04_channel/events.rs:458:5
    |
458 | /     pub fn channel_id(&self) -> Option<&ChannelId> {
459 | |         self.0.channel_id.as_ref()
460 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#68r, [&str; 2], Not)
   --> modules/src/ics04_channel/events.rs:495:56
    |
495 |             sequence: extract_attribute(&obj, &format!("{}.packet_sequence", obj.action))?
    |                                                        ^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#14r, [&str; 2], Not)
   --> modules/src/ics04_channel/events.rs:561:65
    |
561 |         let data_str: String = extract_attribute(&obj, &format!("{}.packet_data", obj.action))?;
    |                                                                 ^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#16r, [&str; 2], Not)
   --> modules/src/ics04_channel/events.rs:578:19
    |
578 |         write!(f, "SendPacket - h:{}, {}", self.height, self.packet)
    |                   ^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#14r, [&str; 2], Not)
   --> modules/src/ics04_channel/events.rs:613:65
    |
613 |         let data_str: String = extract_attribute(&obj, &format!("{}.packet_data", obj.action))?;
    |                                                                 ^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#16r, [&str; 2], Not)
   --> modules/src/ics04_channel/events.rs:630:19
    |
630 |         write!(f, "ReceivePacket - h:{}, {}", self.height, self.packet)
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#23r, [&str; 2], Not)
   --> modules/src/ics04_channel/events.rs:668:65
    |
668 |         let data_str: String = extract_attribute(&obj, &format!("{}.packet_data", obj.action))?;
    |                                                                 ^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#16r, [&str; 2], Not)
   --> modules/src/ics04_channel/events.rs:693:13
    |
693 |             "WriteAcknowledgement - h:{}, {}",
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#16r, [&str; 2], Not)
   --> modules/src/ics04_channel/events.rs:737:19
    |
737 |         write!(f, "h:{}, {}", self.height, self.packet)
    |                   ^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#16r, [&str; 2], Not)
   --> modules/src/ics04_channel/events.rs:786:19
    |
786 |         write!(f, "TimeoutPacket - h:{}, {}", self.height, self.packet)
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#16r, [&str; 2], Not)
   --> modules/src/ics04_channel/events.rs:837:13
    |
837 |             "TimeoutOnClosePacket - h:{}, {}",
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics24_host::identifier::ChannelId>
  --> modules/src/ics04_channel/msgs/chan_open_try.rs:80:5
   |
80 | /     fn validate_basic(&self) -> Result<(), ValidationError> {
81 | |         match self.channel().counterparty().channel_id() {
82 | |             None => Err(ValidationError::invalid_counterparty_channel_id()),
83 | |             Some(_c) => Ok(()),
84 | |         }
85 | |     }
   | |_____^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#82r, [&str; 1], Not)
  --> modules/src/ics04_channel/packet.rs:53:56
   |
53 |             PacketMsgType::TimeoutOnClose => write!(f, "(PacketMsgType::TimeoutOnClose)"),
   |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#15r, [&str; 1], Not)
   --> modules/src/ics04_channel/packet.rs:112:19
    |
112 |         write!(f, "{}", self.0)
    |                   ^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#17r, timestamp::Expiry, Not)
   --> modules/src/ics04_channel/packet.rs:133:78
    |
133 |                 && Timestamp::now().check_expiry(&self.timeout_timestamp) == Expired)
    |                                                                              ^^^^^^^

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
  --> modules/src/ics04_channel/version.rs:42:23
   |
42 |             features: vec!["TOKEN_TRANSFER".to_string()],
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#15r, [&str; 1], Not)
  --> modules/src/ics04_channel/version.rs:59:13
   |
59 |             "{}",
   |             ^^^^

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
  --> modules/src/ics04_channel/version.rs:70:5
   |
70 |     vec![default_version_string()]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] determining the region of a dereferentiation is not supported
  --> modules/src/ics04_channel/version.rs:86:38
   |
86 |             intersection.append(&mut vec![supported_version.clone()]);
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] iterators are not fully supported yet
   --> modules/src/ics04_channel/version.rs:100:24
    |
100 |     for version_str in versions.iter() {
    |                        ^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] iterators are not fully supported yet
   --> modules/src/ics04_channel/version.rs:112:20
    |
112 |     for feature in version.features {
    |                    ^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant value: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:319 ~ ibc[9b7e]::timestamp::ZERO_DURATION), const_param_did: None }, substs: [], promoted: None })
   --> modules/src/ics07_tendermint/client_state.rs:121:9
    |
121 |         client_state.trusting_period = ZERO_DURATION;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
   --> modules/src/ics07_tendermint/client_state.rs:393:17
    |
393 |                 vec!["".to_string()],
    |                 ^^^^^^^^^^^^^^^^^^^^
    |
    = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#6r, chrono::Utc, Not)
  --> modules/src/ics07_tendermint/consensus_state.rs:84:24
   |
84 |             timestamp: Utc
   |                        ^^^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
  --> modules/src/ics23_commitment/commitment.rs:19:47
   |
19 |         f.debug_tuple("CommitmentRoot").field(&hex).finish()
   |                                               ^^^^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<&str, std::str::Utf8Error>
   --> modules/src/ics23_commitment/commitment.rs:138:5
    |
138 | /     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
139 | |         let converted = std::str::from_utf8(self.as_bytes());
140 | |         match converted {
141 | |             Ok(s) => write!(f, "{}", s),
142 | |             Err(_e) => write!(f, "<not valid UTF8: {:?}>", self.as_bytes()),
143 | |         }
144 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#12r, [&str; 1], Not)
   --> modules/src/ics23_commitment/commitment.rs:152:17
    |
152 |         format!("{:?}", self).serialize(serializer)
    |                 ^^^^^^

warning: [Prusti: unsupported feature] determining the region of a dereferentiation is not supported
  --> modules/src/ics23_commitment/merkle.rs:31:35
   |
31 |     let mut result: Vec<String> = vec![format!("{:?}", prefix)];
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] iterators are not fully supported yet
  --> modules/src/ics23_commitment/merkle.rs:97:15
   |
97 |     for op in &tm_proof.ops {
   |               ^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#12r, [&str; 2], Not)
   --> modules/src/ics24_host/identifier.rs:100:25
    |
100 |             id: format!("{}-{}", name, version),
    |                         ^^^^^^^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&&str>
   --> modules/src/ics24_host/identifier.rs:126:5
    |
126 | /     pub fn chain_version(chain_id: &str) -> u64 {
127 | |         if !ChainId::is_epoch_format(chain_id) {
128 | |             return 0;
129 | |         }
...   |
136 | |             .unwrap_or(0)
137 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#16r, [&str; 2], Not)
   --> modules/src/ics24_host/identifier.rs:647:19
    |
647 |         write!(f, "{}/{}", self.port_id, self.channel_id)
    |                   ^^^^^^^

warning: [Prusti: unsupported feature] iterators are not fully supported yet
  --> modules/src/ics26_routing/handler.rs:29:20
   |
29 |     for any_msg in messages {
   |                    ^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant value: Value(Slice { data: Allocation { bytes: [47, 105, 98, 99, 46, 99, 111, 114, 101, 46, 99, 108, 105, 101, 110, 116, 46, 118, 49, 46, 77, 115, 103, 67, 114, 101, 97, 116, 101, 67, 108, 105, 101, 110, 116], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [34359738367], len: Size { raw: 35 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 35 })
  --> modules/src/ics26_routing/msgs.rs:32:13
   |
32 |             create_client::TYPE_URL => {
   |             ^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
  --> modules/src/test_utils.rs:23:28
   |
23 |             pub_key_types: vec![Algorithm::Ed25519],
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
  --> modules/src/mock/client_def.rs:58:34
   |
58 |             apply_prefix(prefix, vec![client_prefixed_path]).map_err(Error::empty_prefix)?;
   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics24_host::identifier::ConnectionId>
  --> modules/src/mock/client_def.rs:68:5
   |
68 | /     fn verify_connection_state(
69 | |         &self,
70 | |         _client_state: &Self::ClientState,
71 | |         _height: Height,
...  |
77 | |         Ok(())
78 | |     }
   | |_____^

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
   --> modules/src/mock/client_state.rs:128:40
    |
128 |             root: CommitmentRoot::from(vec![0]),
    |                                        ^^^^^^^
    |
    = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
   --> modules/src/mock/client_state.rs:147:40
    |
147 |             root: CommitmentRoot::from(vec![0]),
    |                                        ^^^^^^^
    |
    = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
   --> modules/src/mock/context.rs:246:32
    |
246 |         let consensus_states = vec![(cs_height, consensus_state)].into_iter().collect();
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&mock::host::HostBlock>
   --> modules/src/mock/context.rs:383:6
    |
383 |     }
    |      ^

warning: [Prusti: unsupported feature] iterators are not fully supported yet
   --> modules/src/mock/context.rs:438:18
    |
438 |         for i in 1..self.history.len() {
    |                  ^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics05_port::capabilities::Capability>
   --> modules/src/mock/context.rs:474:5
    |
474 | /     fn lookup_module_by_port(&self, port_id: &PortId) -> Option<Capability> {
475 | |         self.port_capabilities.get(port_id).cloned()
476 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics04_channel::channel::ChannelEnd>
   --> modules/src/mock/context.rs:484:5
    |
484 | /     fn channel_end(&self, pcid: &(PortId, ChannelId)) -> Option<ChannelEnd> {
485 | |         self.channels.get(pcid).cloned()
486 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics03_connection::connection::ConnectionEnd>
   --> modules/src/mock/context.rs:488:5
    |
488 | /     fn connection_end(&self, cid: &ConnectionId) -> Option<ConnectionEnd> {
489 | |         self.connections.get(cid).cloned()
490 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&std::vec::Vec<(ics24_host::identifier::PortId, ics24_host::identifier::ChannelId)>>
   --> modules/src/mock/context.rs:492:5
    |
492 | /     fn connection_channels(&self, cid: &ConnectionId) -> Option<Vec<(PortId, ChannelId)>> {
493 | |         self.connection_channels.get(cid).cloned()
494 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics04_channel::packet::Sequence>
   --> modules/src/mock/context.rs:522:5
    |
522 | /     fn get_next_sequence_send(&self, port_channel_id: &(PortId, ChannelId)) -> Option<Sequence> {
523 | |         self.next_sequence_send.get(port_channel_id).cloned()
524 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics04_channel::packet::Sequence>
   --> modules/src/mock/context.rs:526:5
    |
526 | /     fn get_next_sequence_recv(&self, port_channel_id: &(PortId, ChannelId)) -> Option<Sequence> {
527 | |         self.next_sequence_recv.get(port_channel_id).cloned()
528 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics04_channel::packet::Sequence>
   --> modules/src/mock/context.rs:530:5
    |
530 | /     fn get_next_sequence_ack(&self, port_channel_id: &(PortId, ChannelId)) -> Option<Sequence> {
531 | |         self.next_sequence_ack.get(port_channel_id).cloned()
532 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&std::string::String>
   --> modules/src/mock/context.rs:534:5
    |
534 | /     fn get_packet_commitment(&self, key: &(PortId, ChannelId, Sequence)) -> Option<String> {
535 | |         self.packet_commitment.get(key).cloned()
536 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics04_channel::packet::Receipt>
   --> modules/src/mock/context.rs:538:5
    |
538 | /     fn get_packet_receipt(&self, key: &(PortId, ChannelId, Sequence)) -> Option<Receipt> {
539 | |         self.packet_receipt.get(key).cloned()
540 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&std::string::String>
   --> modules/src/mock/context.rs:542:5
    |
542 | /     fn get_packet_acknowledgement(&self, key: &(PortId, ChannelId, Sequence)) -> Option<String> {
543 | |         self.packet_acknowledgement.get(key).cloned()
544 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#14r, [&str; 1], Not)
   --> modules/src/mock/context.rs:548:17
    |
548 |         format!("{:x}", r)
    |                 ^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#14r, [&str; 3], Not)
   --> modules/src/mock/context.rs:572:29
    |
572 |         let input = format!("{:?},{:?},{:?}", timeout_timestamp, timeout_height, data);
    |                             ^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#12r, [&str; 1], Not)
   --> modules/src/mock/context.rs:583:29
    |
583 |         let input = format!("{:?}", ack);
    |                             ^^^^^^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::collections::hash_map::Entry<'_, ics24_host::identifier::ConnectionId, std::vec::Vec<(ics24_host::identifier::PortId, ics24_host::identifier::ChannelId)>>
   --> modules/src/mock/context.rs:597:5
    |
597 | /     fn store_connection_channels(
598 | |         &mut self,
599 | |         cid: ConnectionId,
600 | |         port_channel_id: &(PortId, ChannelId),
...   |
606 | |         Ok(())
607 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ics03_connection::connection::ConnectionEnd>
   --> modules/src/mock/context.rs:669:5
    |
669 | /     fn connection_end(&self, cid: &ConnectionId) -> Option<ConnectionEnd> {
670 | |         self.connections.get(cid).cloned()
671 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&mock::host::HostBlock>
   --> modules/src/mock/context.rs:702:5
    |
702 | /     fn host_consensus_state(&self, height: Height) -> Option<AnyConsensusState> {
703 | |         let block_ref = self.host_block(height);
704 | |         block_ref.cloned().map(Into::into)
705 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&mock::client_state::MockClientRecord>
   --> modules/src/mock/context.rs:740:5
    |
740 | /     fn client_type(&self, client_id: &ClientId) -> Option<ClientType> {
741 | |         match self.clients.get(client_id) {
742 | |             Some(client_record) => client_record.client_type.into(),
743 | |             None => None,
744 | |         }
745 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&mock::client_state::MockClientRecord>
   --> modules/src/mock/context.rs:747:5
    |
747 | /     fn client_state(&self, client_id: &ClientId) -> Option<AnyClientState> {
748 | |         match self.clients.get(client_id) {
749 | |             Some(client_record) => client_record.client_state.clone(),
750 | |             None => None,
751 | |         }
752 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&mock::client_state::MockClientRecord>
   --> modules/src/mock/context.rs:754:5
    |
754 | /     fn consensus_state(&self, client_id: &ClientId, height: Height) -> Option<AnyConsensusState> {
755 | |         match self.clients.get(client_id) {
756 | |             Some(client_record) => match client_record.consensus_states.get(&height) {
757 | |                 Some(consensus_state) => Option::from(consensus_state.clone()),
...   |
761 | |         }
762 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::collections::hash_map::Entry<'_, ics24_host::identifier::ClientId, mock::client_state::MockClientRecord>
   --> modules/src/mock/context.rs:770:5
    |
770 | /     fn store_client_type(
771 | |         &mut self,
772 | |         client_id: ClientId,
773 | |         client_type: ClientType,
...   |
782 | |         Ok(())
783 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::collections::hash_map::Entry<'_, ics24_host::identifier::ClientId, mock::client_state::MockClientRecord>
   --> modules/src/mock/context.rs:785:5
    |
785 | /     fn store_client_state(
786 | |         &mut self,
787 | |         client_id: ClientId,
788 | |         client_state: AnyClientState,
...   |
797 | |         Ok(())
798 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::collections::hash_map::Entry<'_, ics24_host::identifier::ClientId, mock::client_state::MockClientRecord>
   --> modules/src/mock/context.rs:800:5
    |
800 | /     fn store_consensus_state(
801 | |         &mut self,
802 | |         client_id: ClientId,
803 | |         height: Height,
...   |
815 | |         Ok(())
816 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&mock::host::HostBlock>
   --> modules/src/mock/context.rs:835:5
    |
835 | /     fn query_latest_header(&self) -> Option<AnyHeader> {
836 | |         let block_ref = self.host_block(self.host_current_height());
837 | |         block_ref.cloned().map(Into::into)
838 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#6r, chrono::Utc, Not)
  --> modules/src/timestamp.rs:90:28
   |
90 |                 time: Some(Utc.timestamp_nanos(nanoseconds)),
   |                            ^^^

warning: [Prusti: unsupported feature] type parameters in arrays are not supported
 --> modules/src/serializers.rs:6:39
  |
6 | #[cfg_attr(feature="prusti", requires(Hex::upper_case().encode_to_string(data).is_ok()))]
  |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] higher-ranked lifetimes and types are not supported
   --> modules/src/ics03_connection/msgs/conn_open_ack.rs:100:21
    |
100 |             .filter(|x| !x.is_empty())
    |                     ^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#12r, [&str; 1], Not)
   --> modules/src/ics07_tendermint/client_state.rs:179:69
    |
179 |                 .map_err(|e| Error::invalid_trust_threshold(format!("{}", e)))?,
    |                                                                     ^^^^

warning: `ibc` (lib) generated 644 warnings
    Checking ibc-relayer v0.6.1 (/home/zgrannan/ibc-rs/relayer)
warning: unused import: `Instant`
 --> relayer/src/chain/cosmos.rs:8:22
  |
8 |     time::{Duration, Instant},
  |                      ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `itertools::Itertools`
  --> relayer/src/chain/cosmos.rs:16:5
   |
16 | use itertools::Itertools;
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tendermint::abci::Path as TendermintABCIPath`
  --> relayer/src/chain/cosmos.rs:19:5
   |
19 | use tendermint::abci::Path as TendermintABCIPath;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `EventType`
  --> relayer/src/chain/cosmos.rs:26:29
   |
26 | use tendermint_rpc::query::{EventType, Query};
   |                             ^^^^^^^^^

warning: unused imports: `debug`, `trace`
  --> relayer/src/chain/cosmos.rs:30:15
   |
30 | use tracing::{debug, trace, warn};
   |               ^^^^^  ^^^^^

warning: unused import: `ibc::ics23_commitment::merkle::convert_tm_to_ics_merkle_proof`
  --> relayer/src/chain/cosmos.rs:47:5
   |
47 | use ibc::ics23_commitment::merkle::convert_tm_to_ics_merkle_proof;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `IBC_QUERY_PATH`, `SDK_UPGRADE_QUERY_PATH`
  --> relayer/src/chain/cosmos.rs:51:48
   |
51 | use ibc::ics24_host::{ClientUpgradePath, Path, IBC_QUERY_PATH, SDK_UPGRADE_QUERY_PATH};
   |                                                ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `QueryAccountRequest`
  --> relayer/src/chain/cosmos.rs:55:53
   |
55 | use ibc_proto::cosmos::auth::v1beta1::{BaseAccount, QueryAccountRequest};
   |                                                     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `ibc_proto::cosmos::base::tendermint::v1beta1::service_client::ServiceClient`
  --> relayer/src/chain/cosmos.rs:56:5
   |
56 | use ibc_proto::cosmos::base::tendermint::v1beta1::service_client::ServiceClient;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ibc_proto::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest`
  --> relayer/src/chain/cosmos.rs:57:5
   |
57 | use ibc_proto::cosmos::base::tendermint::v1beta1::GetNodeInfoRequest;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `TxRaw`, `Tx`
  --> relayer/src/chain/cosmos.rs:61:86
   |
61 |     AuthInfo, Fee, ModeInfo, SignDoc, SignerInfo, SimulateRequest, SimulateResponse, Tx, TxBody,
   |                                                                                      ^^
62 |     TxRaw,
   |     ^^^^^

warning: unused import: `crate::util::retry::Fixed`
   --> relayer/src/chain/cosmos.rs:103:9
    |
103 |     use crate::util::retry::Fixed;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
   --> relayer/src/chain/cosmos.rs:104:9
    |
104 |     use std::time::Duration;
    |         ^^^^^^^^^^^^^^^^^^^

warning: unused import: `prusti_contracts::*`
   --> relayer/src/chain/cosmos.rs:107:9
    |
107 |     use prusti_contracts::*;
    |         ^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::util::retry::retry_with_index`
  --> relayer/src/channel.rs:28:5
   |
28 | use crate::util::retry::retry_with_index;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `prusti_contracts::*`
  --> relayer/src/channel.rs:36:9
   |
36 |     use prusti_contracts::*;
   |         ^^^^^^^^^^^^^^^^^^^

warning: unused import: `retry::delay::Fibonacci`
  --> relayer/src/channel.rs:40:9
   |
40 |     use retry::delay::Fibonacci;
   |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::chain::cosmos::GENESIS_MAX_BYTES_MAX_FRACTION`
  --> relayer/src/error.rs:32:5
   |
32 | use crate::chain::cosmos::GENESIS_MAX_BYTES_MAX_FRACTION;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `pin_mut`, `self`
 --> relayer/src/event/monitor.rs:8:5
  |
8 |     pin_mut,
  |     ^^^^^^^
9 |     stream::{self, select_all, StreamExt},
  |              ^^^^

warning: unused imports: `error`, `info`
  --> relayer/src/event/monitor.rs:14:22
   |
14 | use tracing::{debug, error, info, trace};
   |                      ^^^^^  ^^^^

warning: unused imports: `EventType`, `WebSocketClientDriver`
  --> relayer/src/event/monitor.rs:19:13
   |
19 |     query::{EventType, Query},
   |             ^^^^^^^^^
20 |     Error as RpcError, Result as RpcResult, SubscriptionClient, WebSocketClient,
21 |     WebSocketClientDriver,
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `RetryResult`, `retry_count`, `retry_with_index`
  --> relayer/src/event/monitor.rs:28:13
   |
28 |     retry::{retry_count, retry_with_index, RetryResult}
   |             ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `retry::delay::Fibonacci`
  --> relayer/src/event/monitor.rs:39:9
   |
39 |     use retry::delay::Fibonacci;
   |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `prusti_contracts::*`
 --> relayer/src/util/retry.rs:2:5
  |
2 | use prusti_contracts::*;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `prusti_contracts::*`
 --> relayer/src/util/stream.rs:2:5
  |
2 | use prusti_contracts::*;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `async_stream::stream`
 --> relayer/src/util/stream.rs:4:5
  |
4 | use async_stream::stream;
  |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `futures::stream::Stream`
 --> relayer/src/util/stream.rs:5:5
  |
5 | use futures::stream::Stream;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `prusti_contracts::*`
 --> relayer/src/worker/retry_strategy.rs:2:5
  |
2 | use prusti_contracts::*;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `prusti_contracts::*`
 --> relayer/src/worker/map.rs:2:5
  |
2 | use prusti_contracts::*;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `warn`
 --> relayer/src/worker/client.rs:4:35
  |
4 | use tracing::{debug, info, trace, warn};
  |                                   ^^^^

warning: unused import: `ForeignClientErrorDetail`
  --> relayer/src/worker/client.rs:10:37
   |
10 |     foreign_client::{ForeignClient, ForeignClientErrorDetail, MisbehaviourResults},
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `thread`, `time::Duration`
 --> relayer/src/worker/connection.rs:1:11
  |
1 | use std::{thread, time::Duration};
  |           ^^^^^^  ^^^^^^^^^^^^^^

warning: unused imports: `debug`, `info`, `warn`
 --> relayer/src/worker/connection.rs:4:15
  |
4 | use tracing::{debug, info, warn};
  |               ^^^^^  ^^^^  ^^^^

warning: unused import: `crate::connection::Connection as RelayConnection`
 --> relayer/src/worker/connection.rs:6:5
  |
6 | use crate::connection::Connection as RelayConnection;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `util::retry::retry_with_index`, `worker::retry_strategy`
  --> relayer/src/worker/connection.rs:9:57
   |
9  |     chain::handle::ChainHandlePair, object::Connection, util::retry::retry_with_index,
   |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
10 |     worker::retry_strategy,
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `thread`, `time::Duration`
 --> relayer/src/worker/channel.rs:1:11
  |
1 | use std::{thread, time::Duration};
  |           ^^^^^^  ^^^^^^^^^^^^^^

warning: unused imports: `debug`, `info`, `warn`
 --> relayer/src/worker/channel.rs:4:15
  |
4 | use tracing::{debug, info, warn};
  |               ^^^^^  ^^^^  ^^^^

warning: unused import: `crate::channel::Channel as RelayChannel`
 --> relayer/src/worker/channel.rs:6:5
  |
6 | use crate::channel::Channel as RelayChannel;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `util::retry::retry_with_index`, `worker::retry_strategy`
  --> relayer/src/worker/channel.rs:9:54
   |
9  |     chain::handle::ChainHandlePair, object::Channel, util::retry::retry_with_index,
   |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
10 |     worker::retry_strategy,
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
 --> relayer/src/worker/packet.rs:1:5
  |
1 | use std::time::Duration;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `info`, `warn`
 --> relayer/src/worker/packet.rs:4:22
  |
4 | use tracing::{error, info, warn};
  |                      ^^^^  ^^^^

warning: unused imports: `LinkParameters`, `retry_with_index`, `telemetry`, `worker::retry_strategy`
  --> relayer/src/worker/packet.rs:8:18
   |
8  |     link::{Link, LinkParameters, RelaySummary},
   |                  ^^^^^^^^^^^^^^
9  |     object::Packet,
10 |     telemetry,
   |     ^^^^^^^^^
11 |     telemetry::Telemetry,
12 |     util::retry::{retry_with_index, RetryResult},
   |                   ^^^^^^^^^^^^^^^^
13 |     worker::retry_strategy,
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `prost::Message`
  --> relayer/src/chain/cosmos.rs:17:5
   |
17 | use prost::Message;
   |     ^^^^^^^^^^^^^^

warning: unused import: `StreamExt`
 --> relayer/src/event/monitor.rs:9:32
  |
9 |     stream::{self, select_all, StreamExt},
  |                                ^^^^^^^^^

warning: unused import: `TryStreamExt`
  --> relayer/src/event/monitor.rs:10:13
   |
10 |     Stream, TryStreamExt,
   |             ^^^^^^^^^^^^

warning: unused import: `itertools::Itertools`
 --> relayer/src/supervisor.rs:9:5
  |
9 | use itertools::Itertools;
  |     ^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `proto_msgs`
   --> relayer/src/chain/cosmos.rs:328:27
    |
328 |     fn send_tx(&mut self, proto_msgs: Vec<Any>) -> Result<Response, Error> {
    |                           ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_proto_msgs`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `data`
   --> relayer/src/chain/cosmos.rs:458:21
    |
458 |     fn query(&self, data: Path, height: ICSHeight, prove: bool) -> Result<QueryResponse, Error> {
    |                     ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: unused variable: `height`
   --> relayer/src/chain/cosmos.rs:458:33
    |
458 |     fn query(&self, data: Path, height: ICSHeight, prove: bool) -> Result<QueryResponse, Error> {
    |                                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_height`

warning: unused variable: `prove`
   --> relayer/src/chain/cosmos.rs:458:52
    |
458 |     fn query(&self, data: Path, height: ICSHeight, prove: bool) -> Result<QueryResponse, Error> {
    |                                                    ^^^^^ help: if this is intentional, prefix it with an underscore: `_prove`

warning: unused variable: `data`
   --> relayer/src/chain/cosmos.rs:485:9
    |
485 |         data: ClientUpgradePath,
    |         ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: unused variable: `height`
   --> relayer/src/chain/cosmos.rs:486:9
    |
486 |         height: Height,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_height`

warning: unused variable: `tx_sync_results`
   --> relayer/src/chain/cosmos.rs:667:13
    |
667 |         mut tx_sync_results: Vec<TxSyncResult>,
    |             ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tx_sync_results`

warning: unused variable: `connection_id`
    --> relayer/src/chain/cosmos.rs:1207:9
     |
1207 |         connection_id: &ConnectionId,
     |         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_id`

warning: unused variable: `height`
    --> relayer/src/chain/cosmos.rs:1208:9
     |
1208 |         height: ICSHeight,
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_height`

warning: unused variable: `e`
  --> relayer/src/channel/error.rs:30:15
   |
30 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `reason`
  --> relayer/src/channel/error.rs:29:15
   |
29 |             { reason: String }
   |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
  --> relayer/src/channel/error.rs:40:15
   |
40 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
  --> relayer/src/channel/error.rs:39:15
   |
39 |             { chain_id: ChainId }
   |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/channel/error.rs:64:15
   |
64 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
  --> relayer/src/channel/error.rs:60:17
   |
60 |                 client_id: ClientId,
   |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `chain_id`
  --> relayer/src/channel/error.rs:61:17
   |
61 |                 chain_id: ChainId,
   |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/channel/error.rs:72:14
   |
72 |             |e| { format_args!("failed while fetching the signer for destination chain {}", e.chain_id) },
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
  --> relayer/src/channel/error.rs:70:15
   |
70 |             { chain_id: ChainId }
   |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/channel/error.rs:77:14
   |
77 |             |e| { format_args!("failed during a query to chain id {0}", e.chain_id) },
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
  --> relayer/src/channel/error.rs:75:15
   |
75 |             { chain_id: ChainId }
   |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/channel/error.rs:82:14
   |
82 |             |e| { format_args!("failed during a query to channel id {0}", e.channel_id) },
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
  --> relayer/src/channel/error.rs:80:15
   |
80 |             { channel_id: ChannelId }
   |               ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `chain_id`
  --> relayer/src/channel/error.rs:85:15
   |
85 |             { chain_id: ChainId }
   |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/channel/error.rs:96:14
   |
96 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `port_id`
  --> relayer/src/channel/error.rs:91:17
   |
91 |                 port_id: PortId,
   |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_port_id`

warning: unused variable: `channel_id`
  --> relayer/src/channel/error.rs:92:17
   |
92 |                 channel_id: ChannelId,
   |                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `chain_id`
  --> relayer/src/channel/error.rs:93:17
   |
93 |                 chain_id: ChainId,
   |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
   --> relayer/src/channel/error.rs:106:15
    |
106 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `state`
   --> relayer/src/channel/error.rs:103:17
    |
103 |                 state: State,
    |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `counterparty_state`
   --> relayer/src/channel/error.rs:104:17
    |
104 |                 counterparty_state: State
    |                 ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_counterparty_state`

warning: unused variable: `e`
   --> relayer/src/channel/error.rs:116:15
    |
116 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
   --> relayer/src/channel/error.rs:113:17
    |
113 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `port_channel_id`
   --> relayer/src/channel/error.rs:114:17
    |
114 |                 port_channel_id: PortChannelId,
    |                 ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_port_channel_id`

warning: unused variable: `e`
   --> relayer/src/channel/error.rs:123:14
    |
123 |             |e| { format_args!("channel {} already exist in an incompatible state", e.channel_id) },
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
   --> relayer/src/channel/error.rs:122:15
    |
122 |             { channel_id: ChannelId }
    |               ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `e`
   --> relayer/src/channel/error.rs:132:15
    |
132 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
   --> relayer/src/channel/error.rs:127:17
    |
127 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `port_channel_id`
   --> relayer/src/channel/error.rs:128:17
    |
128 |                 port_channel_id: PortChannelId,
    |                 ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_port_channel_id`

warning: unused variable: `expected_counterrparty_port_channel_id`
   --> relayer/src/channel/error.rs:129:17
    |
129 |                 expected_counterrparty_port_channel_id: PortChannelId,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_expected_counterrparty_port_channel_id`

warning: unused variable: `actual_counterrparty_port_channel_id`
   --> relayer/src/channel/error.rs:130:17
    |
130 |                 actual_counterrparty_port_channel_id: PortChannelId,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_actual_counterrparty_port_channel_id`

warning: unused variable: `e`
   --> relayer/src/channel/error.rs:147:15
    |
147 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `destination_chain_id`
   --> relayer/src/channel/error.rs:141:17
    |
141 |                 destination_chain_id: ChainId,
    |                 ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_destination_chain_id`

warning: unused variable: `destination_port_id`
   --> relayer/src/channel/error.rs:142:17
    |
142 |                 destination_port_id: PortId,
    |                 ^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_destination_port_id`

warning: unused variable: `source_chain_id`
   --> relayer/src/channel/error.rs:143:17
    |
143 |                 source_chain_id: ChainId,
    |                 ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_source_chain_id`

warning: unused variable: `counterparty_port_id`
   --> relayer/src/channel/error.rs:144:17
    |
144 |                 counterparty_port_id: PortId,
    |                 ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_counterparty_port_id`

warning: unused variable: `counterparty_channel_id`
   --> relayer/src/channel/error.rs:145:17
    |
145 |                 counterparty_channel_id: ChannelId,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_counterparty_channel_id`

warning: unused variable: `e`
   --> relayer/src/channel/error.rs:160:15
    |
160 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `description`
   --> relayer/src/channel/error.rs:158:17
    |
158 |                 description: String
    |                 ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_description`

warning: unused variable: `e`
   --> relayer/src/channel/error.rs:171:15
    |
171 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `description`
   --> relayer/src/channel/error.rs:166:17
    |
166 |                 description: String,
    |                 ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_description`

warning: unused variable: `tries`
   --> relayer/src/channel/error.rs:167:17
    |
167 |                 tries: u64,
    |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_tries`

warning: unused variable: `total_delay`
   --> relayer/src/channel/error.rs:168:17
    |
168 |                 total_delay: Duration,
    |                 ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_total_delay`

warning: unused variable: `source`
   --> relayer/src/channel/error.rs:169:17
    |
169 |                 source: Box<ChannelErrorDetail>,
    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_source`

warning: unused variable: `e`
   --> relayer/src/channel/error.rs:178:15
    |
178 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `reason`
   --> relayer/src/channel/error.rs:177:15
    |
177 |             { reason: String }
    |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
   --> relayer/src/channel/error.rs:185:15
    |
185 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `reason`
   --> relayer/src/channel/error.rs:184:15
    |
184 |             { reason: String }
    |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
   --> relayer/src/channel/error.rs:192:15
    |
192 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `event`
   --> relayer/src/channel/error.rs:191:15
    |
191 |             { event: IbcEvent }
    |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `e`
  --> relayer/src/connection.rs:49:14
   |
49 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `counterparty`
  --> relayer/src/connection.rs:48:15
   |
48 |             { counterparty: Counterparty }
   |               ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_counterparty`

warning: unused variable: `e`
  --> relayer/src/connection.rs:60:14
   |
60 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
  --> relayer/src/connection.rs:58:15
   |
58 |             { chain_id: ChainId }
   |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/connection.rs:67:14
   |
67 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `connection_id`
  --> relayer/src/connection.rs:65:15
   |
65 |             { connection_id: ConnectionId }
   |               ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_id`

warning: unused variable: `e`
  --> relayer/src/connection.rs:77:14
   |
77 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
  --> relayer/src/connection.rs:73:17
   |
73 |                 client_id: ClientId,
   |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `chain_id`
  --> relayer/src/connection.rs:74:17
   |
74 |                 chain_id: ChainId,
   |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/connection.rs:85:14
   |
85 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
  --> relayer/src/connection.rs:83:15
   |
83 |             { chain_id: ChainId }
   |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/connection.rs:92:14
   |
92 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `delay_period`
  --> relayer/src/connection.rs:91:15
   |
91 |             { delay_period: Duration }
   |               ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_delay_period`

warning: unused variable: `e`
  --> relayer/src/connection.rs:99:14
   |
99 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `event`
  --> relayer/src/connection.rs:98:15
   |
98 |             { event: IbcEvent }
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `e`
   --> relayer/src/connection.rs:106:14
    |
106 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `event`
   --> relayer/src/connection.rs:105:15
    |
105 |             { event: String }
    |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `e`
   --> relayer/src/connection.rs:116:14
    |
116 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
   --> relayer/src/connection.rs:113:17
    |
113 |                 client_id: ClientId,
    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `foreign_client_id`
   --> relayer/src/connection.rs:114:17
    |
114 |                 foreign_client_id: ClientId
    |                 ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_foreign_client_id`

warning: unused variable: `e`
   --> relayer/src/connection.rs:126:14
    |
126 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `source_chain_id`
   --> relayer/src/connection.rs:123:17
    |
123 |                 source_chain_id: ChainId,
    |                 ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_source_chain_id`

warning: unused variable: `destination_chain_id`
   --> relayer/src/connection.rs:124:17
    |
124 |                 destination_chain_id: ChainId
    |                 ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_destination_chain_id`

warning: unused variable: `e`
   --> relayer/src/connection.rs:135:14
    |
135 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `state`
   --> relayer/src/connection.rs:133:17
    |
133 |                 state: State,
    |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `e`
   --> relayer/src/connection.rs:154:14
    |
154 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
   --> relayer/src/connection.rs:152:17
    |
152 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
   --> relayer/src/connection.rs:162:14
    |
162 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
   --> relayer/src/connection.rs:160:15
    |
160 |             { chain_id: ChainId }
    |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
   --> relayer/src/connection.rs:188:14
    |
188 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `connection_id`
   --> relayer/src/connection.rs:187:15
    |
187 |             { connection_id: ConnectionId }
    |               ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_id`

warning: unused variable: `e`
  --> relayer/src/error.rs:56:14
   |
56 |             |e| { format!("RPC error to endpoint {}", e.url) },
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `url`
  --> relayer/src/error.rs:54:15
   |
54 |             { url: tendermint_rpc::Url }
   |               ^^^ help: if this is intentional, prefix it with an underscore: `_url`

warning: unused variable: `e`
  --> relayer/src/error.rs:60:14
   |
60 |             |e| { format!("ABCI query returns error: {:?}", e.query) },
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `query`
  --> relayer/src/error.rs:59:15
   |
59 |             { query: AbciQuery }
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_query`

warning: unused variable: `e`
  --> relayer/src/error.rs:67:14
   |
67 |             |e| { format!("CheckTX Commit returns error: {0}. RawResult: {1:?}", e.detail, e.tx) },
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `detail`
  --> relayer/src/error.rs:64:17
   |
64 |                 detail: SdkError,
   |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_detail`

warning: unused variable: `tx`
  --> relayer/src/error.rs:65:17
   |
65 |                 tx: TxResult
   |                 ^^ help: if this is intentional, prefix it with an underscore: `_tx`

warning: unused variable: `e`
  --> relayer/src/error.rs:74:14
   |
74 |             |e| { format!("DeliverTx Commit returns error: {0}. RawResult: {1:?}", e.detail, e.tx) },
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `detail`
  --> relayer/src/error.rs:71:17
   |
71 |                 detail: SdkError,
   |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_detail`

warning: unused variable: `tx`
  --> relayer/src/error.rs:72:17
   |
72 |                 tx: TxResult
   |                 ^^ help: if this is intentional, prefix it with an underscore: `_tx`

warning: unused variable: `e`
  --> relayer/src/error.rs:78:14
   |
78 |             |e| { format!("Websocket error to endpoint {}", e.url) },
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `url`
  --> relayer/src/error.rs:77:15
   |
77 |             { url: tendermint_rpc::Url }
   |               ^^^ help: if this is intentional, prefix it with an underscore: `_url`

warning: unused variable: `e`
  --> relayer/src/error.rs:89:14
   |
89 |             |e| { format!("GRPC call return error status {0}", e.status) },
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `status`
  --> relayer/src/error.rs:88:15
   |
88 |             { status: GrpcStatus }
   |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_status`

warning: unused variable: `e`
  --> relayer/src/error.rs:97:14
   |
97 |             |e| { format!("missing parameter in GRPC response: {}", e.param) },
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `param`
  --> relayer/src/error.rs:96:15
   |
96 |             { param: String }
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_param`

warning: unused variable: `e`
   --> relayer/src/error.rs:106:14
    |
106 |             |e| { format!("Light client error for RPC address {0}", e.address) },
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `address`
   --> relayer/src/error.rs:104:15
    |
104 |             { address: String }
    |               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_address`

warning: unused variable: `e`
   --> relayer/src/error.rs:111:14
    |
111 |             |e| { format!("Light client error for RPC address {0}", e.address) },
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `address`
   --> relayer/src/error.rs:109:15
    |
109 |             { address: String }
    |               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_address`

warning: unused variable: `e`
   --> relayer/src/error.rs:118:14
    |
118 |             |e| { format!("node at {} running chain {} not caught up", e.address, e.chain_id) },
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `address`
   --> relayer/src/error.rs:115:17
    |
115 |                 address: String,
    |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_address`

warning: unused variable: `chain_id`
   --> relayer/src/error.rs:116:17
    |
116 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
   --> relayer/src/error.rs:156:14
    |
156 |             |e| { format!("Failed to create client {0}", e.client_id) },
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
   --> relayer/src/error.rs:155:15
    |
155 |             { client_id: String }
    |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `e`
   --> relayer/src/error.rs:160:14
    |
160 |             |e| { format!("unexpected client state type {0}", e.client_state_type) },
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_state_type`
   --> relayer/src/error.rs:159:15
    |
159 |             { client_state_type: String }
    |               ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_state_type`

warning: unused variable: `e`
   --> relayer/src/error.rs:164:14
    |
164 |             |e| { format!("Connection not found: {0}", e.connection_id) },
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `connection_id`
   --> relayer/src/error.rs:163:15
    |
163 |             { connection_id: ConnectionId }
    |               ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_id`

warning: unused variable: `e`
   --> relayer/src/error.rs:171:14
    |
171 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `connection_id`
   --> relayer/src/error.rs:170:15
    |
170 |             { connection_id: ConnectionId, reason: String }
    |               ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_id`

warning: unused variable: `reason`
   --> relayer/src/error.rs:170:44
    |
170 |             { connection_id: ConnectionId, reason: String }
    |                                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
   --> relayer/src/error.rs:178:14
    |
178 |             |e| { format!("Failed to build conn open init: {0}", e.reason) },
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `reason`
   --> relayer/src/error.rs:177:15
    |
177 |             { reason: String }
    |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
   --> relayer/src/error.rs:182:14
    |
182 |             |e| { format!("Failed to build conn open try: {0}", e.reason) },
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `reason`
   --> relayer/src/error.rs:181:15
    |
181 |             { reason: String }
    |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
   --> relayer/src/error.rs:186:14
    |
186 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
   --> relayer/src/error.rs:185:15
    |
185 |             { channel_id: ChannelId, reason: String }
    |               ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `reason`
   --> relayer/src/error.rs:185:38
    |
185 |             { channel_id: ChannelId, reason: String }
    |                                      ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
   --> relayer/src/error.rs:193:14
    |
193 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
   --> relayer/src/error.rs:192:15
    |
192 |             { channel_id: ChannelId, reason: String }
    |               ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `reason`
   --> relayer/src/error.rs:192:38
    |
192 |             { channel_id: ChannelId, reason: String }
    |                                      ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
   --> relayer/src/error.rs:204:14
    |
204 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
   --> relayer/src/error.rs:203:15
    |
203 |             { channel_id: ChannelId, reason: String }
    |               ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `reason`
   --> relayer/src/error.rs:203:38
    |
203 |             { channel_id: ChannelId, reason: String }
    |                                      ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
   --> relayer/src/error.rs:211:14
    |
211 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
   --> relayer/src/error.rs:210:15
    |
210 |             { channel_id: ChannelId, reason: String }
    |               ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `reason`
   --> relayer/src/error.rs:210:38
    |
210 |             { channel_id: ChannelId, reason: String }
    |                                      ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
   --> relayer/src/error.rs:218:14
    |
218 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
   --> relayer/src/error.rs:217:15
    |
217 |             { channel_id: ChannelId, reason: String }
    |               ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `reason`
   --> relayer/src/error.rs:217:38
    |
217 |             { channel_id: ChannelId, reason: String }
    |                                      ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
   --> relayer/src/error.rs:225:14
    |
225 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
   --> relayer/src/error.rs:224:15
    |
224 |             { channel_id: ChannelId, reason: String }
    |               ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `reason`
   --> relayer/src/error.rs:224:38
    |
224 |             { channel_id: ChannelId, reason: String }
    |                                      ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
   --> relayer/src/error.rs:232:14
    |
232 |             |e| { format!("Message transaction failure: {0}", e.reason) },
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `reason`
   --> relayer/src/error.rs:231:15
    |
231 |             { reason: String }
    |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
   --> relayer/src/error.rs:236:14
    |
236 |             |e| { format!("Query error occurred (failed to query for {0})", e.query) },
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `query`
   --> relayer/src/error.rs:235:15
    |
235 |             { query: String }
    |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_query`

warning: unused variable: `e`
   --> relayer/src/error.rs:265:14
    |
265 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `uri`
   --> relayer/src/error.rs:263:15
    |
263 |             { uri: String }
    |               ^^^ help: if this is intentional, prefix it with an underscore: `_uri`

warning: unused variable: `e`
   --> relayer/src/error.rs:271:14
    |
271 |             |e| { format!("invalid chain identifier format: {0}", e.chain_id) },
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
   --> relayer/src/error.rs:270:15
    |
270 |             { chain_id: String }
    |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
   --> relayer/src/error.rs:291:14
    |
291 |             |e| { format!("error raised while submitting the misbehaviour evidence: {0}", e.reason) },
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `reason`
   --> relayer/src/error.rs:290:15
    |
290 |             { reason: String }
    |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
   --> relayer/src/error.rs:296:14
    |
296 |             |e| { format!("invalid key address: {0}", e.address) },
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `address`
   --> relayer/src/error.rs:294:15
    |
294 |             { address: String }
    |               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_address`

warning: unused variable: `e`
   --> relayer/src/error.rs:307:14
    |
307 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `expected`
   --> relayer/src/error.rs:304:17
    |
304 |                 expected: ClientType,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_expected`

warning: unused variable: `got`
   --> relayer/src/error.rs:305:17
    |
305 |                 got: ClientType,
    |                 ^^^ help: if this is intentional, prefix it with an underscore: `_got`

warning: unused variable: `e`
   --> relayer/src/error.rs:315:14
    |
315 |             |e| { format!("Error decoding protocol buffer for {}", e.payload_type) },
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `payload_type`
   --> relayer/src/error.rs:313:15
    |
313 |             { payload_type: String }
    |               ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_payload_type`

warning: unused variable: `e`
   --> relayer/src/error.rs:327:14
    |
327 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
   --> relayer/src/error.rs:323:17
    |
323 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `estimated_gas`
   --> relayer/src/error.rs:324:17
    |
324 |                 estimated_gas: u64,
    |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_estimated_gas`

warning: unused variable: `max_gas`
   --> relayer/src/error.rs:325:17
    |
325 |                 max_gas: u64,
    |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_max_gas`

warning: unused variable: `e`
   --> relayer/src/error.rs:339:14
    |
339 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
   --> relayer/src/error.rs:334:17
    |
334 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `address`
   --> relayer/src/error.rs:335:17
    |
335 |                 address: String,
    |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_address`

warning: unused variable: `endpoint`
   --> relayer/src/error.rs:336:17
    |
336 |                 endpoint: String,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_endpoint`

warning: unused variable: `e`
   --> relayer/src/error.rs:351:14
    |
351 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
   --> relayer/src/error.rs:346:17
    |
346 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `address`
   --> relayer/src/error.rs:347:17
    |
347 |                 address: String,
    |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_address`

warning: unused variable: `endpoint`
   --> relayer/src/error.rs:348:17
    |
348 |                 endpoint: String,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_endpoint`

warning: unused variable: `e`
   --> relayer/src/error.rs:363:14
    |
363 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
   --> relayer/src/error.rs:358:17
    |
358 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `address`
   --> relayer/src/error.rs:359:17
    |
359 |                 address: String,
    |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_address`

warning: unused variable: `endpoint`
   --> relayer/src/error.rs:360:17
    |
360 |                 endpoint: String,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_endpoint`

warning: unused variable: `status`
   --> relayer/src/error.rs:361:17
    |
361 |                 status: tonic::Status
    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_status`

warning: unused variable: `e`
   --> relayer/src/error.rs:374:14
    |
374 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
   --> relayer/src/error.rs:370:17
    |
370 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `address`
   --> relayer/src/error.rs:371:17
    |
371 |                 address: String,
    |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_address`

warning: unused variable: `endpoint`
   --> relayer/src/error.rs:372:17
    |
372 |                 endpoint: String,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_endpoint`

warning: unused variable: `e`
   --> relayer/src/error.rs:386:14
    |
386 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
   --> relayer/src/error.rs:381:17
    |
381 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `address`
   --> relayer/src/error.rs:382:17
    |
382 |                 address: String,
    |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_address`

warning: unused variable: `endpoint`
   --> relayer/src/error.rs:383:17
    |
383 |                 endpoint: String,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_endpoint`

warning: unused variable: `e`
   --> relayer/src/error.rs:397:14
    |
397 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
   --> relayer/src/error.rs:393:17
    |
393 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `configured_bound`
   --> relayer/src/error.rs:394:17
    |
394 |                 configured_bound: usize,
    |                 ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_configured_bound`

warning: unused variable: `genesis_bound`
   --> relayer/src/error.rs:395:17
    |
395 |                 genesis_bound: u64,
    |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_genesis_bound`

warning: unused variable: `e`
   --> relayer/src/error.rs:408:14
    |
408 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
   --> relayer/src/error.rs:404:17
    |
404 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `address`
   --> relayer/src/error.rs:405:17
    |
405 |                 address: String,
    |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_address`

warning: unused variable: `cause`
   --> relayer/src/error.rs:406:17
    |
406 |                 cause: String
    |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_cause`

warning: unused variable: `e`
  --> relayer/src/event/monitor.rs:82:14
   |
82 |             |e| { format!("failed to extract IBC events: {0}", e.reason) },
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `reason`
  --> relayer/src/event/monitor.rs:81:15
   |
81 |             { reason: String }
   |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `chain_id`
   --> relayer/src/event/monitor.rs:169:9
    |
169 |         chain_id: ChainId,
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `node_addr`
   --> relayer/src/event/monitor.rs:170:9
    |
170 |         node_addr: tendermint_rpc::Url,
    |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_node_addr`

warning: unused variable: `rt`
   --> relayer/src/event/monitor.rs:171:9
    |
171 |         rt: Arc<TokioRuntime>,
    |         ^^ help: if this is intentional, prefix it with an underscore: `_rt`

warning: unused variable: `e`
  --> relayer/src/foreign_client.rs:47:14
   |
47 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
  --> relayer/src/foreign_client.rs:43:17
   |
43 |                 chain_id: ChainId,
   |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `description`
  --> relayer/src/foreign_client.rs:44:17
   |
44 |                 description: String
   |                 ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_description`

warning: unused variable: `e`
  --> relayer/src/foreign_client.rs:62:14
   |
62 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
  --> relayer/src/foreign_client.rs:58:17
   |
58 |                 chain_id: ChainId,
   |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `description`
  --> relayer/src/foreign_client.rs:59:17
   |
59 |                 description: String
   |                 ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_description`

warning: unused variable: `e`
  --> relayer/src/foreign_client.rs:72:14
   |
72 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
  --> relayer/src/foreign_client.rs:68:17
   |
68 |                 client_id: ClientId,
   |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `chain_id`
  --> relayer/src/foreign_client.rs:69:17
   |
69 |                 chain_id: ChainId,
   |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `height`
  --> relayer/src/foreign_client.rs:70:17
   |
70 |                 height: Height,
   |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_height`

warning: unused variable: `e`
  --> relayer/src/foreign_client.rs:82:14
   |
82 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
  --> relayer/src/foreign_client.rs:79:17
   |
79 |                 chain_id: ChainId,
   |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `target_height`
  --> relayer/src/foreign_client.rs:80:17
   |
80 |                 target_height: Height,
   |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_target_height`

warning: unused variable: `e`
  --> relayer/src/foreign_client.rs:92:14
   |
92 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
  --> relayer/src/foreign_client.rs:89:17
   |
89 |                 chain_id: ChainId,
   |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `target_height`
  --> relayer/src/foreign_client.rs:90:17
   |
90 |                 target_height: Height,
   |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_target_height`

warning: unused variable: `e`
   --> relayer/src/foreign_client.rs:103:14
    |
103 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
  --> relayer/src/foreign_client.rs:99:17
   |
99 |                 client_id: ClientId,
   |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `reason`
   --> relayer/src/foreign_client.rs:100:17
    |
100 |                 reason: String
    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
   --> relayer/src/foreign_client.rs:114:14
    |
114 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
   --> relayer/src/foreign_client.rs:110:17
    |
110 |                 client_id: ClientId,
    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `chain_id`
   --> relayer/src/foreign_client.rs:111:17
    |
111 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
   --> relayer/src/foreign_client.rs:126:14
    |
126 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
   --> relayer/src/foreign_client.rs:121:17
    |
121 |                 client_id: ClientId,
    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `chain_id`
   --> relayer/src/foreign_client.rs:122:17
    |
122 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `description`
   --> relayer/src/foreign_client.rs:123:17
    |
123 |                 description: String,
    |                 ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_description`

warning: unused variable: `e`
   --> relayer/src/foreign_client.rs:138:14
    |
138 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
   --> relayer/src/foreign_client.rs:133:17
    |
133 |                 client_id: ClientId,
    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `chain_id`
   --> relayer/src/foreign_client.rs:134:17
    |
134 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `consensus_height`
   --> relayer/src/foreign_client.rs:135:17
    |
135 |                 consensus_height: Height
    |                 ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_consensus_height`

warning: unused variable: `e`
   --> relayer/src/foreign_client.rs:149:14
    |
149 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
   --> relayer/src/foreign_client.rs:145:17
    |
145 |                 client_id: ClientId,
    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `chain_id`
   --> relayer/src/foreign_client.rs:146:17
    |
146 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `event`
   --> relayer/src/foreign_client.rs:147:17
    |
147 |                 event: String,
    |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `e`
   --> relayer/src/foreign_client.rs:160:14
    |
160 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
   --> relayer/src/foreign_client.rs:156:17
    |
156 |                 client_id: ClientId,
    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `expected_chain_id`
   --> relayer/src/foreign_client.rs:157:17
    |
157 |                 expected_chain_id: ChainId,
    |                 ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_expected_chain_id`

warning: unused variable: `actual_chain_id`
   --> relayer/src/foreign_client.rs:158:17
    |
158 |                 actual_chain_id: ChainId,
    |                 ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_actual_chain_id`

warning: unused variable: `e`
   --> relayer/src/foreign_client.rs:170:14
    |
170 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
   --> relayer/src/foreign_client.rs:167:17
    |
167 |                 client_id: ClientId,
    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `chain_id`
   --> relayer/src/foreign_client.rs:168:17
    |
168 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
   --> relayer/src/foreign_client.rs:180:14
    |
180 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `description`
   --> relayer/src/foreign_client.rs:177:17
    |
177 |                 description: String,
    |                 ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_description`

warning: unused variable: `e`
   --> relayer/src/foreign_client.rs:186:14
    |
186 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `reason`
   --> relayer/src/foreign_client.rs:185:15
    |
185 |             { reason: String }
    |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
   --> relayer/src/foreign_client.rs:194:14
    |
194 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
   --> relayer/src/foreign_client.rs:192:17
    |
192 |                 chain_id: ChainId
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
   --> relayer/src/foreign_client.rs:200:14
    |
200 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `event`
   --> relayer/src/foreign_client.rs:199:15
    |
199 |             { event: IbcEvent }
    |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `e`
   --> relayer/src/foreign_client.rs:210:14
    |
210 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
   --> relayer/src/foreign_client.rs:207:17
    |
207 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `event`
   --> relayer/src/foreign_client.rs:208:17
    |
208 |                 event: IbcEvent
    |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `e`
  --> relayer/src/keyring/errors.rs:28:14
   |
28 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `key_type`
  --> relayer/src/keyring/errors.rs:27:15
   |
27 |             { key_type: String }
   |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_key_type`

warning: unused variable: `e`
  --> relayer/src/keyring/errors.rs:38:14
   |
38 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `key`
  --> relayer/src/keyring/errors.rs:35:17
   |
35 |                 key: String,
   |                 ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `keyfile`
  --> relayer/src/keyring/errors.rs:52:16
   |
52 |              { keyfile: Vec<u8>, mnemonic: Vec<u8> }
   |                ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_keyfile`

warning: unused variable: `mnemonic`
  --> relayer/src/keyring/errors.rs:52:34
   |
52 |              { keyfile: Vec<u8>, mnemonic: Vec<u8> }
   |                                  ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_mnemonic`

warning: unused variable: `e`
  --> relayer/src/keyring/errors.rs:58:14
   |
58 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `file_path`
  --> relayer/src/keyring/errors.rs:56:15
   |
56 |             { file_path: String }
   |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_file_path`

warning: unused variable: `e`
  --> relayer/src/keyring/errors.rs:70:14
   |
70 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `file_path`
  --> relayer/src/keyring/errors.rs:68:15
   |
68 |             { file_path: String }
   |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_file_path`

warning: unused variable: `e`
  --> relayer/src/keyring/errors.rs:81:14
   |
81 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `file_path`
  --> relayer/src/keyring/errors.rs:77:17
   |
77 |                 file_path: String,
   |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_file_path`

warning: unused variable: `description`
  --> relayer/src/keyring/errors.rs:78:17
   |
78 |                 description: String,
   |                 ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_description`

warning: unused variable: `e`
  --> relayer/src/keyring/errors.rs:88:14
   |
88 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `file_path`
  --> relayer/src/keyring/errors.rs:87:15
   |
87 |             { file_path: String }
   |               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_file_path`

warning: unused variable: `e`
   --> relayer/src/keyring/errors.rs:103:14
    |
103 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `path`
   --> relayer/src/keyring/errors.rs:101:17
    |
101 |                 path: String,
    |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_path`

warning: unused variable: `e`
  --> relayer/src/link/error.rs:28:14
   |
28 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
  --> relayer/src/link/error.rs:26:15
   |
26 |             { chain_id: ChainId }
   |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/link/error.rs:35:14
   |
35 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
  --> relayer/src/link/error.rs:33:15
   |
33 |             { chain_id: ChainId }
   |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/link/error.rs:49:14
   |
49 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
  --> relayer/src/link/error.rs:45:17
   |
45 |                 channel_id: ChannelId,
   |                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `chain_id`
  --> relayer/src/link/error.rs:46:17
   |
46 |                 chain_id: ChainId,
   |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/link/error.rs:71:14
   |
71 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `event`
  --> relayer/src/link/error.rs:70:15
   |
70 |             { event: IbcEvent }
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `e`
  --> relayer/src/link/error.rs:77:14
   |
77 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
  --> relayer/src/link/error.rs:76:15
   |
76 |             { chain_id: ChainId }
   |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/link/error.rs:84:14
   |
84 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
  --> relayer/src/link/error.rs:82:15
   |
82 |             { chain_id: ChainId }
   |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/link/error.rs:91:14
   |
91 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `height`
  --> relayer/src/link/error.rs:89:15
   |
89 |             { height: Height }
   |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_height`

warning: unused variable: `e`
  --> relayer/src/link/error.rs:97:14
   |
97 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `event`
  --> relayer/src/link/error.rs:96:15
   |
96 |             { event: IbcEvent }
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `e`
   --> relayer/src/link/error.rs:106:14
    |
106 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
   --> relayer/src/link/error.rs:103:17
    |
103 |                 channel_id: ChannelId,
    |                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `chain_id`
   --> relayer/src/link/error.rs:104:17
    |
104 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
   --> relayer/src/link/error.rs:116:14
    |
116 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
   --> relayer/src/link/error.rs:113:17
    |
113 |                 channel_id: ChannelId,
    |                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `chain_id`
   --> relayer/src/link/error.rs:114:17
    |
114 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
   --> relayer/src/link/error.rs:125:14
    |
125 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
   --> relayer/src/link/error.rs:123:17
    |
123 |                 channel_id: ChannelId,
    |                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `e`
   --> relayer/src/link/error.rs:135:14
    |
135 |             |e| {
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
   --> relayer/src/link/error.rs:132:17
    |
132 |                 channel_id: ChannelId,
    |                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `chain_id`
   --> relayer/src/link/error.rs:133:17
    |
133 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
   --> relayer/src/object.rs:168:15
    |
168 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `client_id`
   --> relayer/src/object.rs:165:17
    |
165 |                 client_id: ClientId,
    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_client_id`

warning: unused variable: `chain_id`
   --> relayer/src/object.rs:166:17
    |
166 |                 chain_id: ChainId,
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
   --> relayer/src/object.rs:175:15
    |
175 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `event`
   --> relayer/src/object.rs:174:15
    |
174 |             { event: Attributes }
    |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `e`
   --> relayer/src/object.rs:182:15
    |
182 |             | e | {
    |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `event`
   --> relayer/src/object.rs:181:15
    |
181 |             { event: ConnectionAttributes }
    |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `e`
  --> relayer/src/registry.rs:40:15
   |
40 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
  --> relayer/src/registry.rs:39:15
   |
39 |             { chain_id: ChainId }
   |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/sdk_error.rs:19:14
   |
19 |             |e| { format!("unknown SDK error: {}", e.code) },
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `code`
  --> relayer/src/sdk_error.rs:18:15
   |
18 |             { code: u32 }
   |               ^^^^ help: if this is intentional, prefix it with an underscore: `_code`

warning: unused variable: `e`
   --> relayer/src/sdk_error.rs:111:14
    |
111 |             |e| { format!("unknown client error: {}", e.code) },
    |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `code`
   --> relayer/src/sdk_error.rs:110:15
    |
110 |             { code: u32 }
    |               ^^^^ help: if this is intentional, prefix it with an underscore: `_code`

warning: unused variable: `reply_to`
   --> relayer/src/supervisor.rs:440:26
    |
440 |     fn dump_state(&self, reply_to: Sender<SupervisorState>) -> CmdEffect {
    |                          ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_reply_to`

warning: unused variable: `e`
  --> relayer/src/supervisor/error.rs:20:14
   |
20 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `port_id`
  --> relayer/src/supervisor/error.rs:16:17
   |
16 |                 port_id: PortId,
   |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_port_id`

warning: unused variable: `channel_id`
  --> relayer/src/supervisor/error.rs:17:17
   |
17 |                 channel_id: ChannelId,
   |                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `chain_id`
  --> relayer/src/supervisor/error.rs:18:17
   |
18 |                 chain_id: ChainId,
   |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/supervisor/error.rs:31:14
   |
31 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
  --> relayer/src/supervisor/error.rs:27:17
   |
27 |                 channel_id: ChannelId,
   |                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `chain_id`
  --> relayer/src/supervisor/error.rs:28:17
   |
28 |                 chain_id: ChainId,
   |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `counterparty`
  --> relayer/src/supervisor/error.rs:29:17
   |
29 |                 counterparty: Counterparty
   |                 ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_counterparty`

warning: unused variable: `e`
  --> relayer/src/supervisor/error.rs:42:14
   |
42 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `connection_id`
  --> relayer/src/supervisor/error.rs:38:17
   |
38 |                 connection_id: ConnectionId,
   |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_connection_id`

warning: unused variable: `channel_id`
  --> relayer/src/supervisor/error.rs:39:17
   |
39 |                 channel_id: ChannelId,
   |                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `chain_id`
  --> relayer/src/supervisor/error.rs:40:17
   |
40 |                 chain_id: ChainId,
   |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/supervisor/error.rs:52:14
   |
52 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `channel_id`
  --> relayer/src/supervisor/error.rs:49:17
   |
49 |                 channel_id: ChannelId,
   |                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel_id`

warning: unused variable: `chain_id`
  --> relayer/src/supervisor/error.rs:50:17
   |
50 |                 chain_id: ChainId,
   |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/transfer.rs:30:14
   |
30 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
  --> relayer/src/transfer.rs:28:15
   |
28 |             { chain_id: ChainId }
   |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/transfer.rs:41:14
   |
41 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `event`
  --> relayer/src/transfer.rs:40:15
   |
40 |             { event: String }
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `e`
  --> relayer/src/transfer.rs:48:14
   |
48 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `event`
  --> relayer/src/transfer.rs:47:15
   |
47 |             { event: IbcEvent }
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `e`
  --> relayer/src/upgrade_chain.rs:27:14
   |
27 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chain_id`
  --> relayer/src/upgrade_chain.rs:25:15
   |
25 |             { chain_id: ChainId }
   |               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chain_id`

warning: unused variable: `e`
  --> relayer/src/upgrade_chain.rs:34:14
   |
34 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `event`
  --> relayer/src/upgrade_chain.rs:33:15
   |
33 |             { event: String }
   |               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`

warning: unused variable: `e`
  --> relayer/src/worker/error.rs:30:15
   |
30 |             | e | {
   |               ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `retries`
  --> relayer/src/worker/error.rs:29:15
   |
29 |             { retries: retry::Error<u64> }
   |               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_retries`

warning: unused variable: `e`
  --> relayer/src/worker/error.rs:41:14
   |
41 |             |e| {
   |              ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `reason`
  --> relayer/src/worker/error.rs:40:15
   |
40 |             { reason: String }
   |               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reason`

warning: unused variable: `e`
  --> relayer/src/worker/client.rs:73:21
   |
73 |                 Err(e) => {
   |                     ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: variable does not need to be mutable
   --> relayer/src/chain/cosmos.rs:667:9
    |
667 |         mut tx_sync_results: Vec<TxSyncResult>,
    |         ----^^^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> relayer/src/chain/cosmos.rs:667:9
    |
667 |         mut tx_sync_results: Vec<TxSyncResult>,
    |         ----^^^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: constant is never used: `SDK_MODULE_NAME`
  --> relayer/src/chain/cosmos/compatibility.rs:19:1
   |
19 | const SDK_MODULE_NAME: &str = "cosmos/cosmos-sdk";
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant is never used: `SDK_MODULE_VERSION_REQ`
  --> relayer/src/chain/cosmos/compatibility.rs:26:1
   |
26 | const SDK_MODULE_VERSION_REQ: &str = ">=0.41.3, <=0.42.6";
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variant is never constructed: `SdkModuleNotFound`
  --> relayer/src/chain/cosmos/compatibility.rs:46:5
   |
46 |     SdkModuleNotFound { pattern: String, app: AppInfo },
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variant is never constructed: `VersionParsingFailed`
  --> relayer/src/chain/cosmos/compatibility.rs:49:5
   |
49 | /     VersionParsingFailed {
50 | |         module_path: String,
51 | |         raw_version: String,
52 | |         cause: String,
53 | |         app: AppInfo,
54 | |     },
   | |_____^

warning: variant is never constructed: `MismatchingSdkModuleVersion`
  --> relayer/src/chain/cosmos/compatibility.rs:57:5
   |
57 | /     MismatchingSdkModuleVersion {
58 | |         requirements: String,
59 | |         found: String,
60 | |         app: AppInfo,
61 | |     },
   | |_____^

warning: function is never used: `run_diagnostic`
  --> relayer/src/chain/cosmos/compatibility.rs:75:15
   |
75 | pub(crate) fn run_diagnostic(v: VersionInfo) -> Option<Diagnostic> {
   |               ^^^^^^^^^^^^^^

warning: constant is never used: `DEFAULT_MAX_GAS`
  --> relayer/src/chain/cosmos.rs:93:1
   |
93 | const DEFAULT_MAX_GAS: u64 = 300_000;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `DEFAULT_GAS_PRICE_ADJUSTMENT`
  --> relayer/src/chain/cosmos.rs:96:1
   |
96 | const DEFAULT_GAS_PRICE_ADJUSTMENT: f64 = 0.1;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `account`
   --> relayer/src/chain/cosmos.rs:124:5
    |
124 |     account: Option<BaseAccount>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `max_gas`
   --> relayer/src/chain/cosmos.rs:410:8
    |
410 |     fn max_gas(&self) -> u64 {
    |        ^^^^^^^

warning: associated function is never used: `gas_price`
   --> relayer/src/chain/cosmos.rs:415:8
    |
415 |     fn gas_price(&self) -> &GasPrice {
    |        ^^^^^^^^^

warning: associated function is never used: `gas_adjustment`
   --> relayer/src/chain/cosmos.rs:420:8
    |
420 |     fn gas_adjustment(&self) -> f64 {
    |        ^^^^^^^^^^^^^^

warning: associated function is never used: `apply_adjustment_to_gas`
   --> relayer/src/chain/cosmos.rs:429:8
    |
429 |     fn apply_adjustment_to_gas(&self, gas_amount: u64) -> u64 {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `max_fee_in_coins`
   --> relayer/src/chain/cosmos.rs:437:8
    |
437 |     fn max_fee_in_coins(&self) -> Coin {
    |        ^^^^^^^^^^^^^^^^

warning: associated function is never used: `fee_from_gas_in_coins`
   --> relayer/src/chain/cosmos.rs:442:8
    |
442 |     fn fee_from_gas_in_coins(&self, gas: u64) -> Coin {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `send_tx_simulate`
   --> relayer/src/chain/cosmos.rs:519:8
    |
519 |     fn send_tx_simulate(&self, request: SimulateRequest) -> Result<SimulateResponse, Error> {
    |        ^^^^^^^^^^^^^^^^

warning: associated function is never used: `key`
   --> relayer/src/chain/cosmos.rs:539:8
    |
539 |     fn key(&self) -> Result<KeyEntry, Error> {
    |        ^^^

warning: associated function is never used: `key_bytes`
   --> relayer/src/chain/cosmos.rs:545:8
    |
545 |     fn key_bytes(&self, key: &KeyEntry) -> Result<Vec<u8>, Error> {
    |        ^^^^^^^^^

warning: associated function is never used: `key_and_bytes`
   --> relayer/src/chain/cosmos.rs:551:8
    |
551 |     fn key_and_bytes(&self) -> Result<(KeyEntry, Vec<u8>), Error> {
    |        ^^^^^^^^^^^^^

warning: associated function is never used: `account`
   --> relayer/src/chain/cosmos.rs:559:8
    |
559 |     fn account(&mut self) -> Result<&mut BaseAccount, Error> {
    |        ^^^^^^^

warning: associated function is never used: `account_number`
   --> relayer/src/chain/cosmos.rs:584:8
    |
584 |     fn account_number(&mut self) -> Result<u64, Error> {
    |        ^^^^^^^^^^^^^^

warning: associated function is never used: `account_sequence`
   --> relayer/src/chain/cosmos.rs:588:8
    |
588 |     fn account_sequence(&mut self) -> Result<u64, Error> {
    |        ^^^^^^^^^^^^^^^^

warning: associated function is never used: `incr_account_sequence`
   --> relayer/src/chain/cosmos.rs:592:8
    |
592 |     fn incr_account_sequence(&mut self) -> Result<(), Error> {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `signer`
   --> relayer/src/chain/cosmos.rs:597:8
    |
597 |     fn signer(&self, sequence: u64) -> Result<SignerInfo, Error> {
    |        ^^^^^^

warning: associated function is never used: `default_fee`
   --> relayer/src/chain/cosmos.rs:616:8
    |
616 |     fn default_fee(&self) -> Fee {
    |        ^^^^^^^^^^^

warning: associated function is never used: `fee_with_gas`
   --> relayer/src/chain/cosmos.rs:625:8
    |
625 |     fn fee_with_gas(&self, gas_limit: u64) -> Fee {
    |        ^^^^^^^^^^^^

warning: associated function is never used: `signed_doc`
   --> relayer/src/chain/cosmos.rs:634:8
    |
634 |     fn signed_doc(
    |        ^^^^^^^^^^

warning: function is never used: `empty_event_present`
   --> relayer/src/chain/cosmos.rs:744:4
    |
744 | fn empty_event_present(events: &[IbcEvent]) -> bool {
    |    ^^^^^^^^^^^^^^^^^^^

warning: function is never used: `all_tx_results_found`
   --> relayer/src/chain/cosmos.rs:748:4
    |
748 | fn all_tx_results_found(tx_sync_results: &[TxSyncResult]) -> bool {
    |    ^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `response`
    --> relayer/src/chain/cosmos.rs:2042:5
     |
2042 |     response: Response,
     |     ^^^^^^^^^^^^^^^^^^

warning: function is never used: `auth_info_and_bytes`
    --> relayer/src/chain/cosmos.rs:2047:4
     |
2047 | fn auth_info_and_bytes(signer_info: SignerInfo, fee: Fee) -> Result<(AuthInfo, Vec<u8>), Error> {
     |    ^^^^^^^^^^^^^^^^^^^

warning: function is never used: `tx_body_and_bytes`
    --> relayer/src/chain/cosmos.rs:2059:4
     |
2059 | fn tx_body_and_bytes(proto_msgs: Vec<Any>) -> Result<(TxBody, Vec<u8>), Error> {
     |    ^^^^^^^^^^^^^^^^^

warning: function is never used: `calculate_fee`
    --> relayer/src/chain/cosmos.rs:2074:4
     |
2074 | fn calculate_fee(adjusted_gas_amount: u64, gas_price: &GasPrice) -> Coin {
     |    ^^^^^^^^^^^^^

warning: constant is never used: `MAX_DELAY`
  --> relayer/src/channel.rs:46:5
   |
46 |     const MAX_DELAY: Duration = Duration::from_secs(60); // 1 minute
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `MAX_TOTAL_DELAY`
  --> relayer/src/channel.rs:47:5
   |
47 |     const MAX_TOTAL_DELAY: Duration = Duration::from_secs(10 * 60); // 10 minutes
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `INITIAL_DELAY`
  --> relayer/src/channel.rs:48:5
   |
48 |     const INITIAL_DELAY: Duration = Duration::from_secs(1); // 1 second
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `do_chan_open_init_and_send`
   --> relayer/src/channel.rs:361:8
    |
361 |     fn do_chan_open_init_and_send(&mut self) -> Result<(), ChannelError> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `do_chan_open_try_and_send`
   --> relayer/src/channel.rs:396:8
    |
396 |     fn do_chan_open_try_and_send(&mut self) -> Result<(), ChannelError> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `do_chan_open_finalize`
   --> relayer/src/channel.rs:445:8
    |
445 |     fn do_chan_open_finalize(&self) -> Result<(), ChannelError> {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `query_channel_states`
   --> relayer/src/channel.rs:446:12
    |
446 |         fn query_channel_states(channel: &Channel) -> Result<(State, State), ChannelError> {
    |            ^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `expect_channel_states`
   --> relayer/src/channel.rs:488:12
    |
488 |         fn expect_channel_states(ctx: &Channel, a1: State, b1: State) -> Result<(), ChannelError> {
    |            ^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `MAX_DELAY`
  --> relayer/src/event/monitor.rs:43:5
   |
43 |     const MAX_DELAY: Duration = Duration::from_secs(60); // 1 minute
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `MAX_TOTAL_DELAY`
  --> relayer/src/event/monitor.rs:44:5
   |
44 |     const MAX_TOTAL_DELAY: Duration = Duration::from_secs(10 * 60); // 10 minutes
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `INITIAL_DELAY`
  --> relayer/src/event/monitor.rs:45:5
   |
45 |     const INITIAL_DELAY: Duration = Duration::from_secs(1); // 1 second
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `canceled_or_generic`
  --> relayer/src/event/monitor.rs:98:8
   |
98 |     fn canceled_or_generic(e: RpcError) -> Self {
   |        ^^^^^^^^^^^^^^^^^^^

warning: field is never read: `tx_batch`
   --> relayer/src/event/monitor.rs:147:5
    |
147 |     tx_batch: channel::Sender<Result<EventBatch>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `rx_err`
   --> relayer/src/event/monitor.rs:149:5
    |
149 |     rx_err: mpsc::UnboundedReceiver<tendermint_rpc::Error>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `tx_err`
   --> relayer/src/event/monitor.rs:151:5
    |
151 |     tx_err: mpsc::UnboundedSender<tendermint_rpc::Error>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `rx_cmd`
   --> relayer/src/event/monitor.rs:153:5
    |
153 |     rx_cmd: channel::Receiver<MonitorCmd>,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `node_addr`
   --> relayer/src/event/monitor.rs:155:5
    |
155 |     node_addr: tendermint_rpc::Url,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `try_reconnect`
   --> relayer/src/event/monitor.rs:252:8
    |
252 |     fn try_reconnect(&mut self) -> Result<()> {
    |        ^^^^^^^^^^^^^

warning: associated function is never used: `try_resubscribe`
   --> relayer/src/event/monitor.rs:301:8
    |
301 |     fn try_resubscribe(&mut self) -> Result<()> {
    |        ^^^^^^^^^^^^^^^

warning: associated function is never used: `reconnect`
   --> relayer/src/event/monitor.rs:311:8
    |
311 |     fn reconnect(&mut self) {}
    |        ^^^^^^^^^

warning: associated function is never used: `propagate_error`
   --> relayer/src/event/monitor.rs:460:8
    |
460 |     fn propagate_error(&self, error: Error) -> Result<()> {
    |        ^^^^^^^^^^^^^^^

warning: associated function is never used: `process_batch`
   --> relayer/src/event/monitor.rs:469:8
    |
469 |     fn process_batch(&self, batch: EventBatch) -> Result<()> {
    |        ^^^^^^^^^^^^^

warning: function is never used: `sort_events`
   --> relayer/src/event/monitor.rs:526:4
    |
526 | fn sort_events(events: &mut Vec<IbcEvent>) {
    |    ^^^^^^^^^^^

warning: constant is never used: `MAX_DELAY`
 --> relayer/src/worker/retry_strategy.rs:8:1
  |
8 | const MAX_DELAY: Duration = Duration::from_millis(500);
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `DELAY_INCR`
 --> relayer/src/worker/retry_strategy.rs:9:1
  |
9 | const DELAY_INCR: Duration = Duration::from_millis(100);
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `INITIAL_DELAY`
  --> relayer/src/worker/retry_strategy.rs:10:1
   |
10 | const INITIAL_DELAY: Duration = Duration::from_millis(200);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant is never used: `MAX_RETRY_DURATION`
  --> relayer/src/worker/retry_strategy.rs:11:1
   |
11 | const MAX_RETRY_DURATION: Duration = Duration::from_secs(2);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `cmd_rx`
  --> relayer/src/worker/connection.rs:19:5
   |
19 |     cmd_rx: Receiver<WorkerCmd>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `cmd_rx`
  --> relayer/src/worker/channel.rs:19:5
   |
19 |     cmd_rx: Receiver<WorkerCmd>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: enum is never used: `Step`
  --> relayer/src/worker/packet.rs:19:6
   |
19 | enum Step {
   |      ^^^^

warning: associated function is never used: `step`
   --> relayer/src/worker/packet.rs:107:8
    |
107 |     fn step(&self, cmd: Option<WorkerCmd>, link: &mut Link, index: u64) -> RetryResult<Step, u64> {
    |        ^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#17r, [&str; 3], Not)
  --> relayer/src/chain/cosmos/compatibility.rs:39:19
   |
39 |         write!(f, "{}:{}-{}", self.app_name, self.version, self.git_commit)
   |                   ^^^^^^^^^^

warning: [Prusti: unsupported feature] higher-ranked lifetimes and types are not supported
  --> relayer/src/chain/cosmos/compatibility.rs:87:11
   |
87 |       match v
   |  ___________^
88 | |         .build_deps
89 | |         .iter()
90 | |         .find(|&m| m.path.contains(SDK_MODULE_NAME))
   | |____________________________________________________^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> relayer/src/chain/cosmos.rs:266:13
    |
266 |             warn!("Hermes might be misconfigured for chain '{}'", self.id());
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this warning originates in the macro `$crate::valueset` (in Nightly builds, run with -Z macro-backtrace for more info)

error: [Prusti internal error] reference has no fields
   --> relayer/src/chain/cosmos.rs:240:9
    |
240 | /         fn do_validate_params(chain: &CosmosSdkChain) -> Result<(), Error> {
241 | |             // Check on the configured max_tx_size against genesis block max_bytes parameter
242 | |             let genesis = chain.block_on(chain.rpc_client.genesis()).map_err(|e| {
243 | |                 Error::config_validation_json_rpc(
...   |
262 | |             Ok(())
263 | |         }
    | |_________^

warning: [Prusti: unsupported feature] unsupported type Opaque(DefId(105:324 ~ ibc_proto[fbd5]::cosmos::staking::v1beta1::query_client::{impl#0}::connect::{opaque#0}), [D])
   --> relayer/src/chain/cosmos.rs:278:17
    |
278 | /                 ibc_proto::cosmos::staking::v1beta1::query_client::QueryClient::connect(
279 | |                     self.grpc_addr.clone(),
280 | |                 ),
    | |_________________^

error: [Prusti internal error] reference has no fields
   --> relayer/src/chain/cosmos.rs:311:5
    |
311 | /     pub fn query_consensus_params(&self) -> Result<Params, Error> {
312 | |         crate::time!("query_consensus_params");
313 | |
314 | |         Ok(self
...   |
317 | |             .consensus_params)
318 | |     }
    | |_____^

error: [Prusti internal error] generating fold-unfold Viper statements failed (FailedToObtain(Pred(Local(_old$l2$0: Ref(m_Runtime$_beg_$_end_), Position { line: 0, column: 0, id: 0 }), read)))
   --> relayer/src/chain/cosmos.rs:321:5
    |
321 | /     fn block_on<F: Future>(&self, f: F) -> F::Output {
322 | |         crate::time!("block_on");
323 | |         self.rt.block_on(f)
324 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported type Float(F64)
   --> relayer/src/chain/cosmos.rs:420:5
    |
420 | /     fn gas_adjustment(&self) -> f64 {
421 | |         self.config
422 | |             .gas_adjustment
423 | |             .unwrap_or(DEFAULT_GAS_PRICE_ADJUSTMENT)
424 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported type Float(F64)
   --> relayer/src/chain/cosmos.rs:431:47
    |
431 |             gas_amount + mul_ceil(gas_amount, self.gas_adjustment()),
    |                                               ^^^^^^^^^^^^^^^^^^^^^

error: [Prusti internal error] generating fold-unfold Viper statements failed (FailedToObtain(Pred(Local(_old$l6$0: Ref(m_GasPrice$_beg_$_end_), Position { line: 0, column: 0, id: 0 }), read)))
   --> relayer/src/chain/cosmos.rs:437:5
    |
437 | /     fn max_fee_in_coins(&self) -> Coin {
438 | |         calculate_fee(self.max_gas(), self.gas_price())
439 | |     }
    | |_____^

error: [Prusti internal error] generating fold-unfold Viper statements failed (FailedToObtain(Pred(Local(_old$l3$0: Ref(m_GasPrice$_beg_$_end_), Position { line: 0, column: 0, id: 0 }), read)))
   --> relayer/src/chain/cosmos.rs:442:5
    |
442 | /     fn fee_from_gas_in_coins(&self, gas: u64) -> Coin {
443 | |         calculate_fee(gas, self.gas_price())
444 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported type Opaque(DefId(105:3647 ~ ibc_proto[fbd5]::cosmos::tx::v1beta1::service_client::{impl#0}::connect::{opaque#0}), [D])
   --> relayer/src/chain/cosmos.rs:524:17
    |
524 | /                 ibc_proto::cosmos::tx::v1beta1::service_client::ServiceClient::connect(
525 | |                     self.grpc_addr.clone(),
526 | |                 ),
    | |_________________^

error: [Prusti internal error] generating fold-unfold Viper statements failed (FailedToObtain(Pred(Local(_old$l7$0: Ref(str), Position { line: 0, column: 0, id: 0 }), read)))
   --> relayer/src/chain/cosmos.rs:539:5
    |
539 | /     fn key(&self) -> Result<KeyEntry, Error> {
540 | |         self.keybase()
541 | |             .get_key(&self.config.key_name)
542 | |             .map_err(Error::key_base)
543 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<keyring::KeyEntry, error::Error>
   --> relayer/src/chain/cosmos.rs:551:5
    |
551 | /     fn key_and_bytes(&self) -> Result<(KeyEntry, Vec<u8>), Error> {
552 | |         let key = self.key()?;
553 | |         let key_bytes = self.key_bytes(&key)?;
554 | |         Ok((key, key_bytes))
555 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<&mut ibc_proto::cosmos::auth::v1beta1::BaseAccount, error::Error>
   --> relayer/src/chain/cosmos.rs:584:5
    |
584 | /     fn account_number(&mut self) -> Result<u64, Error> {
585 | |         Ok(self.account()?.account_number)
586 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<&mut ibc_proto::cosmos::auth::v1beta1::BaseAccount, error::Error>
   --> relayer/src/chain/cosmos.rs:588:5
    |
588 | /     fn account_sequence(&mut self) -> Result<u64, Error> {
589 | |         Ok(self.account()?.sequence)
590 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<&mut ibc_proto::cosmos::auth::v1beta1::BaseAccount, error::Error>
   --> relayer/src/chain/cosmos.rs:592:5
    |
592 | /     fn incr_account_sequence(&mut self) -> Result<(), Error> {
593 | |         self.account()?.sequence += 1;
594 | |         Ok(())
595 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<(keyring::KeyEntry, std::vec::Vec<u8>), error::Error>
   --> relayer/src/chain/cosmos.rs:597:5
    |
597 | /     fn signer(&self, sequence: u64) -> Result<SignerInfo, Error> {
598 | |         let (_key, pk_buf) = self.key_and_bytes()?;
599 | |         // Create a MsgSend proto Any message
600 | |         let pk_any = Any {
...   |
613 | |         Ok(signer_info)
614 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
   --> relayer/src/chain/cosmos.rs:618:21
    |
618 |             amount: vec![self.max_fee_in_coins()],
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
   --> relayer/src/chain/cosmos.rs:628:21
    |
628 |             amount: vec![self.fee_from_gas_in_coins(adjusted_gas_limit)],
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::vec::Vec<u8>, error::Error>
   --> relayer/src/chain/cosmos.rs:634:5
    |
634 | /     fn signed_doc(
635 | |         &self,
636 | |         body_bytes: Vec<u8>,
637 | |         auth_info_bytes: Vec<u8>,
...   |
657 | |         Ok(signed)
658 | |     }
    | |_____^

error: [Prusti internal error] failed to obtain the type of the captured path #0 of closure [closure@relayer/src/chain/cosmos.rs:745:23: 745:60]
   --> relayer/src/chain/cosmos.rs:744:1
    |
744 | / fn empty_event_present(events: &[IbcEvent]) -> bool {
745 | |     events.iter().any(|ev| matches!(ev, IbcEvent::Empty(_)))
746 | | }
    | |_^

error: [Prusti internal error] failed to obtain the type of the captured path #0 of closure [closure@relayer/src/chain/cosmos.rs:751:14: 751:49]
   --> relayer/src/chain/cosmos.rs:748:1
    |
748 | / fn all_tx_results_found(tx_sync_results: &[TxSyncResult]) -> bool {
749 | |     tx_sync_results
750 | |         .iter()
751 | |         .all(|r| !empty_event_present(&r.events))
752 | | }
    | |_^

warning: [Prusti: unsupported feature] unsupported type Float(F64)
   --> relayer/src/chain/cosmos.rs:760:5
    |
760 | /     fn bootstrap(config: ChainConfig, rt: Arc<TokioRuntime>) -> Result<Self, Error> {
761 | |         let rpc_client = HttpClient::new(config.rpc_addr.clone())
762 | |             .map_err(|e| Error::rpc(config.rpc_addr.clone(), e))?;
763 | |
...   |
783 | |         Ok(chain)
784 | |     }
    | |_____^

error: [Prusti internal error] reference has no fields
   --> relayer/src/chain/cosmos.rs:786:5
    |
786 | /     fn init_light_client(&self) -> Result<Box<dyn LightClient<Self>>, Error> {
787 | |         use tendermint_light_client::types::PeerId;
788 | |
789 | |         crate::time!("init_light_client");
...   |
799 | |         Ok(Box::new(light_client))
800 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<(event::monitor::EventMonitor, crossbeam_channel::Receiver<std::result::Result<event::monitor::EventBatch, event::monitor::Error>>, crossbeam_channel::Sender<event::monitor::MonitorCmd>), error::Error>
   --> relayer/src/chain/cosmos.rs:802:5
    |
802 | /     fn init_event_monitor(
803 | |         &self,
804 | |         rt: Arc<TokioRuntime>,
805 | |     ) -> Result<(EventReceiver, TxMonitorCmd), Error> {
...   |
819 | |         Ok((event_receiver, monitor_tx))
820 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported type Float(F64)
   --> relayer/src/chain/cosmos.rs:822:5
    |
822 | /     fn shutdown(self) -> Result<(), Error> {
823 | |         Ok(())
824 | |     }
    | |_____^

error: [Prusti internal error] generating fold-unfold Viper statements failed (FailedToObtain(Pred(Local(_old$l2$0: Ref(m_ChainConfig$_beg_$_end_), Position { line: 0, column: 0, id: 0 }), read)))
   --> relayer/src/chain/cosmos.rs:826:5
    |
826 | /     fn id(&self) -> &ChainId {
827 | |         &self.config().id
828 | |     }
    | |_____^

warning: [Prusti: unsupported feature] iterators are not fully supported yet
   --> relayer/src/chain/cosmos.rs:857:20
    |
857 |         for msg in proto_msgs.iter() {
    |                    ^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<keyring::KeyEntry, error::Error>
   --> relayer/src/chain/cosmos.rs:896:5
    |
896 | /     fn get_signer(&mut self) -> Result<Signer, Error> {
897 | |         crate::time!("get_signer");
898 | |
899 | |         // Get the key from key seed file
...   |
906 | |         Ok(Signer::new(bech32))
907 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<keyring::KeyEntry, error::Error>
   --> relayer/src/chain/cosmos.rs:910:5
    |
910 | /     fn get_key(&mut self) -> Result<KeyEntry, Error> {
911 | |         crate::time!("get_key");
912 | |
913 | |         // Get the key from key seed file
...   |
919 | |         Ok(key)
920 | |     }
    | |_____^

error: [Prusti internal error] generating fold-unfold Viper statements failed (FailedToObtain(Pred(Local(_old$l5$0: Ref(Slice$u8), Position { line: 0, column: 0, id: 0 }), read)))
   --> relayer/src/chain/cosmos.rs:922:5
    |
922 | /     fn query_commitment_prefix(&self) -> Result<CommitmentPrefix, Error> {
923 | |         crate::time!("query_commitment_prefix");
924 | |
925 | |         // TODO - do a real chain query
...   |
928 | |         ))
929 | |     }
    | |_____^

error: [Prusti internal error] reference has no fields
   --> relayer/src/chain/cosmos.rs:932:5
    |
932 | /     fn query_latest_height(&self) -> Result<ICSHeight, Error> {
933 | |         crate::time!("query_latest_height");
934 | |
935 | |         let status = self
...   |
949 | |         })
950 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported type Opaque(DefId(105:7896 ~ ibc_proto[fbd5]::ibc::core::client::v1::query_client::{impl#0}::connect::{opaque#0}), [D])
   --> relayer/src/chain/cosmos.rs:960:17
    |
960 | /                 ibc_proto::ibc::core::client::v1::query_client::QueryClient::connect(
961 | |                     self.grpc_addr.clone(),
962 | |                 ),
    | |_________________^

error: [Prusti internal error] failed to obtain the type of the captured path #0 of closure [closure@relayer/src/chain/cosmos.rs:998:23: 998:86]
    --> relayer/src/chain/cosmos.rs:989:5
     |
989  | /     fn query_client_state(
990  | |         &self,
991  | |         client_id: &ClientId,
992  | |         height: ICSHeight,
...    |
1001 | |         Ok(client_state)
1002 | |     }
     | |_____^

warning: [Prusti: unsupported feature] unsupported type Opaque(DefId(105:4311 ~ ibc_proto[fbd5]::cosmos::upgrade::v1beta1::query_client::{impl#0}::connect::{opaque#0}), [D])
    --> relayer/src/chain/cosmos.rs:1012:17
     |
1012 | /                 ibc_proto::cosmos::upgrade::v1beta1::query_client::QueryClient::connect(
1013 | |                     self.grpc_addr.clone(),
1014 | |                 ),
     | |_________________^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<tendermint::block::Height, error::Error>
    --> relayer/src/chain/cosmos.rs:1046:5
     |
1046 | /     fn query_upgraded_consensus_state(
1047 | |         &self,
1048 | |         height: ICSHeight,
1049 | |     ) -> Result<(Self::ConsensusState, MerkleProof), Error> {
...    |
1088 | |         Ok((tm_consensus_state, proof))
1089 | |     }
     | |_____^

warning: [Prusti: unsupported feature] unsupported type Opaque(DefId(105:7896 ~ ibc_proto[fbd5]::ibc::core::client::v1::query_client::{impl#0}::connect::{opaque#0}), [D])
    --> relayer/src/chain/cosmos.rs:1100:17
     |
1100 | /                 ibc_proto::ibc::core::client::v1::query_client::QueryClient::connect(
1101 | |                     self.grpc_addr.clone(),
1102 | |                 ),
     | |_________________^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<(ibc::ics07_tendermint::consensus_state::ConsensusState, ibc_proto::ibc::core::commitment::v1::MerkleProof), error::Error>
    --> relayer/src/chain/cosmos.rs:1122:5
     |
1122 | /     fn query_consensus_state(
1123 | |         &self,
1124 | |         client_id: ClientId,
1125 | |         consensus_height: ICSHeight,
...    |
1133 | |         Ok(AnyConsensusState::Tendermint(consensus_state))
1134 | |     }
     | |_____^

warning: [Prusti: unsupported feature] unsupported type Opaque(DefId(105:8784 ~ ibc_proto[fbd5]::ibc::core::connection::v1::query_client::{impl#0}::connect::{opaque#0}), [D])
    --> relayer/src/chain/cosmos.rs:1144:17
     |
1144 | /                 ibc_proto::ibc::core::connection::v1::query_client::QueryClient::connect(
1145 | |                     self.grpc_addr.clone(),
1146 | |                 ),
     | |_________________^

warning: [Prusti: unsupported feature] unsupported type Opaque(DefId(105:8784 ~ ibc_proto[fbd5]::ibc::core::connection::v1::query_client::{impl#0}::connect::{opaque#0}), [D])
    --> relayer/src/chain/cosmos.rs:1178:17
     |
1178 | /                 ibc_proto::ibc::core::connection::v1::query_client::QueryClient::connect(
1179 | |                     self.grpc_addr.clone(),
1180 | |                 ),
     | |_________________^

warning: [Prusti: unsupported feature] unsupported type Opaque(DefId(105:5983 ~ ibc_proto[fbd5]::ibc::core::channel::v1::query_client::{impl#0}::connect::{opaque#0}), [D])
    --> relayer/src/chain/cosmos.rs:1279:17
     |
1279 | /                 ibc_proto::ibc::core::channel::v1::query_client::QueryClient::connect(
1280 | |                     self.grpc_addr.clone(),
1281 | |                 ),
     | |_________________^

warning: [Prusti: unsupported feature] unsupported type Opaque(DefId(105:5983 ~ ibc_proto[fbd5]::ibc::core::channel::v1::query_client::{impl#0}::connect::{opaque#0}), [D])
    --> relayer/src/chain/cosmos.rs:1311:17
     |
1311 | /                 ibc_proto::ibc::core::channel::v1::query_client::QueryClient::connect(
1312 | |                     self.grpc_addr.clone(),
1313 | |                 ),
     | |_________________^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<chain::QueryResponse, error::Error>
    --> relayer/src/chain/cosmos.rs:1332:5
     |
1332 | /     fn query_channel(
1333 | |         &self,
1334 | |         port_id: &PortId,
1335 | |         channel_id: &ChannelId,
...    |
1345 | |         Ok(channel_end)
1346 | |     }
     | |_____^

warning: [Prusti: unsupported feature] unsupported type Opaque(DefId(105:5983 ~ ibc_proto[fbd5]::ibc::core::channel::v1::query_client::{impl#0}::connect::{opaque#0}), [D])
    --> relayer/src/chain/cosmos.rs:1356:17
     |
1356 | /                 ibc_proto::ibc::core::channel::v1::query_client::QueryClient::connect(
1357 | |                     self.grpc_addr.clone(),
1358 | |                 ),
     | |_________________^

warning: [Prusti: unsupported feature] unsupported type Opaque(DefId(105:5983 ~ ibc_proto[fbd5]::ibc::core::channel::v1::query_client::{impl#0}::connect::{opaque#0}), [D])
    --> relayer/src/chain/cosmos.rs:1385:17
     |
1385 | /                 ibc_proto::ibc::core::channel::v1::query_client::QueryClient::connect(
1386 | |                     self.grpc_addr.clone(),
1387 | |                 ),
     | |_________________^

warning: [Prusti: unsupported feature] unsupported type Opaque(DefId(105:5983 ~ ibc_proto[fbd5]::ibc::core::channel::v1::query_client::{impl#0}::connect::{opaque#0}), [D])
    --> relayer/src/chain/cosmos.rs:1417:17
     |
1417 | /                 ibc_proto::ibc::core::channel::v1::query_client::QueryClient::connect(
1418 | |                     self.grpc_addr.clone(),
1419 | |                 ),
     | |_________________^

warning: [Prusti: unsupported feature] unsupported type Opaque(DefId(105:5983 ~ ibc_proto[fbd5]::ibc::core::channel::v1::query_client::{impl#0}::connect::{opaque#0}), [D])
    --> relayer/src/chain/cosmos.rs:1443:17
     |
1443 | /                 ibc_proto::ibc::core::channel::v1::query_client::QueryClient::connect(
1444 | |                     self.grpc_addr.clone(),
1445 | |                 ),
     | |_________________^

warning: [Prusti: unsupported feature] unsupported type Opaque(DefId(105:5983 ~ ibc_proto[fbd5]::ibc::core::channel::v1::query_client::{impl#0}::connect::{opaque#0}), [D])
    --> relayer/src/chain/cosmos.rs:1475:17
     |
1475 | /                 ibc_proto::ibc::core::channel::v1::query_client::QueryClient::connect(
1476 | |                     self.grpc_addr.clone(),
1477 | |                 ),
     | |_________________^

warning: [Prusti: unsupported feature] unsupported type Opaque(DefId(105:5983 ~ ibc_proto[fbd5]::ibc::core::channel::v1::query_client::{impl#0}::connect::{opaque#0}), [D])
    --> relayer/src/chain/cosmos.rs:1500:17
     |
1500 | /                 ibc_proto::ibc::core::channel::v1::query_client::QueryClient::connect(
1501 | |                     self.grpc_addr.clone(),
1502 | |                 ),
     | |_________________^

error: [Prusti internal error] reference has no fields
    --> relayer/src/chain/cosmos.rs:1527:5
     |
1527 | /     fn query_txs(&self, request: QueryTxRequest) -> Result<Vec<IbcEvent>, Error> {
1528 | |         crate::time!("query_txs");
1529 | |
1530 | |         match request {
...    |
1622 | |         }
1623 | |     }
     | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<chain::QueryResponse, error::Error>
    --> relayer/src/chain/cosmos.rs:1625:5
     |
1625 | /     fn proven_client_state(
1626 | |         &self,
1627 | |         client_id: &ClientId,
1628 | |         height: ICSHeight,
...    |
1642 | |         ))
1643 | |     }
     | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<chain::QueryResponse, error::Error>
    --> relayer/src/chain/cosmos.rs:1645:5
     |
1645 | /     fn proven_client_consensus(
1646 | |         &self,
1647 | |         client_id: &ClientId,
1648 | |         consensus_height: ICSHeight,
...    |
1672 | |         ))
1673 | |     }
     | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<chain::QueryResponse, error::Error>
    --> relayer/src/chain/cosmos.rs:1675:5
     |
1675 | /     fn proven_connection(
1676 | |         &self,
1677 | |         connection_id: &ConnectionId,
1678 | |         height: ICSHeight,
...    |
1686 | |         ))
1687 | |     }
     | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<chain::QueryResponse, error::Error>
    --> relayer/src/chain/cosmos.rs:1689:5
     |
1689 | /     fn proven_channel(
1690 | |         &self,
1691 | |         port_id: &PortId,
1692 | |         channel_id: &ChannelId,
...    |
1706 | |         ))
1707 | |     }
     | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<chain::QueryResponse, error::Error>
    --> relayer/src/chain/cosmos.rs:1709:5
     |
1709 | /     fn proven_packet(
1710 | |         &self,
1711 | |         packet_type: PacketMsgType,
1712 | |         port_id: PortId,
...    |
1748 | |         Ok((res.value, commitment_proof_bytes))
1749 | |     }
     | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::time::Duration, error::Error>
    --> relayer/src/chain/cosmos.rs:1751:5
     |
1751 | /     fn build_client_state(&self, height: ICSHeight) -> Result<Self::ClientState, Error> {
1752 | |         // Build the client state.
1753 | |         ClientState::new(
1754 | |             self.id().clone(),
...    |
1767 | |         .map_err(Error::ics07)
1768 | |     }
     | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<light_client::Verified<ibc::ics07_tendermint::header::Header>, error::Error>
    --> relayer/src/chain/cosmos.rs:1779:5
     |
1779 | /     fn build_header(
1780 | |         &self,
1781 | |         trusted_height: ICSHeight,
1782 | |         target_height: ICSHeight,
...    |
1792 | |         Ok((target, supporting))
1793 | |     }
     | |_____^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#49r, [&str; 2], Not)
    --> relayer/src/chain/cosmos.rs:1798:17
     |
1798 |         format!("{}.packet_src_channel", request.event_id.as_str()),
     |                 ^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#31r, [&str; 2], Not)
    --> relayer/src/chain/cosmos.rs:1821:17
     |
1821 |         format!("{}.client_id", request.event_id.as_str()),
     |                 ^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant value: Value(Slice { data: Allocation { bytes: [116, 120, 46, 104, 97, 115, 104], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [127], len: Size { raw: 7 } }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 7 })
    --> relayer/src/chain/cosmos.rs:1834:5
     |
1834 |     tendermint_rpc::query::Query::eq("tx.hash", request.0.to_string())
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] higher-ranked lifetimes and types are not supported
    --> relayer/src/chain/cosmos.rs:1855:5
     |
1855 | /     response
1856 | |         .tx_result
1857 | |         .events
1858 | |         .into_iter()
1859 | |         .filter(|abci_event| abci_event.type_str == request.event_id.as_str())
     | |______________________________________________________________________________^

warning: [Prusti: unsupported feature] higher-ranked lifetimes and types are not supported
    --> relayer/src/chain/cosmos.rs:1896:5
     |
1896 | /     response
1897 | |         .tx_result
1898 | |         .events
1899 | |         .into_iter()
1900 | |         .filter(|event| event.type_str == request.event_id.as_str())
     | |____________________________________________________________________^

warning: [Prusti: unsupported feature] determining the region of a dereferentiation is not supported
    --> relayer/src/chain/cosmos.rs:1917:16
     |
1917 |           return vec![IbcEvent::ChainError(format!(
     |  ________________^
1918 | |             "deliver_tx for {} reports error: code={:?}, log={:?}",
1919 | |             response.hash, deliver_tx_result.code, deliver_tx_result.log
1920 | |         ))];
     | |___________^
     |
     = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error: [Prusti internal error] reference has no fields
    --> relayer/src/chain/cosmos.rs:2018:1
     |
2018 | / fn encode_to_bech32(address: &str, account_prefix: &str) -> Result<String, Error> {
2019 | |     let account = AccountId::from_str(address)
2020 | |         .map_err(|e| Error::invalid_key_address(address.to_string(), e))?;
2021 | |
...    |
2025 | |     Ok(encoded)
2026 | | }
     | |_^

error: [Prusti internal error] failed to obtain the type of the captured path #0 of closure [closure@relayer/src/chain/cosmos.rs:2036:14: 2036:39]
    --> relayer/src/chain/cosmos.rs:2031:1
     |
2031 | / fn client_id_suffix(client_id: &ClientId) -> Option<u64> {
2032 | |     client_id
2033 | |         .as_str()
2034 | |         .split('-')
...    |
2037 | |         .flatten()
2038 | | }
     | |_^

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
    --> relayer/src/chain/cosmos.rs:2049:23
     |
2049 |         signer_infos: vec![signer_info],
     |                       ^^^^^^^^^^^^^^^^^
     |
     = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error: [Prusti internal error] generating fold-unfold Viper statements failed (FailedToObtain(Pred(Local(_old$l2$0: Ref(Slice$m_Any$_beg_$_end_), Position { line: 0, column: 0, id: 0 }), read)))
    --> relayer/src/chain/cosmos.rs:2059:1
     |
2059 | / fn tx_body_and_bytes(proto_msgs: Vec<Any>) -> Result<(TxBody, Vec<u8>), Error> {
2060 | |     // Create TxBody
2061 | |     let body = TxBody {
2062 | |         messages: proto_msgs.to_vec(),
...    |
2071 | |     Ok((body, body_buf))
2072 | | }
     | |_^

warning: [Prusti: unsupported feature] copy operation for an unsupported type Float(F64)
    --> relayer/src/chain/cosmos.rs:2075:52
     |
2075 |     let fee_amount = mul_ceil(adjusted_gas_amount, gas_price.price);
     |                                                    ^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported type Float(F64)
    --> relayer/src/chain/cosmos.rs:2084:1
     |
2084 | / fn mul_ceil(a: u64, f: f64) -> u64 {
2085 | |     use fraction::Fraction as F;
2086 | |
2087 | |     // Safe to unwrap below as are multiplying two finite fractions
...    |
2090 | |     n.numer().unwrap() / n.denom().unwrap()
2091 | | }
     | |_^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
  --> relayer/src/chain/counterparty.rs:35:5
   |
35 | /     trace!(
36 | |         chain_id=%src_chain.id(), connection_id=%src_connection_id,
37 | |         "counterparty chain: {}", client_state.chain_id()
38 | |     );
   | |______^
   |
   = note: this warning originates in the macro `$crate::valueset` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] iterators are not fully supported yet
  --> relayer/src/chain/counterparty.rs:55:36
   |
55 |     for counterparty_connection in counterparty_connections.into_iter() {
   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
  --> relayer/src/chain/counterparty.rs:88:13
   |
88 |             counterparty_chain,
   |             ^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#14r, ibc::ics04_channel::channel::State, Not)
   --> relayer/src/chain/counterparty.rs:130:34
    |
130 |     if channel_end.state_matches(&State::Uninitialized) {
    |                                  ^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> relayer/src/chain/counterparty.rs:172:31
    |
172 |     channel_connection_client(src_chain, src_port_id, src_channel_id)
    |                               ^^^^^^^^^

warning: [Prusti: unsupported feature] iterators are not fully supported yet
   --> relayer/src/chain/counterparty.rs:191:33
    |
191 |     for counterparty_channel in counterparty_channels.into_iter() {
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> relayer/src/chain/counterparty.rs:207:70
    |
207 |     let remote_channel = channel_on_destination(channel, connection, counterparty_chain)?;
    |                                                                      ^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> relayer/src/chain/counterparty.rs:233:13
    |
233 |             counterparty_chain,
    |             ^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> relayer/src/chain/counterparty.rs:275:13
    |
275 | /             error!(
276 | |                 "channel {} on chain {} has no counterparty channel id ",
277 | |                 target_pchan,
278 | |                 target_chain.id()
279 | |             );
    | |______________^
    |
    = note: this warning originates in the macro `$crate::valueset` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<(), error::Error>
  --> relayer/src/chain/handle/prod.rs:59:5
   |
59 | /     fn send<F, O>(&self, f: F) -> Result<O, Error>
60 | |     where
61 | |         F: FnOnce(ReplyTo<O>) -> ChainRequest,
62 | |         O: Debug,
...  |
69 | |         receiver.recv().map_err(Error::channel_receive)?
70 | |     }
   | |_____^

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
  --> relayer/src/chain/handle.rs:68:16
   |
68 |             a: self.b,
   |                ^^^^^^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
  --> relayer/src/chain/handle.rs:77:25
   |
77 |             .field("a", &self.a.id())
   |                         ^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported type Float(F64)
   --> relayer/src/chain/runtime.rs:95:5
    |
95  | /     pub fn spawn(
96  | |         config: ChainConfig,
97  | |         rt: Arc<TokioRuntime>,
98  | |     ) -> Result<Box<dyn ChainHandle>, Error> {
...   |
111 | |         Ok(handle)
112 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
   --> relayer/src/chain/runtime.rs:122:46
    |
122 |         let chain_runtime = Self::new(chain, light_client, event_receiver, tx_monitor_cmd, rt);
    |                                              ^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
   --> relayer/src/chain/runtime.rs:156:13
    |
156 |             light_client,
    |             ^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
   --> relayer/src/chain/runtime.rs:164:9
    |
164 |         Box::new(ProdChainHandle::new(chain_id, sender))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: [Prusti: invalid specification] the loop invariant cannot be in a conditional branch of the loop
   --> relayer/src/chain/runtime.rs:168:9
    |
168 | /         loop {
169 | |             channel::select! {
170 | |                 recv(self.event_receiver) -> event_batch => {
171 | |                     match event_batch {
...   |
346 | |             }
347 | |         }
    | |_________^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<crossbeam_channel::Receiver<std::sync::Arc<std::result::Result<event::monitor::EventBatch, event::monitor::Error>>>, error::Error>
   --> relayer/src/chain/runtime.rs:352:5
    |
352 | /     fn subscribe(&mut self, reply_to: ReplyTo<Subscription>) -> Result<(), Error> {
353 | |         let subscription = self.event_bus.subscribe();
354 | |
355 | |         reply_to.send(Ok(subscription)).map_err(Error::send)?;
356 | |
357 | |         Ok(())
358 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::vec::Vec<ibc::events::IbcEvent>, error::Error>
   --> relayer/src/chain/runtime.rs:360:5
    |
360 | /     fn send_msgs(
361 | |         &mut self,
362 | |         proto_msgs: Vec<prost_types::Any>,
363 | |         reply_to: ReplyTo<Vec<IbcEvent>>,
...   |
369 | |         Ok(())
370 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<ibc::ics02_client::height::Height, error::Error>
   --> relayer/src/chain/runtime.rs:372:5
    |
372 | /     fn query_latest_height(&self, reply_to: ReplyTo<Height>) -> Result<(), Error> {
373 | |         let latest_height = self.chain.query_latest_height();
374 | |
375 | |         reply_to.send(latest_height).map_err(Error::send)?;
376 | |
377 | |         Ok(())
378 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<ibc::signer::Signer, error::Error>
   --> relayer/src/chain/runtime.rs:380:5
    |
380 | /     fn get_signer(&mut self, reply_to: ReplyTo<Signer>) -> Result<(), Error> {
381 | |         let result = self.chain.get_signer();
382 | |
383 | |         reply_to.send(result).map_err(Error::send)?;
384 | |
385 | |         Ok(())
386 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<keyring::KeyEntry, error::Error>
   --> relayer/src/chain/runtime.rs:388:5
    |
388 | /     fn get_key(&mut self, reply_to: ReplyTo<KeyEntry>) -> Result<(), Error> {
389 | |         let result = self.chain.get_key();
390 | |
391 | |         reply_to.send(result).map_err(Error::send)?;
392 | |
393 | |         Ok(())
394 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::string::String, error::Error>
   --> relayer/src/chain/runtime.rs:396:5
    |
396 | /     fn module_version(&self, port_id: PortId, reply_to: ReplyTo<String>) -> Result<(), Error> {
397 | |         let result = self.chain.query_module_version(&port_id);
398 | |
399 | |         reply_to.send(Ok(result)).map_err(Error::send)?;
400 | |
401 | |         Ok(())
402 | |     }
    | |_____^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> relayer/src/chain/runtime.rs:417:17
    |
417 |                 self.light_client.as_mut(),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<ibc::ics02_client::client_state::AnyClientState, error::Error>
   --> relayer/src/chain/runtime.rs:431:5
    |
431 | /     fn build_client_state(
432 | |         &self,
433 | |         height: Height,
434 | |         reply_to: ReplyTo<AnyClientState>,
...   |
443 | |         Ok(())
444 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<light_client::Verified<<C as chain::Chain>::LightBlock>, error::Error>
   --> relayer/src/chain/runtime.rs:447:5
    |
447 | /     fn build_consensus_state(
448 | |         &mut self,
449 | |         trusted: Height,
450 | |         target: Height,
...   |
463 | |         Ok(())
464 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::option::Option<ibc::ics02_client::misbehaviour::MisbehaviourEvidence>, error::Error>
   --> relayer/src/chain/runtime.rs:467:5
    |
467 | /     fn check_misbehaviour(
468 | |         &mut self,
469 | |         update_event: UpdateClient,
470 | |         client_state: AnyClientState,
...   |
479 | |         Ok(())
480 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<(std::option::Option<ibc::ics02_client::client_state::AnyClientState>, ibc::proofs::Proofs), error::Error>
   --> relayer/src/chain/runtime.rs:482:5
    |
482 | /     fn build_connection_proofs_and_client_state(
483 | |         &self,
484 | |         message_type: ConnectionMsgType,
485 | |         connection_id: ConnectionId,
...   |
502 | |         Ok(())
503 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::vec::Vec<ibc::ics02_client::client_state::IdentifiedAnyClientState>, error::Error>
   --> relayer/src/chain/runtime.rs:505:5
    |
505 | /     fn query_clients(
506 | |         &self,
507 | |         request: QueryClientStatesRequest,
508 | |         reply_to: ReplyTo<Vec<IdentifiedAnyClientState>>,
...   |
514 | |         Ok(())
515 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::vec::Vec<ibc::ics24_host::identifier::ConnectionId>, error::Error>
   --> relayer/src/chain/runtime.rs:517:5
    |
517 | /     fn query_client_connections(
518 | |         &self,
519 | |         request: QueryClientConnectionsRequest,
520 | |         reply_to: ReplyTo<Vec<ConnectionId>>,
...   |
526 | |         Ok(())
527 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<ibc::ics02_client::client_state::AnyClientState, error::Error>
   --> relayer/src/chain/runtime.rs:529:5
    |
529 | /     fn query_client_state(
530 | |         &self,
531 | |         client_id: ClientId,
532 | |         height: Height,
...   |
542 | |         Ok(())
543 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<(ibc::ics02_client::client_state::AnyClientState, ibc_proto::ibc::core::commitment::v1::MerkleProof), error::Error>
   --> relayer/src/chain/runtime.rs:545:5
    |
545 | /     fn query_upgraded_client_state(
546 | |         &self,
547 | |         height: Height,
548 | |         reply_to: ReplyTo<(AnyClientState, MerkleProof)>,
...   |
557 | |         Ok(())
558 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::vec::Vec<ibc::ics02_client::client_consensus::AnyConsensusStateWithHeight>, error::Error>
   --> relayer/src/chain/runtime.rs:560:5
    |
560 | /     fn query_consensus_states(
561 | |         &self,
562 | |         request: QueryConsensusStatesRequest,
563 | |         reply_to: ReplyTo<Vec<AnyConsensusStateWithHeight>>,
...   |
569 | |         Ok(())
570 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<ibc::ics02_client::client_consensus::AnyConsensusState, error::Error>
   --> relayer/src/chain/runtime.rs:572:5
    |
572 | /     fn query_consensus_state(
573 | |         &self,
574 | |         client_id: ClientId,
575 | |         consensus_height: Height,
...   |
585 | |         Ok(())
586 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<(ibc::ics02_client::client_consensus::AnyConsensusState, ibc_proto::ibc::core::commitment::v1::MerkleProof), error::Error>
   --> relayer/src/chain/runtime.rs:588:5
    |
588 | /     fn query_upgraded_consensus_state(
589 | |         &self,
590 | |         height: Height,
591 | |         reply_to: ReplyTo<(AnyConsensusState, MerkleProof)>,
...   |
600 | |         Ok(())
601 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<ibc::ics23_commitment::commitment::CommitmentPrefix, error::Error>
   --> relayer/src/chain/runtime.rs:603:5
    |
603 | /     fn query_commitment_prefix(&self, reply_to: ReplyTo<CommitmentPrefix>) -> Result<(), Error> {
604 | |         let prefix = self.chain.query_commitment_prefix();
605 | |
606 | |         reply_to.send(prefix).map_err(Error::send)?;
607 | |
608 | |         Ok(())
609 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::vec::Vec<ibc::ics03_connection::version::Version>, error::Error>
   --> relayer/src/chain/runtime.rs:611:5
    |
611 | /     fn query_compatible_versions(&self, reply_to: ReplyTo<Vec<Version>>) -> Result<(), Error> {
612 | |         let versions = self.chain.query_compatible_versions();
613 | |
614 | |         reply_to.send(versions).map_err(Error::send)?;
615 | |
616 | |         Ok(())
617 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<ibc::ics03_connection::connection::ConnectionEnd, error::Error>
   --> relayer/src/chain/runtime.rs:619:5
    |
619 | /     fn query_connection(
620 | |         &self,
621 | |         connection_id: ConnectionId,
622 | |         height: Height,
...   |
629 | |         Ok(())
630 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::vec::Vec<ibc::ics03_connection::connection::IdentifiedConnectionEnd>, error::Error>
   --> relayer/src/chain/runtime.rs:632:5
    |
632 | /     fn query_connections(
633 | |         &self,
634 | |         request: QueryConnectionsRequest,
635 | |         reply_to: ReplyTo<Vec<IdentifiedConnectionEnd>>,
...   |
641 | |         Ok(())
642 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::vec::Vec<ibc::ics04_channel::channel::IdentifiedChannelEnd>, error::Error>
   --> relayer/src/chain/runtime.rs:644:5
    |
644 | /     fn query_connection_channels(
645 | |         &self,
646 | |         request: QueryConnectionChannelsRequest,
647 | |         reply_to: ReplyTo<Vec<IdentifiedChannelEnd>>,
...   |
653 | |         Ok(())
654 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::vec::Vec<ibc::ics04_channel::channel::IdentifiedChannelEnd>, error::Error>
   --> relayer/src/chain/runtime.rs:656:5
    |
656 | /     fn query_channels(
657 | |         &self,
658 | |         request: QueryChannelsRequest,
659 | |         reply_to: ReplyTo<Vec<IdentifiedChannelEnd>>,
...   |
665 | |         Ok(())
666 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<ibc::ics04_channel::channel::ChannelEnd, error::Error>
   --> relayer/src/chain/runtime.rs:668:5
    |
668 | /     fn query_channel(
669 | |         &self,
670 | |         port_id: PortId,
671 | |         channel_id: ChannelId,
...   |
679 | |         Ok(())
680 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::option::Option<ibc::ics02_client::client_state::IdentifiedAnyClientState>, error::Error>
   --> relayer/src/chain/runtime.rs:682:5
    |
682 | /     fn query_channel_client_state(
683 | |         &self,
684 | |         request: QueryChannelClientStateRequest,
685 | |         reply_to: ReplyTo<Option<IdentifiedAnyClientState>>,
...   |
691 | |         Ok(())
692 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<(ibc::ics02_client::client_state::AnyClientState, ibc_proto::ibc::core::commitment::v1::MerkleProof), error::Error>
   --> relayer/src/chain/runtime.rs:694:5
    |
694 | /     fn proven_client_state(
695 | |         &self,
696 | |         client_id: ClientId,
697 | |         height: Height,
...   |
707 | |         Ok(())
708 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<(ibc::ics03_connection::connection::ConnectionEnd, ibc_proto::ibc::core::commitment::v1::MerkleProof), error::Error>
   --> relayer/src/chain/runtime.rs:710:5
    |
710 | /     fn proven_connection(
711 | |         &self,
712 | |         connection_id: ConnectionId,
713 | |         height: Height,
...   |
720 | |         Ok(())
721 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<(ibc::ics02_client::client_consensus::AnyConsensusState, ibc_proto::ibc::core::commitment::v1::MerkleProof), error::Error>
   --> relayer/src/chain/runtime.rs:723:5
    |
723 | /     fn proven_client_consensus(
724 | |         &self,
725 | |         client_id: ClientId,
726 | |         consensus_height: Height,
...   |
737 | |         Ok(())
738 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<ibc::proofs::Proofs, error::Error>
   --> relayer/src/chain/runtime.rs:740:5
    |
740 | /     fn build_channel_proofs(
741 | |         &self,
742 | |         port_id: PortId,
743 | |         channel_id: ChannelId,
...   |
753 | |         Ok(())
754 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<(std::vec::Vec<u8>, ibc::proofs::Proofs), error::Error>
   --> relayer/src/chain/runtime.rs:756:5
    |
756 | /     fn build_packet_proofs(
757 | |         &self,
758 | |         packet_type: PacketMsgType,
759 | |         port_id: PortId,
...   |
771 | |         Ok(())
772 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<(std::vec::Vec<ibc_proto::ibc::core::channel::v1::PacketState>, ibc::ics02_client::height::Height), error::Error>
   --> relayer/src/chain/runtime.rs:774:5
    |
774 | /     fn query_packet_commitments(
775 | |         &self,
776 | |         request: QueryPacketCommitmentsRequest,
777 | |         reply_to: ReplyTo<(Vec<PacketState>, Height)>,
...   |
783 | |         Ok(())
784 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::vec::Vec<u64>, error::Error>
   --> relayer/src/chain/runtime.rs:786:5
    |
786 | /     fn query_unreceived_packets(
787 | |         &self,
788 | |         request: QueryUnreceivedPacketsRequest,
789 | |         reply_to: ReplyTo<Vec<u64>>,
...   |
795 | |         Ok(())
796 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<(std::vec::Vec<ibc_proto::ibc::core::channel::v1::PacketState>, ibc::ics02_client::height::Height), error::Error>
   --> relayer/src/chain/runtime.rs:798:5
    |
798 | /     fn query_packet_acknowledgements(
799 | |         &self,
800 | |         request: QueryPacketAcknowledgementsRequest,
801 | |         reply_to: ReplyTo<(Vec<PacketState>, Height)>,
...   |
807 | |         Ok(())
808 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::vec::Vec<u64>, error::Error>
   --> relayer/src/chain/runtime.rs:810:5
    |
810 | /     fn query_unreceived_acknowledgement(
811 | |         &self,
812 | |         request: QueryUnreceivedAcksRequest,
813 | |         reply_to: ReplyTo<Vec<u64>>,
...   |
819 | |         Ok(())
820 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<ibc::ics04_channel::packet::Sequence, error::Error>
   --> relayer/src/chain/runtime.rs:822:5
    |
822 | /     fn query_next_sequence_receive(
823 | |         &self,
824 | |         request: QueryNextSequenceReceiveRequest,
825 | |         reply_to: ReplyTo<Sequence>,
...   |
831 | |         Ok(())
832 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::vec::Vec<ibc::events::IbcEvent>, error::Error>
   --> relayer/src/chain/runtime.rs:834:5
    |
834 | /     fn query_txs(
835 | |         &self,
836 | |         request: QueryTxRequest,
837 | |         reply_to: ReplyTo<Vec<IbcEvent>>,
...   |
843 | |         Ok(())
844 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported constant value: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:1750 ~ ibc_relayer[690b]::chain::Chain::query_module_version), const_param_did: None }, substs: [Self], promoted: Some(promoted[1]) })
   --> relayer/src/chain.rs:202:32
    |
202 |         if port_id.as_str() == "transfer" {
    |                                ^^^^^^^^^^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<(ibc::ics03_connection::connection::ConnectionEnd, ibc_proto::ibc::core::commitment::v1::MerkleProof), error::Error>
   --> relayer/src/chain.rs:301:5
    |
301 | /     fn build_connection_proofs_and_client_state(
302 | |         &self,
303 | |         message_type: ConnectionMsgType,
304 | |         connection_id: &ConnectionId,
...   |
371 | |         ))
372 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<(ibc::ics04_channel::channel::ChannelEnd, ibc_proto::ibc::core::commitment::v1::MerkleProof), error::Error>
   --> relayer/src/chain.rs:375:5
    |
375 | /     fn build_channel_proofs(
376 | |         &self,
377 | |         port_id: &PortId,
378 | |         channel_id: &ChannelId,
...   |
386 | |             .map_err(Error::malformed_proof)
387 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported constant value: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:1768 ~ ibc_relayer[690b]::chain::Chain::build_packet_proofs), const_param_did: None }, substs: [Self], promoted: Some(promoted[0]) })
   --> relayer/src/chain.rs:398:47
    |
398 |         let channel_proof = if packet_type == PacketMsgType::TimeoutOnClose {
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
  --> relayer/src/channel.rs:93:13
   |
93 |             chain,
   |             ^^^^^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ibc::ics24_host::identifier::ChannelId>
   --> relayer/src/channel.rs:117:5
    |
117 | /     pub fn channel_id(&self) -> Option<&ChannelId> {
118 | |         self.channel_id.as_ref()
119 | |     }
    | |_____^

error: [Prusti internal error] reference has no fields
   --> relayer/src/channel.rs:134:5
    |
134 | /     pub fn new(
135 | |         connection: Connection,
136 | |         ordering: Order,
137 | |         a_port: PortId,
...   |
177 | |         Ok(channel)
178 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ibc::ics04_channel::events::Attributes>
   --> relayer/src/channel.rs:180:5
    |
180 | /     pub fn restore_from_event(
181 | |         chain: Box<dyn ChainHandle>,
182 | |         counterparty_chain: Box<dyn ChainHandle>,
183 | |         channel_open_event: IbcEvent,
...   |
230 | |         })
231 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ibc::ics24_host::identifier::ConnectionId>
   --> relayer/src/channel.rs:235:5
    |
235 | /     pub fn restore_from_state(
236 | |         chain: Box<dyn ChainHandle>,
237 | |         counterparty_chain: Box<dyn ChainHandle>,
238 | |         channel: WorkerChannelObject,
...   |
308 | |         Ok((handshake_channel, a_channel.state))
309 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ibc::ics24_host::identifier::ChannelId>
   --> relayer/src/channel.rs:343:5
    |
343 | /     pub fn src_channel_id(&self) -> Option<&ChannelId> {
344 | |         self.a_side.channel_id()
345 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ibc::ics24_host::identifier::ChannelId>
   --> relayer/src/channel.rs:347:5
    |
347 | /     pub fn dst_channel_id(&self) -> Option<&ChannelId> {
348 | |         self.b_side.channel_id()
349 | |     }
    | |_____^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> relayer/src/channel.rs:364:9
    |
364 |         info!("done {} => {:#?}\n", self.src_chain().id(), event);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this warning originates in the macro `$crate::valueset` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<&ibc::ics24_host::identifier::ChannelId, channel::error::ChannelError>
   --> relayer/src/channel.rs:396:5
    |
396 | /     fn do_chan_open_try_and_send(&mut self) -> Result<(), ChannelError> {
397 | |         let event = self.build_chan_open_try_and_send().map_err(|e| {
398 | |             error!("Failed ChanTry {:?}: {:?}", self.b_side, e);
399 | |             e
...   |
406 | |         Ok(())
407 | |     }
    | |_____^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> relayer/src/channel.rs:508:9
    |
508 | /         debug!(
509 | |             "do_chan_open_finalize with channel states: {}, {}",
510 | |             a_state, b_state
511 | |         );
    | |__________^
    |
    = note: this warning originates in the macro `$crate::valueset` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> relayer/src/channel.rs:455:13
    |
455 | /             debug!(
456 | |                 "do_chan_open_finalize for src_channel_id: {}, dst_channel_id: {}",
457 | |                 src_channel_id, dst_channel_id
458 | |             );
    | |______________^
    |
    = note: this warning originates in the macro `$crate::valueset` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> relayer/src/channel.rs:494:17
    |
494 | /                 warn!(
495 | |                     "expected channels to progress to states {}, {}), instead got ({}, {})",
496 | |                     a1, b1, a2, b2
497 | |                 );
    | |__________________^
    |
    = note: this warning originates in the macro `$crate::valueset` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> relayer/src/channel.rs:609:39
    |
609 |             channel_connection_client(self.src_chain().as_ref(), self.src_port_id(), channel_id)
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
   --> relayer/src/channel.rs:626:49
    |
626 |             (State::Open, State::TryOpen) => Ok(vec![self.build_chan_open_confirm_and_send()?]),
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this warning originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> relayer/src/channel.rs:636:17
    |
636 |                 error!("Failed Chan{:?} with error: {}", state, e);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this warning originates in the macro `$crate::valueset` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] unsizing a pointer or reference value is not supported
   --> relayer/src/channel.rs:661:13
    |
661 |             self.dst_chain().clone(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^

error: [Prusti internal error] reference has no fields
   --> relayer/src/channel.rs:674:5
    |
674 | /     pub fn dst_version(&self) -> Result<String, ChannelError> {
675 | |         Ok(self.version.clone().unwrap_or(
676 | |             self.dst_chain()
677 | |                 .module_version(self.dst_port_id())
678 | |                 .map_err(|e| ChannelError::query(self.dst_chain().id(), e))?,
679 | |         ))
680 | |     }
    | |_____^

error: [Prusti internal error] reference has no fields
   --> relayer/src/channel.rs:684:5
    |
684 | /     pub fn src_version(&self) -> Result<String, ChannelError> {
685 | |         Ok(self.version.clone().unwrap_or(
686 | |             self.src_chain()
687 | |                 .module_version(self.src_port_id())
688 | |                 .map_err(|e| ChannelError::query(self.src_chain().id(), e))?,
689 | |         ))
690 | |     }
    | |_____^

error: [Prusti internal error] reference has no fields
   --> relayer/src/channel.rs:692:5
    |
692 | /     pub fn build_chan_open_init(&self) -> Result<Vec<Any>, ChannelError> {
693 | |         let signer = self
694 | |             .dst_chain()
695 | |             .get_signer()
...   |
715 | |         Ok(vec![new_msg.to_any()])
716 | |     }
    | |_____^

error: [Prusti internal error] reference has no fields
   --> relayer/src/channel.rs:718:5
    |
718 | /     pub fn build_chan_open_init_and_send(&self) -> Result<IbcEvent, ChannelError> {
719 | |         let dst_msgs = self.build_chan_open_init()?;
720 | |
721 | |         let events = self
...   |
741 | |         }
742 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ibc::ics24_host::identifier::ChannelId>
   --> relayer/src/channel.rs:748:5
    |
748 | /     fn validated_expected_channel(
749 | |         &self,
750 | |         msg_type: ChannelMsgType,
751 | |     ) -> Result<ChannelEnd, ChannelError> {
...   |
795 | |         Ok(dst_expected_channel)
796 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ibc::ics24_host::identifier::ChannelId>
   --> relayer/src/channel.rs:798:5
    |
798 | /     pub fn build_chan_open_try(&self) -> Result<Vec<Any>, ChannelError> {
799 | |         // Source channel ID must be specified
800 | |         let src_channel_id = self
801 | |             .src_channel_id()
...   |
872 | |         Ok(msgs)
873 | |     }
    | |_____^

error: [Prusti internal error] reference has no fields
   --> relayer/src/channel.rs:875:5
    |
875 | /     pub fn build_chan_open_try_and_send(&self) -> Result<IbcEvent, ChannelError> {
876 | |         let dst_msgs = self.build_chan_open_try()?;
877 | |
878 | |         let events = self
...   |
898 | |         }
899 | |     }
    | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ibc::ics24_host::identifier::ChannelId>
   --> relayer/src/channel.rs:901:5
    |
901 | /     pub fn build_chan_open_ack(&self) -> Result<Vec<Any>, ChannelError> {
902 | |         // Source and destination channel IDs must be specified
903 | |         let src_channel_id = self
904 | |             .src_channel_id()
...   |
953 | |         Ok(msgs)
954 | |     }
    | |_____^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
   --> relayer/src/channel.rs:978:21
    |
978 | /                     info!(
979 | |                         "done with ChanAck step {} => {:#?}\n",
980 | |                         channel.dst_chain().id(),
981 | |                         event
982 | |                     );
    | |______________________^
    |
    = note: this warning originates in the macro `$crate::valueset` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ibc::ics24_host::identifier::ChannelId>
    --> relayer/src/channel.rs:997:5
     |
997  | /     pub fn build_chan_open_confirm(&self) -> Result<Vec<Any>, ChannelError> {
998  | |         // Source and destination channel IDs must be specified
999  | |         let src_channel_id = self
1000 | |             .src_channel_id()
...    |
1047 | |         Ok(msgs)
1048 | |     }
     | |_____^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
    --> relayer/src/channel.rs:1076:21
     |
1076 |                     info!("done {} => {:#?}\n", channel.dst_chain().id(), event);
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: this warning originates in the macro `$crate::valueset` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ibc::ics24_host::identifier::ChannelId>
    --> relayer/src/channel.rs:1090:5
     |
1090 | /     pub fn build_chan_close_init(&self) -> Result<Vec<Any>, ChannelError> {
1091 | |         // Destination channel ID must be specified
1092 | |         let dst_channel_id = self
1093 | |             .dst_channel_id()
...    |
1113 | |         Ok(vec![new_msg.to_any()])
1114 | |     }
     | |_____^

error: [Prusti internal error] reference has no fields
    --> relayer/src/channel.rs:1116:5
     |
1116 | /     pub fn build_chan_close_init_and_send(&self) -> Result<IbcEvent, ChannelError> {
1117 | |         let dst_msgs = self.build_chan_close_init()?;
1118 | |
1119 | |         let events = self
...    |
1139 | |         }
1140 | |     }
     | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ibc::ics24_host::identifier::ChannelId>
    --> relayer/src/channel.rs:1142:5
     |
1142 | /     pub fn build_chan_close_confirm(&self) -> Result<Vec<Any>, ChannelError> {
1143 | |         // Source and destination channel IDs must be specified
1144 | |         let src_channel_id = self
1145 | |             .src_channel_id()
...    |
1192 | |         Ok(msgs)
1193 | |     }
     | |_____^

error: [Prusti internal error] reference has no fields
    --> relayer/src/channel.rs:1195:5
     |
1195 | /     pub fn build_chan_close_confirm_and_send(&self) -> Result<IbcEvent, ChannelError> {
1196 | |         let dst_msgs = self.build_chan_close_confirm()?;
1197 | |
1198 | |         let events = self
...    |
1218 | |         }
1219 | |     }
     | |_____^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&ibc::ics24_host::identifier::ChannelId>
    --> relayer/src/channel.rs:1222:1
     |
1222 | / pub fn extract_channel_id(event: &IbcEvent) -> Result<&ChannelId, ChannelError> {
1223 | |     match event {
1224 | |         IbcEvent::OpenInitChannel(ev) => ev.channel_id(),
1225 | |         IbcEvent::OpenTryChannel(ev) => ev.channel_id(),
...    |
1230 | |     .ok_or_else(|| ChannelError::missing_event("cannot extract channel_id from result".to_string()))
1231 | | }
     | |_^

warning: [Prusti: unsupported feature] unsupported cast from type 'ibc::ics04_channel::channel::State' to type 'u32'
    --> relayer/src/channel.rs:1251:22
     |
1251 |     let good_state = *existing_channel.state() as u32 <= *expected_channel.state() as u32;
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<config::Config, error::Error>
  --> relayer/src/config/reload.rs:68:5
   |
68 | /     pub fn reload(&self) -> Result<bool, Error> {
69 | |         let new_config = super::load(&self.path).map_err(Error::LoadFailed)?;
70 | |         self.update_config(new_config)
71 | |     }
   | |_____^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
  --> relayer/src/config/reload.rs:88:17
   |
88 |                 debug!("failed to send config update to supervisor, channel is closed");
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this warning originates in the macro `$crate::valueset` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::sync::RwLockReadGuard<'_, config::Config>, std::sync::PoisonError<std::sync::RwLockReadGuard<'_, config::Config>>>
   --> relayer/src/config/reload.rs:98:5
    |
98  | /     fn compute_updates(&self, new: &Config) -> Result<Vec<ConfigUpdate>, Error> {
99  | |         let cur = self.current.read().map_err(|_| Error::PoisonedLock)?;
100 | |
101 | |         let cur_chains = cur.chains_map();
...   |
126 | |             .try_collect()
127 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported type Float(F64)
   --> relayer/src/config/reload.rs:133:12
    |
133 |     match (serde_json::to_value(a), serde_json::to_value(b)) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
  --> relayer/src/config/types.rs:33:17
   |
33 |                 &format!("a usize less than {}", Self::MAX_BOUND).as_str(),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] cast statements that create loans are not supported
  --> relayer/src/config/types.rs:80:17
   |
80 |                 &format!("a usize less than {}", Self::MAX_BOUND).as_str(),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] unsupported type Float(F64)
  --> relayer/src/config.rs:25:5
   |
25 | /     pub const fn new(price: f64, denom: String) -> Self {
26 | |         Self { price, denom }
27 | |     }
   | |_____^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#16r, [&str; 2], Not)
  --> relayer/src/config.rs:32:19
   |
32 |         write!(f, "{}{}", self.price, self.denom)
   |                   ^^^^^^

warning: [Prusti: unsupported feature] unsupported constant value: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(89:319 ~ ibc[9b7e]::timestamp::ZERO_DURATION), const_param_did: None }, substs: [], promoted: None })
   --> relayer/src/config.rs:103:9
    |
103 |         ZERO_DURATION
    |         ^^^^^^^^^^^^^

error: [Prusti internal error] generating fold-unfold Viper statements failed (FailedToObtain(Acc(Field(Field(Local(_8: Ref(closure$0_2239$3$1998113420765798402), Position { line: 0, column: 0, id: 0 }), closure_0: Ref(ref$ref$m_ChainId$_beg_$_end_), Position { line: 0, column: 0, id: 0 }), val_ref: Ref(ref$m_ChainId$_beg_$_end_), Position { line: 0, column: 0, id: 0 }), read)))
   --> relayer/src/config.rs:119:5
    |
119 | /     pub fn has_chain(&self, id: &ChainId) -> bool {
120 | |         self.chains.iter().any(|c| c.id == *id)
121 | |     }
    | |_____^

warning: [Prusti: unsupported feature] higher-ranked lifetimes and types are not supported
   --> relayer/src/config.rs:124:9
    |
124 |         self.chains.iter().find(|c| c.id == *id)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] higher-ranked lifetimes and types are not supported
   --> relayer/src/config.rs:128:9
    |
128 |         self.chains.iter_mut().find(|c| c.id == *id)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::option::Option<&config::ChainConfig>
   --> relayer/src/config.rs:134:5
    |
134 | /     pub fn packets_on_channel_allowed(
135 | |         &self,
136 | |         chain_id: &ChainId,
137 | |         port_id: &PortId,
...   |
147 | |         }
148 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#8r, config::Strategy, Not)
   --> relayer/src/config.rs:151:33
    |
151 |         self.global.strategy == Strategy::HandshakeAndPackets
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: [Prusti internal error] failed to obtain the type of the captured path #0 of closure [closure@relayer/src/config.rs:155:32: 155:46]
   --> relayer/src/config.rs:154:5
    |
154 | /     pub fn chains_map(&self) -> HashMap<&ChainId, &ChainConfig> {
155 | |         self.chains.iter().map(|c| (&c.id, c)).collect()
156 | |     }
    | |_____^

warning: [Prusti: unsupported feature] unsupported constant type Ref('_#82r, [&str; 1], Not)
   --> relayer/src/config.rs:200:42
    |
200 |             LogLevel::Error => write!(f, "error"),
    |                                          ^^^^^^^

warning: [Prusti: unsupported feature] tried to encode a projection that accesses the field 0 of a variant without first downcasting its enumeration std::result::Result<std::string::String, std::io::Error>
   --> relayer/src/config.rs:277:1
    |
277 | / pub fn load(path: impl AsRef<Path>) -> Result<Config, Error> {
278 | |     let config_toml = std::fs::read_to_string(&path).map_err(Error::config_io)?;
279 | |
280 | |     let config = toml::from_str::<Config>(&config_toml[..]).map_err(Error::config_decode)?;
281 | |
282 | |     Ok(config)
283 | | }
    | |_^

thread 'rustc' panicked at 'called `Result::unwrap()` on an `Err` value: FailedToObtain(Pred(Field(Field(Field(Variant(Local(self: Ref(m_std$$io$$error$$Repr$_beg_$_end_), Position { line: 0, column: 0, id: 0 }), enum_SimpleMessage: Ref(m_std$$io$$error$$Repr$_beg_$_end_SimpleMessage), Position { line: 0, column: 0, id: 0 }), f$1: Ref(ref$ref$str), Position { line: 0, column: 0, id: 0 }), val_ref: Ref(ref$str), Position { line: 0, column: 0, id: 0 }), val_ref: Ref(str), Position { line: 0, column: 0, id: 0 }), read))', prusti-viper/src/encoder/snapshot/encoder.rs:1634:11
stack backtrace:
   0: rust_begin_unwind
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/std/src/panicking.rs:517:5
   1: core::panicking::panic_fmt
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/core/src/panicking.rs:93:14
   2: core::result::unwrap_failed
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/core/src/result.rs:1617:5
   3: core::result::Result<T,E>::unwrap
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/core/src/result.rs:1299:23
   4: prusti_viper::encoder::snapshot::encoder::SnapshotEncoder::encode_complex
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/snapshot/encoder.rs:1631:25
   5: prusti_viper::encoder::snapshot::encoder::SnapshotEncoder::encode_snapshot_internal
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/snapshot/encoder.rs:723:17
   6: prusti_viper::encoder::snapshot::encoder::SnapshotEncoder::encode_snapshot
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/snapshot/encoder.rs:590:24
   7: prusti_viper::encoder::snapshot::encoder::SnapshotEncoder::snap_app
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/snapshot/encoder.rs:244:40
   8: prusti_viper::encoder::snapshot::encoder::SnapshotEncoder::encode_snapshot_internal
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/snapshot/encoder.rs:666:33
   9: prusti_viper::encoder::snapshot::encoder::SnapshotEncoder::encode_snapshot
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/snapshot/encoder.rs:590:24
  10: prusti_viper::encoder::snapshot::encoder::SnapshotEncoder::encode_type
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/snapshot/encoder.rs:541:9
  11: prusti_viper::encoder::encoder::Encoder::encode_snapshot_type
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/encoder.rs:885:9
  12: prusti_viper::encoder::spec_function_encoder::SpecFunctionEncoder::encode_local
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/spec_function_encoder.rs:161:24
  13: prusti_viper::encoder::spec_function_encoder::SpecFunctionEncoder::encode_pre_spec_func::{{closure}}
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/spec_function_encoder.rs:82:26
  14: core::iter::adapters::map::map_try_fold::{{closure}}
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/core/src/iter/adapters/map.rs:91:28
  15: core::iter::traits::iterator::Iterator::try_fold
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/core/src/iter/traits/iterator.rs:1994:21
  16: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/core/src/iter/adapters/map.rs:117:9
  17: <core::iter::adapters::ResultShunt<I,E> as core::iter::traits::iterator::Iterator>::try_fold
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/core/src/iter/adapters/mod.rs:177:9
  18: core::iter::traits::iterator::Iterator::find
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/core/src/iter/traits/iterator.rs:2381:9
  19: <core::iter::adapters::ResultShunt<I,E> as core::iter::traits::iterator::Iterator>::next
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/core/src/iter/adapters/mod.rs:159:9
  20: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/alloc/src/vec/spec_from_iter_nested.rs:23:32
  21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/alloc/src/vec/spec_from_iter.rs:33:9
  22: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/alloc/src/vec/mod.rs:2485:9
  23: core::iter::traits::iterator::Iterator::collect
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/core/src/iter/traits/iterator.rs:1745:9
  24: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}}
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/core/src/result.rs:1887:53
  25: core::iter::adapters::process_results
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/core/src/iter/adapters/mod.rs:148:17
  26: <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/core/src/result.rs:1887:9
  27: core::iter::traits::iterator::Iterator::collect
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/library/core/src/iter/traits/iterator.rs:1745:9
  28: prusti_viper::encoder::spec_function_encoder::SpecFunctionEncoder::encode_pre_spec_func
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/spec_function_encoder.rs:79:48
  29: prusti_viper::encoder::spec_function_encoder::SpecFunctionEncoder::encode
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/spec_function_encoder.rs:69:24
  30: prusti_viper::encoder::encoder::Encoder::encode_spec_funcs
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/encoder.rs:762:26
  31: prusti_viper::encoder::encoder::Encoder::encode_const_expr
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/encoder.rs:1025:17
  32: prusti_viper::encoder::mir_encoder::MirEncoder::encode_operand_expr
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/mir_encoder/mod.rs:445:19
  33: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode_impure_function_call
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/procedure_encoder.rs:2647:40
  34: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode_terminator
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/procedure_encoder.rs:2291:37
  35: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode_statement_at
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/procedure_encoder.rs:1085:13
  36: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode_block_terminator
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/procedure_encoder.rs:1046:42
  37: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode_block
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/procedure_encoder.rs:943:43
  38: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode_blocks_group
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/procedure_encoder.rs:542:17
  39: prusti_viper::encoder::procedure_encoder::ProcedureEncoder::encode
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/procedure_encoder.rs:412:49
  40: prusti_viper::encoder::encoder::Encoder::encode_procedure
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/encoder.rs:720:36
  41: prusti_viper::encoder::encoder::Encoder::process_encoding_queue
             at /home/zgrannan/prusti-dev/prusti-viper/src/encoder/encoder.rs:1304:37
  42: prusti_viper::verifier::Verifier::verify
             at /home/zgrannan/prusti-dev/prusti-viper/src/verifier.rs:243:9
  43: prusti_driver::verifier::verify
             at /home/zgrannan/prusti-dev/prusti/src/verifier.rs:48:39
  44: <prusti_driver::callbacks::PrustiCompilerCalls as rustc_driver::Callbacks>::after_analysis::{{closure}}
             at /home/zgrannan/prusti-dev/prusti/src/callbacks.rs:105:17
  45: rustc_interface::passes::QueryContext::enter::{{closure}}
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/compiler/rustc_interface/src/passes.rs:779:42
  46: rustc_middle::ty::context::tls::enter_context::{{closure}}
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/compiler/rustc_middle/src/ty/context.rs:1782:50
  47: rustc_middle::ty::context::tls::set_tlv
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/compiler/rustc_middle/src/ty/context.rs:1766:9
  48: rustc_middle::ty::context::tls::enter_context
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/compiler/rustc_middle/src/ty/context.rs:1782:9
  49: rustc_interface::passes::QueryContext::enter
             at /rustc/3d0774d0dc98084d25d95cc1909a8051ebbd9cb1/compiler/rustc_interface/src/passes.rs:779:9
  50: <prusti_driver::callbacks::PrustiCompilerCalls as rustc_driver::Callbacks>::after_analysis
             at /home/zgrannan/prusti-dev/prusti/src/callbacks.rs:66:9
  51: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter
  52: rustc_span::with_source_map
  53: scoped_tls::ScopedKey<T>::set
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.

error: internal compiler error: unexpected panic

note: Prusti or the compiler unexpectedly panicked. This is a bug.

note: We would appreciate a bug report: https://github.com/viperproject/prusti-dev/issues/new

note: Prusti version: commit f13cdda0 2021-08-19 15:00:32 UTC, built on 2021-08-19 17:24:20 UTC

query stack during panic:
end of query stack
warning: `ibc-relayer` (lib) generated 602 warnings
error: could not compile `ibc-relayer` due to 28 previous errors; 602 warnings emitted
